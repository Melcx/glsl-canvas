{"version":3,"sources":["src/glsl.ts","../../node_modules/promise-polyfill/src/index.js","../../node_modules/promise-polyfill/src/finally.js","../../src/logger/logger.ts","../../src/core/common.ts","../../src/context/context.ts","../../src/buffers/buffers.ts","../../src/core/iterable.ts","../../src/geometry/geometry.ts","../../src/geometry/flat-geometry.ts","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../src/textures/textures.ts","../../src/canvas/canvas-timer.ts","../../src/core/subscriber.ts","../../src/geometry/box-geometry.ts","../../src/math/vector3.ts","../../src/geometry/sphere-geometry.ts","../../src/geometry/torus-geometry.ts","../../src/loaders/obj-loader.ts","../../src/uniforms/uniforms.ts","../../src/renderer/renderer.ts","../../src/canvas/canvas.ts"],"names":["glsl","exports","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","_assertThisInitialized","self","ReferenceError","setTimeoutFunc","setTimeout","isArray","x","Boolean","noop","Promise","fn","this","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","reject","promise","resolve","push","newValue","then","finale","thisArg","apply","arguments","_unhandledRejectionFn","len","Handler","done","value","reason","ex","prom","callback","all","arr","args","Array","slice","call","remaining","res","val","race","setImmediate","err","console","warn","LoggerLevel","Common","fetch","url","xhr","XMLHttpRequest","onload","response","responseText","onerror","error","Error","ontimeout","onabort","open","send","Logger","log","_console","enabled","level","Log","_console2","Warn","_console3","ContextVersion","ContextPrecision","ContextMode","DefaultWebGLBufferVertex","DefaultWebGL2BufferVertex","DefaultWebGLFlatFragment","DefaultWebGLMeshVertex","DefaultWebGL2MeshVertex","DefaultWebGLMeshFragment","DefaultWebGL2FlatFragment","DefaultWebGL2MeshFragment","ContextError","ContextDefault","webgl","flat","vertex","fragment","mesh","webgl2","ContextVertexBuffers","Context","getContext_","canvas","options","names","context","getContext","getContext2_","getFragmentVertex","gl","fragmentString","vertexString","isWebGl2","replace","regexp","exec","getIncludes","input","match","regex","promises","index","chunks","join","isWebGl","WebGLRenderingContext","window","WebGL2RenderingContext","inferVersion","source","indexOf","WebGl2","WebGl","inferPrecision","precision","versionDiffers","currentVersion","getBufferVertex","getVertex","mode","Flat","version","getFragment","tryInferContext","attributes","extensions","errorCallback","handleError","errorCode","html","container","parentNode","innerHTML","BrowserSupport","inferContext","supportedExtensions","getSupportedExtensions","forEach","getExtension","Other","tryGetContext","createShader","type","offset","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","locations","program","attachShader","bindAttribLocation","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","createVertexBuffers","vertexBuffers","texcoordIndex","getAttribLocation","texcoord","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionIndex","position","MediumP","BufferFloatType","StringMap","IterableStringMap","values","_proto","has","hasOwnProperty","set","item","get","callbackfn","reduce","initialValue","previous","Geometry","assign","positions","size","createData_","createAttributes_","createBufferData_","array","buffer","createAttribLocation_","name","location","positionBuffer","positionLocation","texcoords","texcoordBuffer","texcoordLocation","normals","normalBuffer","normalLocation","colors","colorBuffer","colorLocation","attachAttributes_","attribLocation","bindAttributes_","fromIndices","indices","FlatGeometry","_Geometry","BuffersDefaultFragment","BuffersDefaultFragment2","Buffer","BW","BH","createFramebuffer","texture","getTexture","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","getFloatType","floatType","extension","extensionName","HALF_FLOAT","HALF_FLOAT_OES","createTexture","activeTexture","TEXTURE0","bindTexture","texImage2D","RGBA16F","RGBA","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","resize","bindFramebuffer","pixels","status","minW","Math","min","minH","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","deleteTexture","IOBuffer","isValid","geometry","_proto2","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","output","render","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawArrays","TRIANGLES","viewport","destroy","Buffers","_IterableStringMap","Constructor","protoProps","staticProps","getBuffers","buffers","count","matches","bufferFragmentString","drawingBufferWidth","drawingBufferHeight","keys","ARRAY_TYPE","out","glMatrix.ARRAY_TYPE","identity","hypot","y","sqrt","TextureSourceType","TextureFilteringType","CanvasTimer","delay","current","delta","paused","start","now","performance","play","pause","next","Listener","event","Subscriber","listeners","Set","logListeners","subscribe","listener","add","unsubscribe","delete","unsubscribeAll","on","off","_this","trigger","_len","data","BoxGeometry","faceColors","j","c","concat","Vector3","z","isVector3","copy","v","normalize","divideScalar","scalar","multiplyScalar","subVectors","a","b","addVectors","crossVectors","ax","ay","az","bx","by","bz","SphereGeometry","ix","iy","phiLength","PI","thetaLength","p","n","thetaEnd","grid","positionRow","uOffset","u","cos","sin","uvx","uvy","d","heightDivisions","TorusGeometry","normal","p1","p2","B","T","N","calculatePositionOnCurve","cx","cy","q","radius","cu","su","quOverP","cs","COLORS","CI","ObjLoader","load","text","parse","parseIndices","faceIndices","k","l","NaN","parseFaces","F","V","VN","VT","_this2","si","vl","fill","rgb","_this3","split","line","trim","map","parseFloat","f","parseInt","boundingBox","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","dx","dy","dz","unrapUvw","pitch","asin","yaw","atan2","tx","ty","TextureImageExtensions","TextureVideoExtensions","TextureExtensions","isTextureData","object","UniformMethod","UniformType","Texture","_Subscriber","workpath","filtering","Linear","valid","dirty","animated","powerOf2","isPowerOf2","isSafari","test","navigator","userAgent","isTextureUrl","isTexture","urlElementOrData","getTextureOptions","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","prev","curr","params","decodeURIComponent","document","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","element","width","height","setData","Uint8Array","setUrl","setElement","sourceType","Url","src","String","ext","pop","toLowerCase","createElement","setAttribute","loop","muted","addEventListener","crossOrigin","originalElement","Element","video","update","setFiltering","message","JSON","stringify","Data","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","naturalWidth","naturalHeight","UNSIGNED_BYTE","videoWidth","videoHeight","imageBuffer","tryUpdate","MipMap","wrapS","repeat","REPEAT","wrapT","LINEAR_MIPMAP_LINEAR","LINEAR","generateMipmap","Nearest","Textures","clean","createOrUpdate","_this4","textureOptions","flag","METHODS_INT","Uniform1i","Uniform2i","Uniform3i","Uniform4i","METHODS_FLOAT","Uniform1f","Uniform2f","Uniform3f","Uniform4f","METHODS_INTV","Uniform1iv","Uniform2iv","Uniform3iv","Uniform4iv","METHODS_FLOATV","Uniform1fv","Uniform2fv","Uniform3fv","Uniform4fv","Uniform","method","UniformMatrix2fv","UniformMatrix3fv","UniformMatrix4fv","getUniformLocation","UniformTexture","_Uniform","Uniforms","isArrayOfInteger","isInteger","isArrayOfNumber","isArrayOfBoolean","isArrayOfTexture","isArrayOfSampler2D","Sampler2D","getType_","Unknown","subject","Float","Bool","getMethod_","isVector","Int","parseUniform","uniform","isDifferent","Renderer","uniforms","textures","textureList","mouse","radians","drawFunc_","drawArrays_","update_","timer","deltaTime","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","cullFace","FRONT","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","BACK","create_","createGeometry_","createUniforms_","parseGeometry_","Box","Sphere","Torus","createVertex__","hasDelta","hasTime","hasDate","hasMouse","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","projectionMatrix","mat4","modelViewMatrix","normalMatrix","updateUniforms_","updateProjectionMatrix_","updateModelViewMatrix_","updateNormalMatrix_","fieldOfView","aspect","fovy","near","far","nf","tan","Infinity","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","rad","axis","s","t","b00","b01","b02","b10","b11","b12","b20","b21","b22","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","det","Canvas","_Renderer","visible","rect","getBoundingClientRect","devicePixelRatio","style","backgroundColor","getShaders_","success","addListeners_","onLoop","items","of","find","loadAll","getElementsByClassName","filter","urls","hasAttribute","getAttribute","body","onScroll","bind","onClick","onMove","onMousemove","onMouseover","onMouseout","onTouchmove","onTouchend","onTouchstart","addCanvasListeners_","removeCanvasListeners_","removeEventListener","removeListeners_","cancelAnimationFrame","rafId","toggle","mx","my","left","top","clientX","pageX","clientY","pageY","touch","touches","time","checkRender","requestAnimationFrame","setUniform_","loadTexture","isVisible_","innerHeight","documentElement","clientHeight","isAnimated_","isDirty_","sizeDidChanged_","W","ceil","clientWidth","H","parseTextures_","_this5","fragmentVertexString","createContext_","destroyContext_","swapCanvas_","onError","defaultFragment","classList","remove","parseMode_","createBuffers_","createTextures_","_this6","setTexture","updateBuffers_","updateTextures_","canvas_","cloneNode","replaceChild","splice","_this7","keyResolution","path","setUniform","setUniformOfInt","setUniforms"],"mappings":"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","file":"docs/js/glsl-canvas.min.js","sourcesContent":[null,"import promiseFinally from './finally';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = promiseFinally;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n","/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nexport default finallyConstructor;\n","export enum LoggerLevel {\n\tNone = 0,\n\tError = 1,\n\tWarn = 2,\n\tLog = 3,\n}\n\nexport default class Logger {\n\n\tstatic level: LoggerLevel = LoggerLevel.Warn;\n\n\tstatic enabled: boolean = true;\n\n\tstatic log(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Log) {\n\t\t\tconsole.log(...datas);\n\t\t}\n\t}\n\n\tstatic warn(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Warn) {\n\t\t\tconsole.warn(...datas);\n\t\t}\n\t}\n\n\tstatic error(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Error) {\n\t\t\tconsole.error(...datas);\n\t\t}\n\t}\n\n}\n","import 'promise-polyfill';\n\nexport default class Common {\n\tstatic fetch(url: string): Promise<string> {\n\t\t// console.log('fetch', url);\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\n\t\t\txhr.onload = function () {\n\t\t\t\tresolve(xhr.response || xhr.responseText);\n\t\t\t};\n\t\t\txhr.onerror = function (error) {\n\t\t\t\t// console.log(error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.ontimeout = function (error) {\n\t\t\t\t// console.log(error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.onabort = function () {\n\t\t\t\treject(new Error('Aborted'));\n\t\t\t};\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.send(null);\n\t\t})\n\t}\n}\n","import Common from '../core/common';\nimport Logger from '../logger/logger';\n\nexport const DefaultWebGLBufferVertex = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec3 a_normal;\nattribute vec4 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec4 v_color;\nvarying vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main(void) {\n\tgl_Position = a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGL2BufferVertex = `#version 300 es\n\nprecision mediump float;\n\nin vec4 a_position;\nin vec2 a_texcoord;\nin vec3 a_normal;\nin vec4 a_color;\n\nout vec2 v_texcoord;\nout vec3 v_normal;\nout vec4 v_color;\nout vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main() {\n\tgl_Position = a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGLFlatFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGLMeshVertex = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec3 a_normal;\nattribute vec4 a_color;\n\nvarying vec4 v_position;\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec4 v_color;\nvarying vec3 v_light;\n\nuniform float u_time;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main(void) {\n\tvec4 v_position = a_position;\n\t// v_position.y += sin(v_position.x * 0.1) * 10.0;\n\t// v_position.xyz += a_normal * 0.025 + cos(u_time * 5.0) * a_normal * 0.025;\n\tv_position = u_projectionMatrix * u_modelViewMatrix * v_position;\n\tgl_Position = v_position;\n\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0) * 1.5;\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGL2MeshVertex = `#version 300 es\n\nprecision mediump float;\n\nin vec4 a_position;\nin vec2 a_texcoord;\nin vec3 a_normal;\nin vec4 a_color;\n\nout vec2 v_texcoord;\nout vec3 v_normal;\nout vec4 v_color;\nout vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main() {\n\tgl_Position = u_projectionMatrix * u_modelViewMatrix * a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGLMeshFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec3 v_light;\nvarying vec4 v_color;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\tgl_FragColor = vec4(v_color.rgb * color * v_light, 1.0);\n}\n`;\n\nexport const DefaultWebGL2FlatFragment = `#version 300 es\n\nprecision mediump float;\n\nout vec4 outColor;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\toutColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGL2MeshFragment = `#version 300 es\n\nprecision mediump float;\n\nin vec2 v_texcoord;\nin vec3 v_light;\nin vec4 v_color;\n\nout vec4 outColor;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\toutColor = vec4(v_color.rgb * color * v_light, 1.0);\n}\n`;\n\nexport enum ContextVersion {\n\tWebGl = 'webgl',\n\tWebGl2 = 'webgl2',\n}\n\nexport enum ContextPrecision {\n\tLowP = 'lowp',\n\tMediumP = 'mediump',\n\tHighP = 'highp',\n}\n\nexport enum ContextMode {\n\tFlat = 'flat',\n\tBox = 'box',\n\tSphere = 'sphere',\n\tTorus = 'torus',\n}\n\nexport const ContextDefault = {\n\t'webgl': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLFlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLMeshFragment,\n\t\t}\n\t},\n\t'webgl2': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2FlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2MeshFragment,\n\t\t}\n\t}\n};\n\nexport enum ContextError {\n\tBrowserSupport = 1,\n\tOther = 2,\n}\n\nexport interface IContextOptions {\n\talpha?: GLboolean;\n\tantialias?: GLboolean;\n\tdepth?: GLboolean;\n\tfailIfMajorPerformanceCaveat?: boolean;\n\t// powerPreference?: WebGLPowerPreference;\n\tpremultipliedAlpha?: GLboolean;\n\tpreserveDrawingBuffer?: GLboolean;\n\tstencil?: GLboolean;\n}\n\nexport class ContextVertexBuffers {\n\ttexcoord: WebGLBuffer;\n\tposition: WebGLBuffer;\n}\n\nexport default class Context {\n\n\tstatic precision: ContextPrecision = ContextPrecision.MediumP;\n\tstatic lastError: string = '';\n\n\tstatic getContext_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext {\n\t\tconst names = ['webgl', 'experimental-webgl'];\n\t\tlet context = null;\n\t\tfor (let i = 0; i < names.length; ++i) {\n\t\t\ttry {\n\t\t\t\tcontext = canvas.getContext(names[i], options) as WebGLRenderingContext;\n\t\t\t} catch (e) {\n\t\t\t\tif (context) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getContext2_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGL2RenderingContext {\n\t\tlet context = null;\n\t\ttry {\n\t\t\tcontext = canvas.getContext('webgl2', options) as WebGL2RenderingContext;\n\t\t} catch (e) {\n\t\t\t// console.error('GlslCanvas.Context.getContext2_.error', e);\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getFragmentVertex(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string): string {\n\t\tlet vertexString;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*VERTEX)(?:\\s*\\))|(?:#ifdef)(?:\\s*VERTEX)(?:\\s*))/gm;\n\t\t\tlet matches;\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\t\tvertexString = Context.isWebGl2(gl) ? `#version 300 es\n#define VERTEX\n${fragmentString}` : `#define VERTEX\n${fragmentString}`;\n\t\t\t}\n\t\t}\n\t\t// console.log('vertexString', vertexString);\n\t\treturn vertexString;\n\t}\n\n\tstatic getIncludes(input: string | undefined): Promise<string | undefined> {\n\t\tif (input === undefined) {\n\t\t\treturn Promise.resolve(input);\n\t\t}\n\t\tconst regex = /#include\\s*['|\"](.*.glsl)['|\"]/gm;\n\t\tconst promises = [];\n\t\tlet i = 0;\n\t\tlet match;\n\t\twhile ((match = regex.exec(input)) !== null) {\n\t\t\tpromises.push(Promise.resolve(input.slice(i, match.index)));\n\t\t\ti = match.index + match[0].length;\n\t\t\tpromises.push(Common.fetch(match[1]));\n\t\t}\n\t\tpromises.push(Promise.resolve(input.slice(i)));\n\t\treturn Promise.all(promises).then(chunks => {\n\t\t\treturn chunks.join('');\n\t\t});\n\t}\n\n\tstatic isWebGl(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\treturn context instanceof WebGLRenderingContext;\n\t}\n\n\tstatic isWebGl2(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\t// console.log(context);\n\t\t// return context !== undefined && typeof (context as any).bindBufferRange === 'function';\n\t\treturn (window as any).WebGL2RenderingContext && context instanceof WebGL2RenderingContext;\n\t}\n\n\tstatic inferVersion(vertexString?: string, fragmentString?: string): ContextVersion {\n\t\tconst source: string = vertexString || fragmentString;\n\t\tif (source) {\n\t\t\treturn source.indexOf('#version 300 es') === 0 ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t} else {\n\t\t\treturn ContextVersion.WebGl;\n\t\t}\n\t}\n\n\tstatic inferPrecision(fragmentString: string): ContextPrecision {\n\t\tconst precision: RegExpMatchArray = fragmentString.match(/precision\\s+(.+)\\s+float/);\n\t\tif (precision && precision.length > 1) {\n\t\t\tContext.precision = precision[1] as ContextPrecision;\n\t\t}\n\t\t// console.log('precision', Context.precision);\n\t\treturn Context.precision;\n\t}\n\n\tstatic versionDiffers(gl: WebGLRenderingContext | WebGL2RenderingContext, vertexString?: string, fragmentString?: string): boolean {\n\t\tif (gl) {\n\t\t\tconst currentVersion = this.isWebGl2(gl) ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t\tconst newVersion = Context.inferVersion(vertexString, fragmentString);\n\t\t\treturn newVersion !== currentVersion;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic getBufferVertex(gl: WebGLRenderingContext | WebGL2RenderingContext): string {\n\t\treturn this.isWebGl2(gl) ? DefaultWebGL2BufferVertex : DefaultWebGLBufferVertex;\n\t}\n\n\tstatic getVertex(vertexString?: string, fragmentString?: string, mode: ContextMode | string = ContextMode.Flat): string {\n\t\tif (vertexString) {\n\t\t\treturn vertexString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].vertex;\n\t\t}\n\t}\n\n\tstatic getFragment(vertexString?: string, fragmentString?: string, mode: ContextMode | string = ContextMode.Flat): string {\n\t\tif (fragmentString) {\n\t\t\treturn fragmentString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].fragment;\n\t\t}\n\t}\n\n\tstatic tryInferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, extensions: string[] = [], errorCallback: Function): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext | WebGL2RenderingContext = Context.inferContext(vertexString, fragmentString, canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tif (!(this.isWebGl2(context)) && extensions.indexOf('OES_standard_derivatives') === -1) {\n\t\t\t\textensions.push('OES_standard_derivatives');\n\t\t\t}\n\t\t\tconst supportedExtensions = context.getSupportedExtensions();\n\t\t\textensions.forEach(key => {\n\t\t\t\tif (supportedExtensions.indexOf(key) !== -1) {\n\t\t\t\t\tcontext.getExtension(key);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn(`GlslCanvas ${key} not supported`);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// context.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic tryGetContext(canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, errorCallback: Function): WebGLRenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext = Context.getContext_(canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tcontext.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic inferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\treturn version === ContextVersion.WebGl2 ? this.getContext2_(canvas, options) : this.getContext_(canvas, options);\n\t}\n\n\tstatic createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, source: string, type: number, offset: number = 0): WebGLShader {\n\t\tconst shader = gl.createShader(type);\n\t\tsource = source.replace(/precision\\s+(.+)\\s+float/, `precision ${Context.precision} float`);\n\t\tgl.shaderSource(shader, source);\n\t\tgl.compileShader(shader);\n\t\tconst compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tif (!compiled) {\n\t\t\t// Something went wrong during compilation; get the error\n\t\t\tContext.lastError = gl.getShaderInfoLog(shader);\n\t\t\t// console.log('lastError', Context.lastError);\n\t\t\tLogger.error(`*** Error compiling shader: ${Context.lastError}`);\n\t\t\t// main.trigger('error', {\n\t\t\tgl.deleteShader(shader);\n\t\t\tthrow ({\n\t\t\t\tshader: shader,\n\t\t\t\tsource: source,\n\t\t\t\ttype: type,\n\t\t\t\terror: Context.lastError,\n\t\t\t\toffset: offset\n\t\t\t});\n\t\t}\n\t\treturn shader;\n\t}\n\n\tstatic createProgram(gl: WebGLRenderingContext | WebGL2RenderingContext, shaders: WebGLShader[], attributes?: any[], locations?: number[]): WebGLProgram {\n\t\tconst program = gl.createProgram();\n\t\tfor (let i = 0; i < shaders.length; ++i) {\n\t\t\tgl.attachShader(program, shaders[i]);\n\t\t}\n\t\tif (attributes && locations) {\n\t\t\tfor (let i = 0; i < attributes.length; ++i) {\n\t\t\t\tgl.bindAttribLocation(program, locations ? locations[i] : i, attributes[i]);\n\t\t\t}\n\t\t}\n\t\tgl.linkProgram(program);\n\t\tgl.validateProgram(program);\n\t\t// Check the link status\n\t\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\t\tif (!linked) {\n\t\t\t// something went wrong with the link\n\t\t\tContext.lastError = gl.getProgramInfoLog(program);\n\t\t\tLogger.error(`Error in program linking: ${Context.lastError}`);\n\t\t\tgl.deleteProgram(program);\n\t\t\treturn null;\n\t\t}\n\t\tgl.useProgram(program);\n\t\treturn program;\n\t}\n\n\tstatic createVertexBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram): ContextVertexBuffers {\n\t\tconst vertexBuffers: ContextVertexBuffers = new ContextVertexBuffers();\n\t\tconst texcoordIndex: number = gl.getAttribLocation(program, 'a_texcoord');\n\t\tvertexBuffers.texcoord = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.texcoord);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(texcoordIndex);\n\t\tgl.vertexAttribPointer(texcoordIndex, 2, gl.FLOAT, false, 0, 0);\n\t\tconst positionIndex: number = gl.getAttribLocation(program, 'a_position');\n\t\tvertexBuffers.position = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.position);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(positionIndex);\n\t\tgl.vertexAttribPointer(positionIndex, 2, gl.FLOAT, false, 0, 0);\n\t\treturn vertexBuffers;\n\t}\n\n}\n","import Context from '../context/context';\nimport IterableStringMap from '../core/iterable';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\n\nexport const BuffersDefaultFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid main(){\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}`;\n\nexport const BuffersDefaultFragment2 = `#version 300 es\n\nprecision mediump float;\n\nout vec4 outColor;\n\nvoid main() {\n\toutColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n`;\n\nexport enum BufferFloatType {\n\tFLOAT = 0,\n\tHALF_FLOAT,\n}\n\nexport class Buffer {\n\n\tstatic floatType: BufferFloatType = BufferFloatType.HALF_FLOAT;\n\ttexture: WebGLTexture;\n\tbuffer: WebGLFramebuffer;\n\tBW: number;\n\tBH: number;\n\tindex: number;\n\n\tconstructor(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number) {\n\t\tconst buffer = gl.createFramebuffer();\n\t\tconst texture = this.getTexture(gl, BW, BH, index);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tthis.texture = texture;\n\t\tthis.buffer = buffer;\n\t\tthis.BW = BW;\n\t\tthis.BH = BH;\n\t\tthis.index = index;\n\t}\n\n\tgetFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\tlet floatType: number, extension;\n\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_float' : 'OES_texture_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = gl.FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t} else {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_half_float' : 'OES_texture_half_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = extension.HALF_FLOAT_OES;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t}\n\t\treturn floatType;\n\t}\n\n\tgetTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number): WebGLTexture {\n\t\tconst floatType = this.getFloatType(gl);\n\t\tconst texture = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, (Context.isWebGl2(gl) ? (gl as WebGL2RenderingContext).RGBA16F : gl.RGBA), BW, BH, 0, gl.RGBA, floatType, null);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t}\n\t\t\treturn this.getTexture(gl, BW, BH, index);\n\t\t}\n\t\treturn texture;\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\tif (BW !== this.BW || BH !== this.BH) {\n\t\t\tconst buffer = this.buffer;\n\t\t\tconst texture = this.texture;\n\t\t\tconst index = this.index;\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\tconst minW = Math.min(BW, this.BW);\n\t\t\tconst minH = Math.min(BH, this.BH);\n\t\t\tlet pixels: Float32Array;\n\t\t\tlet floatType = this.getFloatType(gl);\n\t\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tpixels = new Float32Array(minW * minH * 4);\n\t\t\t\tgl.readPixels(0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tconst newIndex = index + 1; // temporary index\n\t\t\tconst newTexture = this.getTexture(gl, BW, BH, newIndex);\n\t\t\tfloatType = this.getFloatType(gl);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tif (pixels) {\n\t\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tconst newBuffer = gl.createFramebuffer();\n\t\t\t/*\n\t\t\tif (!newBuffer) {\n\t\t\t\tLogger.error('Failed to create the frame buffer object');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t*/\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tgl.deleteTexture(texture);\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, newTexture);\n\t\t\tthis.index = index;\n\t\t\tthis.texture = newTexture;\n\t\t\tthis.buffer = newBuffer;\n\t\t\tthis.BW = BW;\n\t\t\tthis.BH = BH;\n\t\t}\n\t}\n\n}\n\nexport class IOBuffer {\n\n\tprogram: WebGLProgram;\n\tgeometry: Geometry;\n\tinput: Buffer;\n\toutput: Buffer;\n\tindex: number;\n\tkey: string;\n\tvertexString: string;\n\tfragmentString: string;\n\tBW: number;\n\tBH: number;\n\tisValid: boolean = false;\n\n\tconstructor(index: number, key: string, vertexString: string, fragmentString: string) {\n\t\tthis.index = index;\n\t\tthis.key = key;\n\t\tthis.vertexString = vertexString;\n\t\tthis.fragmentString = fragmentString;\n\t\tthis.geometry = new FlatGeometry();\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\tconst vertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\tlet fragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER, 1);\n\t\tif (!fragmentShader) {\n\t\t\tfragmentShader = Context.createShader(gl, Context.isWebGl2(gl) ? BuffersDefaultFragment2 : BuffersDefaultFragment, gl.FRAGMENT_SHADER);\n\t\t\tthis.isValid = false;\n\t\t} else {\n\t\t\tthis.isValid = true;\n\t\t}\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]);\n\t\tif (!program) {\n\t\t\tthis.isValid = false;\n\t\t\tgl.deleteShader(vertexShader);\n\t\t\tgl.deleteShader(fragmentShader);\n\t\t\treturn;\n\t\t}\n\t\tthis.geometry.create(gl, program);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tconst input = new Buffer(gl, BW, BH, this.index + 0);\n\t\tconst output = new Buffer(gl, BW, BH, this.index + 2);\n\t\tthis.program = program;\n\t\tthis.input = input;\n\t\tthis.output = output;\n\t\t// console.log(geometry.position.length / 3, geometry.size);\n\t\t// console.log(gl.getProgramInfoLog(program));\n\t\t// Context.lastError = gl.getProgramInfoLog(program);\n\t\t// Logger.warn(`Error in program linking: ${Context.lastError}`);\n\t}\n\n\trender(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\tgl.useProgram(this.program);\n\t\t// gl.activeTexture(gl.TEXTURE0);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.input.texture);\n\t\t// gl.viewport(0, 0, BW, BH);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.output.buffer);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.output.texture);\n\t\t// console.log(this.output.texture);\n\t\t// console.log('binding', gl.getParameter(gl.FRAMEBUFFER_BINDING));\n\t\t// gl.enable(gl.DEPTH_TEST); // Enable depth testing\n\t\t// gl.depthFunc(gl.LEQUAL); // Near things obscure far things\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t// Clear the canvas before we start drawing on it.\n\t\t\tgl.clearColor(0, 0, 0, 1);  // black\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\t}\n\t\t// this.geometry.createAttributes_(gl, this.program);\n\t\t// this.geometry.bindAttributes_(gl, this.program);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// console.log(this.geometry.size);\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// console.log(BW, BH);\n\t\t// console.log(gl.getProgramInfoLog(this.program));\n\t\t// swap\n\t\tconst input = this.input;\n\t\t// const output = this.output;\n\t\tthis.input = this.output;\n\t\tthis.output = input;\n\t\t// console.log('swap');\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\tgl.useProgram(this.program);\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tthis.input.resize(gl, BW, BH);\n\t\tthis.output.resize(gl, BW, BH);\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t\tgl.deleteProgram(this.program);\n\t\tthis.program = null;\n\t\tthis.input = null;\n\t\tthis.output = null;\n\t}\n\n}\n\nexport default class Buffers extends IterableStringMap<IOBuffer> {\n\n\tget count(): number {\n\t\treturn Object.keys(this.values).length * 4;\n\t}\n\n\tstatic getBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string, vertexString: string): Buffers {\n\t\tconst buffers: Buffers = new Buffers();\n\t\tlet count = 0;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm;\n\t\t\tlet matches;\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\t\tconst i = matches[3] || matches[4];\n\t\t\t\tconst key = 'u_buffer' + i;\n\t\t\t\tconst bufferFragmentString = Context.isWebGl2(gl) ? `#version 300 es\n#define BUFFER_${i}\n${fragmentString}` : `#define BUFFER_${i}\n${fragmentString}`;\n\t\t\t\tconst buffer = new IOBuffer(count, key, vertexString, bufferFragmentString);\n\t\t\t\tbuffer.create(gl, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\tif (buffer.program) {\n\t\t\t\t\tbuffers.set(key, buffer);\n\t\t\t\t} else {\n\t\t\t\t\tthrow (`buffer error ${key}`);\n\t\t\t\t}\n\t\t\t\tcount += 4;\n\t\t\t}\n\t\t}\n\t\treturn buffers;\n\t}\n\n}\n","export class NumberMap<T> { [key: number]: T; };\nexport class StringMap<T> { [key: string]: T; };\n\nexport default class IterableStringMap<T> {\n\n\tvalues: StringMap<T> = new StringMap<T>();\n\n\thas(key: string) {\n\t\treturn this.values.hasOwnProperty(key);\n\t}\n\n\tset(key: string, item: T) {\n\t\tthis.values[key] = item;\n\t}\n\n\tget(key: string): T {\n\t\treturn this.values[key];\n\t}\n\n\tforEach(callbackfn: Function) {\n\t\tlet i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tcallbackfn(this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t}\n\n\treduce(callbackfn: Function, initialValue?: any) {\n\t\tlet previous = initialValue, i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tprevious = callbackfn(previous, this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t\treturn previous;\n\t}\n\n}\n","export interface IGeometry {\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n}\n\nexport default class Geometry implements IGeometry {\n\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n\n\tpositionBuffer: WebGLBuffer;\n\tcolorBuffer: WebGLBuffer;\n\tnormalBuffer: WebGLBuffer;\n\ttexcoordBuffer: WebGLBuffer;\n\n\tpositionLocation: number;\n\tcolorLocation: number;\n\tnormalLocation: number;\n\ttexcoordLocation: number;\n\n\tsize: number;\n\n\tconstructor(options?: IGeometry) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (this.positions) {\n\t\t\t\tthis.size = this.positions.length / 3;\n\t\t\t}\n\t\t\t/*\n\t\t\tconsole.log(options);\n\t\t\tthis.positions = Geometry.fromIndices(options.indices, options.positions, 3);\n\t\t\tthis.normals = Geometry.fromIndices(options.indices, options.normals, 3);\n\t\t\tthis.texcoords = Geometry.fromIndices(options.indices, options.texcoords, 2);\n\t\t\tthis.colors = Geometry.fromIndices(options.indices, options.colors, 4);\n\t\t\t*/\n\t\t}\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tthis.createData_();\n\t\tthis.createAttributes_(gl, program);\n\t}\n\n\tcreateBufferData_(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, array: BufferSource) {\n\t\tconst buffer = gl.createBuffer();\n\t\tgl.bindBuffer(type, buffer);\n\t\tgl.bufferData(type, array, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\tcreateAttribLocation_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram, name: string, size: number, type: number) {\n\t\tconst location: number = gl.getAttribLocation(program, name);\n\t\tgl.enableVertexAttribArray(location);\n\t\tgl.vertexAttribPointer(location, size, type, false, 0, 0);\n\t\treturn location;\n\t}\n\n\tcreateAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tthis.positionBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions));\n\t\t\tthis.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tthis.texcoordBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.texcoords));\n\t\t\tthis.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tthis.normalBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.normals));\n\t\t\tthis.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tthis.colorBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.colors));\n\t\t\tthis.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t\t/*\n\t\tconsole.log('positionLocation', this.positionLocation);\n\t\tconsole.log('texcoordLocation', this.texcoordLocation);\n\t\tconsole.log('normalLocation', this.normalLocation);\n\t\tconsole.log('colorLocation', this.colorLocation);\n\t\t*/\n\t}\n\n\tattachAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tlet attribLocation: number;\n\t\tif (this.positions) {\n\t\t\t// this.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_position');\n\t\t\tgl.enableVertexAttribArray(attribLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\t\t\tgl.vertexAttribPointer(attribLocation, this.positions.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t\t// console.log('positionLocation', attribLocation);\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\t// this.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_texcoord');\n\t\t\tgl.enableVertexAttribArray(this.texcoordLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\t\t\tgl.vertexAttribPointer(this.texcoordLocation, this.texcoords.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t\t// console.log('texcoordLocation', attribLocation);\n\t\t}\n\t\tif (this.normals) {\n\t\t\t// this.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_normal');\n\t\t\tgl.enableVertexAttribArray(this.normalLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n\t\t\tgl.vertexAttribPointer(this.normalLocation, this.normals.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t\t// console.log('normalLocation', attribLocation);\n\t\t}\n\t\tif (this.colors) {\n\t\t\t// this.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_color');\n\t\t\tgl.enableVertexAttribArray(this.colorLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n\t\t\tgl.vertexAttribPointer(this.colorLocation, this.colors.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t\t// console.log('colorLocation', attribLocation);\n\t\t}\n\t}\n\n\tbindAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t}\n\n\tprotected createData_() {\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [];\n\t\tthis.normals = [];\n\t\tthis.texcoords = [];\n\t\tthis.colors = [];\n\t\tthis.size = 0;\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n\tstatic fromIndices(indices: number[], array: number[], size: number): number[] {\n\t\tconst buffer: number[] = [];\n\t\tindices.forEach(i => {\n\t\t\tbuffer.push.apply(buffer, array.slice(i * size, i * size + size));\n\t\t});\n\t\treturn buffer;\n\t}\n\n}\n","import Geometry from \"./geometry\";\n\nexport default class FlatGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 6;\n\t\tthis.positions = [\n\t\t\t-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0,\n\t\t\t-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t];\n\t\tthis.colors = [\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t];\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// import 'promise-polyfill';\nimport IterableStringMap from '../core/iterable';\nimport Subscriber from '../core/subscriber';\nimport Logger from '../logger/logger';\n\nexport const TextureImageExtensions = ['jpg', 'jpeg', 'png'];\nexport const TextureVideoExtensions = ['ogv', 'webm', 'mp4'];\nexport const TextureExtensions = TextureImageExtensions.concat(TextureVideoExtensions);\n\nexport enum TextureSourceType {\n\tData = 0,\n\tElement = 1,\n\tUrl = 2,\n}\n\nexport enum TextureFilteringType {\n\tMipMap = 'mipmap',\n\tLinear = 'linear',\n\tNearest = 'nearest',\n}\n\nexport interface ITextureData {\n\tdata: Uint8Array;\n\twidth: number;\n\theight: number;\n}\n\nexport interface ITextureOptions {\n\turl?: string;\n\telement?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element;\n\tdata?: Uint8Array;\n\twidth?: number;\n\theight?: number;\n\tfiltering?: TextureFilteringType;\n\trepeat?: boolean;\n\tUNPACK_FLIP_Y_WEBGL?: boolean;\n\tUNPACK_PREMULTIPLY_ALPHA_WEBGL?: number;\n\tTEXTURE_WRAP_S?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n\tTEXTURE_WRAP_T?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n}\n\nexport interface ITextureInput {\n\tkey: string;\n\turl: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData;\n\toptions?: ITextureOptions;\n}\n\nexport function isTextureData(object: any): object is ITextureData {\n\treturn 'data' in object && 'width' in object && 'height' in object;\n}\n\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\nexport class Texture extends Subscriber {\n\n\tkey: string;\n\tindex: number;\n\toptions: ITextureOptions;\n\tworkpath: string;\n\twidth: number;\n\theight: number;\n\n\ttexture: WebGLTexture;\n\tsource: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | Uint8Array;\n\tsourceType: TextureSourceType;\n\tfiltering: TextureFilteringType;\n\turl: string;\n\tvalid: boolean = false;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\tpowerOf2: boolean = false;\n\n\tconstructor(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\tindex: number,\n\t\toptions: ITextureOptions = { filtering: TextureFilteringType.Linear },\n\t\tworkpath?: string,\n\t) {\n\t\tsuper();\n\t\tthis.key = key;\n\t\tthis.index = index;\n\t\tthis.options = options;\n\t\tthis.workpath = workpath;\n\t\tthis.create(gl);\n\t}\n\n\tstatic isPowerOf2(value: number): boolean {\n\t\treturn (value & (value - 1)) === 0;\n\t}\n\n\tstatic isSafari(): boolean {\n\t\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\t}\n\n\tstatic isTextureUrl(text: string): boolean {\n\t\treturn text && (/\\.(jpg|jpeg|png|ogv|webm|mp4)$/i).test(text.split('?')[0]);\n\t}\n\n\tstatic isTexture(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t): boolean {\n\t\tconst options = Texture.getTextureOptions(urlElementOrData);\n\t\treturn options !== undefined;\n\t}\n\n\tstatic getMaxTextureSize(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t};\n\n\tstatic getTextureOptions(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): ITextureOptions {\n\t\tif (typeof urlElementOrData === 'string' && urlElementOrData !== '') {\n\t\t\tif (Texture.isTextureUrl(urlElementOrData)) {\n\t\t\t\toptions.url = urlElementOrData;\n\t\t\t\tif (urlElementOrData.indexOf('?') !== -1) {\n\t\t\t\t\toptions = urlElementOrData.split('?')[1].split('&').reduce(function (prev: ITextureOptions, curr) {\n\t\t\t\t\t\tconst params = curr.split('=');\n\t\t\t\t\t\tconst key = decodeURIComponent(params[0]);\n\t\t\t\t\t\tconst value = decodeURIComponent(params[1]);\n\t\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\t\tcase 'filtering':\n\t\t\t\t\t\t\t\tprev[key] = value as TextureFilteringType;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'repeat':\n\t\t\t\t\t\t\tcase 'UNPACK_FLIP_Y_WEBGL':\n\t\t\t\t\t\t\t\tprev[key] = Boolean(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UNPACK_PREMULTIPLY_ALPHA_WEBGL':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_S':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_T':\n\t\t\t\t\t\t\t\tprev[key] = Number(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, options);\n\t\t\t\t}\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tif (document) {\n\t\t\t\turlElementOrData = document.querySelector(urlElementOrData);\n\t\t\t\t// Logger.log(urlElementOrData);\n\t\t\t}\n\t\t}\n\t\tif (urlElementOrData instanceof HTMLCanvasElement || urlElementOrData instanceof HTMLImageElement || urlElementOrData instanceof HTMLVideoElement) {\n\t\t\toptions.element = urlElementOrData;\n\t\t\treturn options;\n\t\t} else if (isTextureData(urlElementOrData)) {\n\t\t\toptions.data = urlElementOrData.data;\n\t\t\toptions.width = urlElementOrData.width;\n\t\t\toptions.height = urlElementOrData.height;\n\t\t\treturn options;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcreate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext\n\t): void {\n\t\tthis.texture = gl.createTexture();\n\t\tif (this.texture) {\n\t\t\tthis.valid = true;\n\t\t}\n\t\t// Default to a 1-pixel black texture so we can safely render while we wait for an image to load\n\t\t// See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n\t\t// [255, 255, 255, 255]\n\t\tthis.setData(gl, 1, 1, new Uint8Array([0, 0, 0, 0]), this.options);\n\t\t// this.bindTexture();\n\t\t// this.load(options);\n\t}\n\n\tload(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.options = options;\n\t\tif (typeof options.url === 'string') {\n\t\t\tif (this.url === undefined || options.url !== this.url) {\n\t\t\t\treturn this.setUrl(gl, options.url, options);\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(this);\n\t\t\t}\n\t\t} else if (options.element) {\n\t\t\treturn this.setElement(gl, options.element, options);\n\t\t} else if (options.data && options.width && options.height) {\n\t\t\treturn this.setData(gl, options.width, options.height, options.data, options);\n\t\t} else {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t}\n\n\tsetUrl(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\turl: string,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tif (!this.valid) {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t\tthis.url = url; // save URL reference (will be overwritten when element is loaded below)\n\t\tthis.source = url;\n\t\tthis.sourceType = TextureSourceType.Url;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tconst src = String((url.indexOf(':/') === -1 && this.workpath !== undefined) ? `${this.workpath}/${url}` : url);\n\t\tconst ext = url.split('?')[0].split('.').pop().toLowerCase();\n\t\tconst isVideo = TextureVideoExtensions.indexOf(ext) !== -1;\n\t\tlet element: HTMLVideoElement | HTMLImageElement;\n\t\tlet promise: Promise<Texture>;\n\t\tif (isVideo) {\n\t\t\tLogger.log('GlslCanvas.setUrl video', src);\n\t\t\telement = document.createElement('video'); // new HTMLVideoElement();\n\t\t\telement.setAttribute('preload', 'auto');\n\t\t\t// element.setAttribute('autoplay', 'true');\n\t\t\telement.setAttribute('loop', 'true');\n\t\t\telement.setAttribute('muted', 'true');\n\t\t\telement.setAttribute('playsinline', 'true');\n\t\t\t// element.autoplay = true;\n\t\t\telement.loop = true;\n\t\t\telement.muted = true;\n\t\t\t/*\n\t\t\tif (!(Texture.isSafari() && /(?<!http|https):\\//.test(url))) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\t*/\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\telement.src = src;\n\t\t\telement.addEventListener('canplay', () => {\n\t\t\t\t(element as HTMLVideoElement).play();\n\t\t\t});\n\t\t} else {\n\t\t\tLogger.log('GlslCanvas.setUrl image', src);\n\t\t\telement = document.createElement('img'); // new HTMLImageElement();\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\tif (!(Texture.isSafari() && url.slice(0, 5) === 'data:')) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t}\n\t\treturn promise;\n\t}\n\n\tsetElement(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\telement: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\toptions = this.options = Object.assign(this.options, options);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst originalElement = element;\n\t\t\t// a string element is interpeted as a CSS selector\n\t\t\tif (typeof element === 'string') {\n\t\t\t\telement = document.querySelector(element);\n\t\t\t}\n\t\t\tif (element instanceof HTMLCanvasElement ||\n\t\t\t\telement instanceof HTMLImageElement ||\n\t\t\t\telement instanceof HTMLVideoElement) {\n\t\t\t\tthis.source = element;\n\t\t\t\tthis.sourceType = TextureSourceType.Element;\n\t\t\t\tif (element instanceof HTMLVideoElement) {\n\t\t\t\t\tconst video = element as HTMLVideoElement;\n\t\t\t\t\tvideo.addEventListener('loadeddata', (event) => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.load();\n\t\t\t\t} else if (element instanceof HTMLImageElement) {\n\t\t\t\t\telement.addEventListener('load', () => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\telement.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\tresolve(this);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet message = `the 'element' parameter (\\`element: ${JSON.stringify(originalElement)}\\`) must be a CSS selector string, or a <canvas>, <image> or <video> object`;\n\t\t\t\tLogger.log(`Texture '${this.key}': ${message}`, options);\n\t\t\t\treject(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetData(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\twidth: number,\n\t\theight: number,\n\t\tdata: Uint8Array,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tthis.source = data;\n\t\tthis.sourceType = TextureSourceType.Data;\n\t\tthis.update(gl, options);\n\t\tthis.setFiltering(gl, options);\n\t\treturn Promise.resolve(this);\n\t}\n\n\t// Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n\tupdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.activeTexture(gl.TEXTURE0 + this.index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? 0 : 1));\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || 0);\n\t\tif (this.sourceType === TextureSourceType.Element) {\n\t\t\tif (this.source instanceof HTMLImageElement && this.source.naturalWidth && this.source.naturalHeight) {\n\t\t\t\tthis.width = this.source.naturalWidth;\n\t\t\t\tthis.height = this.source.naturalHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLVideoElement && this.source.videoWidth && this.source.videoHeight) {\n\t\t\t\tthis.width = this.source.videoWidth;\n\t\t\t\tthis.height = this.source.videoHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLCanvasElement) {\n\t\t\t\tthis.width = this.source.width;\n\t\t\t\tthis.height = this.source.height;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t}\n\t\t} else if (this.sourceType === TextureSourceType.Data) {\n\t\t\tconst imageBuffer: ArrayBufferView = this.source as ArrayBufferView;\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageBuffer);\n\t\t}\n\t\tthis.trigger('loaded', this);\n\t}\n\n\ttryUpdate(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\tlet dirty = false;\n\t\tif (this.animated) {\n\t\t\tdirty = true;\n\t\t\tthis.update(gl, this.options);\n\t\t}\n\t\treturn dirty;\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.deleteTexture(this.texture);\n\t\tthis.texture = null;\n\t\tdelete this.source;\n\t\tthis.source = null;\n\t\tthis.valid = false;\n\t}\n\n\tsetFiltering(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tconst powerOf2 = Texture.isPowerOf2(this.width) && Texture.isPowerOf2(this.height);\n\t\tlet filtering = options.filtering || TextureFilteringType.MipMap;\n\t\tlet wrapS = options.TEXTURE_WRAP_S || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tlet wrapT = options.TEXTURE_WRAP_T || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tif (!powerOf2) {\n\t\t\tfiltering = filtering === TextureFilteringType.MipMap ? TextureFilteringType.Linear : filtering;\n\t\t\twrapS = wrapT = gl.CLAMP_TO_EDGE;\n\t\t\tif (options.repeat || options.TEXTURE_WRAP_S || options.TEXTURE_WRAP_T) {\n\t\t\t\tLogger.warn(`GlslCanvas: cannot repeat texture ${options.url} cause is not power of 2.`);\n\t\t\t}\n\t\t}\n\t\tthis.powerOf2 = powerOf2;\n\t\tthis.filtering = filtering;\n\t\t// this.bindTexture();\n\t\t// WebGL has strict requirements on non-power-of-2 textures:\n\t\t// No mipmaps and must clamp to edge\n\t\t// For power-of-2 textures, the following presets are available:\n\t\t// mipmap: linear blend from nearest mip\n\t\t// linear: linear blend from original image (no mips)\n\t\t// nearest: nearest pixel from original image (no mips, 'blocky' look)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\t\tif (this.filtering === TextureFilteringType.MipMap) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t} else if (this.filtering === TextureFilteringType.Nearest) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t} else if (this.filtering === TextureFilteringType.Linear) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t}\n\t}\n}\n\nexport default class Textures extends IterableStringMap<Texture> {\n\n\tcount: number = 0;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\tcreateOrUpdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\tindex: number = 0,\n\t\toptions: ITextureOptions = {},\n\t\tworkpath: string,\n\t): Promise<Texture> {\n\t\tlet texture;\n\t\tconst textureOptions = Texture.getTextureOptions(urlElementOrData, options);\n\t\ttexture = this.get(key);\n\t\tif (!texture) {\n\t\t\ttexture = new Texture(gl, key, index + this.count, textureOptions, workpath);\n\t\t\tthis.count++;\n\t\t\tthis.set(key, texture);\n\t\t}\n\t\tif (textureOptions !== undefined) {\n\t\t\treturn texture.load(gl, textureOptions).then(\n\t\t\t\t(texture) => {\n\t\t\t\t\tif (texture.source instanceof HTMLVideoElement) {\n\t\t\t\t\t\tconst video = texture.source as HTMLVideoElement;\n\t\t\t\t\t\t// Logger.log('video', video);\n\t\t\t\t\t\tvideo.addEventListener('play', () => {\n\t\t\t\t\t\t\t// Logger.log('play', texture.key);\n\t\t\t\t\t\t\ttexture.animated = true;\n\t\t\t\t\t\t\tthis.animated = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('pause', () => {\n\t\t\t\t\t\t\t// Logger.log('pause', texture.key);\n\t\t\t\t\t\t\ttexture.animated = false;\n\t\t\t\t\t\t\tthis.animated = this.reduce((flag: boolean, texture: Texture) => {\n\t\t\t\t\t\t\t\treturn flag || texture.animated;\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('seeked', () => {\n\t\t\t\t\t\t\t// Logger.log('seeked');\n\t\t\t\t\t\t\ttexture.update(gl, texture.options);\n\t\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Logger.log('video');\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tvideo.addEventListener('canplaythrough', () => {\n\t\t\t\t\t\t\t// !!!\n\t\t\t\t\t\t\tthis.intervalID = setInterval(() => {\n\t\t\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\t\t}, 15);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\n\t\t\t\t\t\t\tvideo.currentTime = 0;\n\t\t\t\t\t\t\tvideo.play();\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\treturn texture;\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\treturn Promise.resolve(texture);\n\t\t}\n\t}\n}\n","export default class CanvasTimer {\n\n\tstart: number;\n\tprevious: number;\n\tdelay: number = 0.0;\n\tcurrent: number = 0.0;\n\tdelta: number = 0.0;\n\tpaused: boolean = false;\n\n\tconstructor() {\n\t\tthis.start = this.previous = this.now();\n\t}\n\n\tnow() {\n\t\treturn performance.now();\n\t}\n\n\tplay() {\n\t\tif (this.previous) {\n\t\t\tconst now = this.now();\n\t\t\tthis.delay += (now - this.previous);\n\t\t\tthis.previous = now;\n\t\t}\n\t\t// Logger.log(this.delay);\n\t\tthis.paused = false;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t}\n\n\tnext(): CanvasTimer {\n\t\tconst now = this.now();\n\t\tthis.delta = now - this.previous;\n\t\tthis.current = now - this.start - this.delay;\n\t\tthis.previous = now;\n\t\treturn this;\n\t}\n\n}\n","import Logger from '../logger/logger';\n\nexport class Listener {\n\tevent: string;\n\tcallback: Function;\n\n\tconstructor(\n\t\tevent: string,\n\t\tcallback: Function\n\t) {\n\t\tthis.event = event;\n\t\tthis.callback = callback;\n\t}\n}\n\nexport default class Subscriber {\n\tprivate listeners: Set<Listener> = new Set<Listener>();\n\n\tlogListeners() {\n\t\tthis.listeners.forEach(x => Logger.log(x));\n\t}\n\n\tsubscribe(listener: Listener) {\n\t\tthis.listeners.add(listener);\n\t}\n\n\tunsubscribe(listener: Listener) {\n\t\tthis.listeners.delete(listener);\n\t}\n\n\tunsubscribeAll() {\n\t\tthis.listeners.clear();\n\t}\n\n\ton(event: string, callback: Function) {\n\t\tthis.listeners.add(new Listener(event, callback));\n\t\treturn this;\n\t}\n\n\toff(event: string, callback?: Function) {\n\t\tif (callback) {\n\t\t\tthis.listeners.delete(new Listener(event, callback));\n\t\t} else {\n\t\t\tthis.listeners.forEach(x => {\n\t\t\t\tif (x.event === event) {\n\t\t\t\t\tthis.listeners.delete(x);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\ttrigger(event: string, ...data: any[]) {\n\t\tthis.listeners.forEach(x => {\n\t\t\tif (x.event === event && typeof x.callback === 'function') {\n\t\t\t\tx.callback(...data);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n}\n","import Geometry from \"./geometry\";\n\nexport default class BoxGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 36;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [\n\t\t\t// Front face\n\t\t\t-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t// Back face\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\n\t\t\t// Top face\n\t\t\t-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\n\t\t\t// Bottom face\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,\n\t\t\t// Right face\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,\n\t\t\t// Left face\n\t\t\t-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Top\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Bottom\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Right\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Left\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t// Top\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t// Bottom\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t// Right\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t// Left\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t];\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tconst faceColors = [\n\t\t\t[1.0, 1.0, 1.0, 1.0],    // Front face: white\n\t\t\t[1.0, 0.0, 0.0, 1.0],    // Back face: red\n\t\t\t[0.0, 1.0, 0.0, 1.0],    // Top face: green\n\t\t\t[0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\n\t\t\t[1.0, 1.0, 0.0, 1.0],    // Right face: yellow\n\t\t\t[1.0, 0.0, 1.0, 1.0],    // Left face: purple\n\t\t];\n\t\t// Convert the array of colors into a table for all the vertices.\n\t\tlet colors: number[] = [];\n\t\tfor (var j = 0; j < faceColors.length; ++j) {\n\t\t\tconst c = faceColors[j];\n\t\t\t// Repeat each color four times for the four vertices of the face\n\t\t\tcolors = colors.concat(c, c, c, c, c, c);\n\t\t}\n\t\tthis.colors = colors;\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n}\n","export default class Vector3 {\n\n\tisVector3: boolean = true;\n\tx: number;\n\ty: number;\n\tz: number;\n\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tcopy(v: Vector3): Vector3 {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\treturn this;\n\t}\n\n\tlength(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t}\n\n\tnormalize(): Vector3 {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\n\tdivideScalar(scalar: number): Vector3 {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tmultiplyScalar(scalar: number): Vector3 {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\treturn this;\n\t}\n\n\tsubVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\treturn this;\n\t}\n\n\taddVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\treturn this;\n\t}\n\n\tcrossVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\t\treturn this;\n\t}\n\n\t/*\n\tset(x, y, z) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetScalar(scalar) {\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\treturn this;\n\t}\n\n\tsetX(x) {\n\t\tthis.x = x;\n\t\treturn this;\n\t}\n\n\tsetY(y) {\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetZ(z) {\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetComponent(index, value) {\n\t\tswitch (index) {\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetComponent(index) {\n\t\tswitch (index) {\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t}\n\n\tclone() {\n\t\treturn new Vector3(this.x, this.y, this.z);\n\t}\n\n\tadd(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.addVectors(v, w);\n\t\t}\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\treturn this;\n\t}\n\n\taddScalar(s) {\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\treturn this;\n\t}\n\n\taddScaledVector(v, s) {\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\treturn this;\n\t}\n\n\tsub(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.subVectors(v, w);\n\t\t}\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\treturn this;\n\t}\n\n\tsubScalar(s) {\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\treturn this;\n\t}\n\n\n\tmultiply(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.multiplyVectors(v, w);\n\t\t}\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\treturn this;\n\t}\n\n\tmultiplyVectors(a:Vector3, b:Vector3):Vector3 {\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\t\treturn this;\n\t}\n\n\tapplyMatrix3(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\treturn this;\n\t}\n\n\tapplyNormalMatrix(m) {\n\t\treturn this.applyMatrix3(m).normalize();\n\t}\n\n\tapplyMatrix4(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\treturn this;\n\t}\n\n\tapplyQuaternion(q) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\t\t// calculate quat * vector\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\t\t// calculate result * inverse quat\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\t\treturn this;\n\t}\n\n\tproject(camera) {\n\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t}\n\n\tunproject(camera) {\n\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t}\n\n\ttransformDirection(m) {\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\treturn this.normalize();\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\treturn this;\n\t}\n\n\tmin(v) {\n\t\tthis.x = Math.min(this.x, v.x);\n\t\tthis.y = Math.min(this.y, v.y);\n\t\tthis.z = Math.min(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tmax(v) {\n\t\tthis.x = Math.max(this.x, v.x);\n\t\tthis.y = Math.max(this.y, v.y);\n\t\tthis.z = Math.max(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tclamp(min, max) {\n\t\t// assumes min < max, componentwise\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\treturn this;\n\t}\n\n\tclampScalar(minVal, maxVal) {\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\treturn this;\n\t}\n\n\tclampLength(min, max) {\n\t\tvar length = this.length();\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t}\n\n\tfloor() {\n\t\tthis.x = Math.floor(this.x);\n\t\tthis.y = Math.floor(this.y);\n\t\tthis.z = Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tceil() {\n\t\tthis.x = Math.ceil(this.x);\n\t\tthis.y = Math.ceil(this.y);\n\t\tthis.z = Math.ceil(this.z);\n\t\treturn this;\n\t}\n\n\tround() {\n\t\tthis.x = Math.round(this.x);\n\t\tthis.y = Math.round(this.y);\n\t\tthis.z = Math.round(this.z);\n\t\treturn this;\n\t}\n\n\troundToZero() {\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n\t\tthis.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tnegate() {\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\treturn this;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t}\n\n\t// TODO lengthSquared?\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t}\n\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t}\n\n\tsetLength(length) {\n\t\treturn this.normalize().multiplyScalar(length);\n\t}\n\n\tlerp(v, alpha) {\n\t\tthis.x += (v.x - this.x) * alpha;\n\t\tthis.y += (v.y - this.y) * alpha;\n\t\tthis.z += (v.z - this.z) * alpha;\n\t\treturn this;\n\t}\n\n\tlerpVectors(v1, v2, alpha) {\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n\t}\n\n\tcross(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.crossVectors(v, w);\n\t\t}\n\t\treturn this.crossVectors(this, v);\n\t}\n\n\tprojectOnVector(v) {\n\t\tvar denominator = v.lengthSq();\n\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\tvar scalar = v.dot(this) / denominator;\n\t\treturn this.copy(v).multiplyScalar(scalar);\n\t}\n\n\tprojectOnPlane(planeNormal) {\n\t\tconst v = new Vector3();\n\t\tv.copy(this).projectOnVector(planeNormal);\n\t\treturn this.sub(v);\n\t}\n\n\treflect(normal) {\n\t\tconst v = new Vector3();\n\t\treturn this.sub(v.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t}\n\n\tangleTo(v) {\n\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\tif (denominator === 0) return Math.PI / 2;\n\t\tvar theta = this.dot(v) / denominator;\n\t\t// clamp, to handle numerical problems\n\t\treturn Math.acos(MathUtils.clamp(theta, - 1, 1));\n\t}\n\n\tdistanceTo(v) {\n\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t}\n\n\tdistanceToSquared(v) {\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\t\treturn dx * dx + dy * dy + dz * dz;\n\t}\n\n\tmanhattanDistanceTo(v) {\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t}\n\n\tsetFromSpherical(s) {\n\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t}\n\n\tsetFromSphericalCoords(radius, phi, theta) {\n\t\tvar sinPhiRadius = Math.sin(phi) * radius;\n\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\tthis.y = Math.cos(phi) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromCylindrical(c) {\n\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t}\n\n\tsetFromCylindricalCoords(radius, theta, y) {\n\t\tthis.x = radius * Math.sin(theta);\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromMatrixPosition(m) {\n\t\tvar e = m.elements;\n\t\tthis.x = e[12];\n\t\tthis.y = e[13];\n\t\tthis.z = e[14];\n\t\treturn this;\n\t}\n\n\tsetFromMatrixScale(m) {\n\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\n\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\n\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\t\treturn this;\n\t}\n\n\tsetFromMatrixColumn(m, index) {\n\t\treturn this.fromArray(m.elements, index * 4);\n\t}\n\n\tsetFromMatrix3Column(m, index) {\n\t\treturn this.fromArray(m.elements, index * 3);\n\t}\n\n\tequals(v) {\n\t\treturn ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\t}\n\n\tfromArray(array, offset) {\n\t\tif (offset === undefined) offset = 0;\n\t\tthis.x = array[offset];\n\t\tthis.y = array[offset + 1];\n\t\tthis.z = array[offset + 2];\n\t\treturn this;\n\t}\n\n\ttoArray(array, offset) {\n\t\tif (array === undefined) array = [];\n\t\tif (offset === undefined) offset = 0;\n\t\tarray[offset] = this.x;\n\t\tarray[offset + 1] = this.y;\n\t\tarray[offset + 2] = this.z;\n\t\treturn array;\n\t}\n\n\tfromBufferAttribute(attribute, index) {\n\t\tthis.x = attribute.getX(index);\n\t\tthis.y = attribute.getY(index);\n\t\tthis.z = attribute.getZ(index);\n\t\treturn this;\n\t}\n\n\trandom() {\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\treturn this;\n\t}\n\t*/\n\n}\n\n","import Vector3 from \"../math/vector3\";\nimport Geometry from \"./geometry\";\n\nexport default class SphereGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tconst radius = 1.4;\n\t\tconst widthDivisions = 80;\n\t\tconst heightDivisions = 60;\n\t\tconst phiStart = 0;\n\t\tconst phiLength = Math.PI * 2;\n\t\tconst thetaStart = 0;\n\t\tconst thetaLength = Math.PI;\n\t\tconst p = new Vector3();\n\t\tconst n = new Vector3();\n\t\t// buffers\n\t\tconst indices = [];\n\t\tconst positions = [];\n\t\tconst normals = [];\n\t\tconst texcoords = [];\n\t\tconst colors = [];\n\t\t//\n\t\tlet thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\tlet ix, iy;\n\t\tlet index = 0;\n\t\tlet grid = [];\n\t\t// generate positions, normals and uvs\n\t\tfor (iy = 0; iy <= heightDivisions; iy++) {\n\t\t\tlet positionRow = [];\n\t\t\tlet v = iy / heightDivisions;\n\t\t\t// special case for the poles\n\t\t\tlet uOffset = 0;\n\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\tuOffset = 0.5 / widthDivisions;\n\t\t\t} else if (iy == heightDivisions && thetaEnd == Math.PI) {\n\t\t\t\tuOffset = -0.5 / widthDivisions;\n\t\t\t}\n\t\t\tfor (ix = 0; ix <= widthDivisions; ix++) {\n\t\t\t\tlet u = ix / widthDivisions;\n\t\t\t\t// position\n\t\t\t\tp.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tp.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\tp.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tpositions.push(p.x, p.y, p.z);\n\t\t\t\t// normal\n\t\t\t\tn.copy(p).normalize();\n\t\t\t\tnormals.push(n.x, n.y, n.z);\n\t\t\t\t// uv\n\t\t\t\tconst uvx = (u + uOffset);\n\t\t\t\tconst uvy = (1 - v);\n\t\t\t\ttexcoords.push(uvx, uvy);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t\tpositionRow.push(index++);\n\t\t\t}\n\t\t\tgrid.push(positionRow);\n\t\t}\n\t\t// indices\n\t\tfor (iy = 0; iy < heightDivisions; iy++) {\n\t\t\tfor (ix = 0; ix < widthDivisions; ix++) {\n\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\tif (iy !== heightDivisions - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\t// build geometry\n\t\tthis.size = indices.length;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t// this.unrapUvw(this.positions);\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normal', this.normal.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('color', this.color.length);\n\t\t*/\n\t}\n\n\t/*\n\tunrapUvw(positions: number[]): void {\n\t\tconst texcoords: number[] = this.texcoords = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t}\n\t*/\n\n}\n","import Vector3 from \"../math/vector3\";\nimport Geometry from \"./geometry\";\nexport default class TorusGeometry extends Geometry {\n\tprotected createData_() {\n\t\tconst radius: number = 1;\n\t\tconst tube: number = 0.2;\n\t\tconst tubularDivisions: number = 100;\n\t\tconst radialDivisions: number = 20;\n\t\tconst p: number = 2;\n\t\tconst q: number = 3;\n\t\t// buffers\n\t\tconst indices: number[] = [];\n\t\tconst positions: number[] = [];\n\t\tconst normals: number[] = [];\n\t\tconst texcoords: number[] = [];\n\t\tconst colors: number[] = [];\n\t\t// helper variables\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst p1 = new Vector3();\n\t\tconst p2 = new Vector3();\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\t\t// generate positions, normals and uvs\n\t\tfor (let i: number = 0; i <= tubularDivisions; ++i) {\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\tconst u = i / tubularDivisions * p * Math.PI * 2;\n\t\t\t// now we calculate two points. p1 is our current position on the curve, p2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\t\t\tthis.calculatePositionOnCurve(u, p, q, radius, p1);\n\t\t\tthis.calculatePositionOnCurve(u + 0.01, p, q, radius, p2);\n\t\t\t// calculate orthonormal basis\n\t\t\tT.subVectors(p2, p1);\n\t\t\tN.addVectors(p2, p1);\n\t\t\tB.crossVectors(T, N);\n\t\t\tN.crossVectors(B, T);\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\t\t\tfor (let j: number = 0; j <= radialDivisions; ++j) {\n\t\t\t\t// now calculate the positions. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\tconst v: number = j / radialDivisions * Math.PI * 2;\n\t\t\t\tconst cx: number = - tube * Math.cos(v);\n\t\t\t\tconst cy: number = tube * Math.sin(v);\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\t\t\t\tvertex.x = p1.x + (cx * N.x + cy * B.x);\n\t\t\t\tvertex.y = p1.y + (cx * N.y + cy * B.y);\n\t\t\t\tvertex.z = p1.z + (cx * N.z + cy * B.z);\n\t\t\t\tpositions.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t// normal (p1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors(vertex, p1).normalize();\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\n\t\t\t\t// uv\n\t\t\t\ttexcoords.push(i / tubularDivisions);\n\t\t\t\ttexcoords.push(j / radialDivisions);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t}\n\t\t}\n\t\t// generate indices\n\t\tfor (let j: number = 1; j <= tubularDivisions; j++) {\n\t\t\tfor (let i: number = 1; i <= radialDivisions; i++) {\n\t\t\t\t// indices\n\t\t\t\tconst a: number = (radialDivisions + 1) * (j - 1) + (i - 1);\n\t\t\t\tconst b: number = (radialDivisions + 1) * j + (i - 1);\n\t\t\t\tconst c: number = (radialDivisions + 1) * j + i;\n\t\t\t\tconst d: number = (radialDivisions + 1) * (j - 1) + i;\n\t\t\t\t// faces\n\t\t\t\tindices.push(a, b, d);\n\t\t\t\tindices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\t// build geometry\n\t\tthis.size = indices.length;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n\tprotected calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3): void {\n\t\tconst cu: number = Math.cos(u);\n\t\tconst su: number = Math.sin(u);\n\t\tconst quOverP: number = q / p * u;\n\t\tconst cs: number = Math.cos(quOverP);\n\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t}\n\n}\n","import Common from \"../core/common\";\nimport Geometry, { IGeometry } from \"../geometry/geometry\";\nimport Vector3 from \"../math/vector3\";\n\nconst COLORS = [\n\t[1, 1, 1],\n\t[1, 0, 0],\n\t[0, 1, 0],\n\t[0, 0, 1],\n\t[1, 1, 0],\n\t[0, 1, 1],\n];\n\nlet CI: number = 0;\n\nexport default class ObjLoader {\n\n\tload(url: string): Promise<Geometry> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tCommon.fetch(url)\n\t\t\t\t// .then((response) => response.text())\n\t\t\t\t.then((text) => {\n\t\t\t\t\tconst data = this.parse(text);\n\t\t\t\t\tconst geometry = new Geometry(data as IGeometry);\n\t\t\t\t\tresolve(geometry);\n\t\t\t\t}, error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t});\n\t}\n\n\tparseIndices(faceIndices: number[][], k: number, l: number, source: number[][], output: number[], name: string) {\n\t\tlet i = 0;\n\t\twhile (i <= faceIndices.length - 3) {\n\t\t\tlet a, b, c;\n\t\t\tif (i === 0) {\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t} else {\n\t\t\t\ta = i - 1;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t}\n\t\t\ti++;\n\t\t\tconst indices = [a, b, c];\n\t\t\tfor (let j = 0; j < indices.length; j++) {\n\t\t\t\tconst index = faceIndices[indices[j]][k];\n\t\t\t\tlet values;\n\t\t\t\tif (index && index !== NaN) {\n\t\t\t\t\tvalues = source[index - 1];\n\t\t\t\t\tif (values) {\n\t\t\t\t\t\tvalues = values.slice(0, l);\n\t\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.log('error', name, source.length, index - 1);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\telse {\n\t\t\t\t\tvalues = new Array(l).fill(0);\n\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\n\tparseFaces(F: number[][][], V: number[][], VN: number[][], VT: number[][], positions: number[], normals: number[], texcoords: number[], colors: number[]) {\n\t\tconst si: number = positions.length;\n\t\tF.forEach(faceIndices => {\n\t\t\t// console.log(faceIndices);\n\t\t\tthis.parseIndices(faceIndices, 0, 3, V, positions, 'positions');\n\t\t\tthis.parseIndices(faceIndices, 2, 3, VN, normals, 'normals');\n\t\t\tthis.parseIndices(faceIndices, 1, 2, VT, texcoords, 'texcoords');\n\t\t});\n\t\tconst vl: number = positions.length - si;\n\t\tif (vl > 0) {\n\t\t\t// console.log(faceIndices.length - 2);\n\t\t\tconst c = new Array(vl / 3).fill(0);\n\t\t\tc.forEach(() => {\n\t\t\t\tconst rgb = COLORS[CI % COLORS.length];\n\t\t\t\tcolors.push(rgb[0], rgb[1], rgb[2], 1.0);\n\t\t\t});\n\t\t\tCI++;\n\t\t\t/*\n\t\t\tconsole.log(positions.length, normals.length, texcoords.length, colors.length,\n\t\t\t\tpositions.length / 3 * 2 === texcoords.length,\n\t\t\t\tpositions.length / 3 * 4 === colors.length);\n\t\t\t*/\n\t\t}\n\t}\n\n\tparse(text: string): IGeometry {\n\t\tlet positions: number[] = [], normals: number[] = [], texcoords: number[] = [], colors: number[] = [];\n\t\tCI = 0;\n\t\tlet V: number[][] = [], VN: number[][] = [], VT: number[][] = [], F: number[][][] = [];\n\t\tif (text.indexOf('\\r\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\r\\n/g, '\\n');\n\t\t}\n\t\t/*\n\t\tif (text.indexOf('\\\\\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\\\\\n/g, '');\n\t\t}\n\t\t*/\n\t\ttext = text.replace(/  /g, ' ');\n\t\tconst lines = text.split('\\n');\n\t\tlines.forEach((line, i) => {\n\t\t\tif (line.indexOf('v ') === 0) {\n\t\t\t\tif (F.length) {\n\t\t\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t\t\t\tF = [];\n\t\t\t\t\t// V = [];\n\t\t\t\t\t// VN = [];\n\t\t\t\t\t// VT = [];\n\t\t\t\t}\n\t\t\t\t// v  0.0012 -0.0055 0.0090\n\t\t\t\tconst a = line.replace('v', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tV.push(v);\n\t\t\t} else if (line.indexOf('vn ') === 0) {\n\t\t\t\t// vn 0.0128 0.9896 0.1431\n\t\t\t\tconst a = line.replace('vn', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tVN.push(v);\n\t\t\t} else if (line.indexOf('vt ') === 0) {\n\t\t\t\t// vt 0.5955 0.0054 0.0000\n\t\t\t\tconst a = line.replace('vt', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tVT.push(v);\n\t\t\t} else if (line.indexOf('f ') === 0) {\n\t\t\t\t// f 1//1 2//2 3//3 4//4\n\t\t\t\tconst a = line.replace('f', '').trim().split(' ');\n\t\t\t\tconst f = a.map((x: string) => {\n\t\t\t\t\tconst indices = x.split('/').map(y => parseInt(y));\n\t\t\t\t\tif (indices.length === 2) {\n\t\t\t\t\t\tindices.push(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn indices;\n\t\t\t\t});\n\t\t\t\tF[F.length] = f;\n\t\t\t} /*\n\t\t\telse if (line.indexOf('polygons') !== -1) {\n\t\t\t\t// # 8588 polygons\n\t\t\t\tconst poly = parseInt(line.split(' ')[1]);\n\t\t\t\tconsole.log('poly', poly);\n\t\t\t}\n\t\t\t*/\n\t\t});\n\t\tif (F.length) {\n\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t}\n\t\tconst boundingBox = { min: new Vector3(Number.POSITIVE_INFINITY), max: new Vector3(Number.NEGATIVE_INFINITY) };\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tboundingBox.min.x = Math.min(boundingBox.min.x, positions[i]);\n\t\t\tboundingBox.min.y = Math.min(boundingBox.min.y, positions[i + 1]);\n\t\t\tboundingBox.min.z = Math.min(boundingBox.min.z, positions[i + 2]);\n\t\t\tboundingBox.max.x = Math.max(boundingBox.max.x, positions[i]);\n\t\t\tboundingBox.max.y = Math.max(boundingBox.max.y, positions[i + 1]);\n\t\t\tboundingBox.max.z = Math.max(boundingBox.max.z, positions[i + 2]);\n\t\t}\n\t\tconst centerX = true, centerY = true, centerZ = true;\n\t\tconst dx = -(boundingBox.min.x + boundingBox.max.x) / 2;\n\t\tconst dy = -(boundingBox.min.y + boundingBox.max.y) / 2;\n\t\tconst dz = -(boundingBox.min.z + boundingBox.max.z) / 2;\n\t\t// console.log(dx, dy, dz);\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tpositions[i] += centerX ? dx : 0;\n\t\t\tpositions[i + 1] += centerY ? dy : 0;\n\t\t\tpositions[i + 2] += centerZ ? dz : 0;\n\t\t}\n\t\tconst radius = positions.reduce((p: number, c: number) => {\n\t\t\treturn Math.max(p, c);\n\t\t}, 0);\n\t\tpositions.forEach((x: number, i: number) => positions[i] = x / radius * 2.0);\n\t\tif (!normals.length) {\n\t\t\tnormals = positions.slice();\n\t\t}\n\t\tif (!texcoords.length) {\n\t\t\ttexcoords = this.unrapUvw(positions);\n\t\t}\n\t\t/*\n\t\tconsole.log(positions.length, normals.length, texcoords.length, colors.length,\n\t\t\tpositions.length / 3 * 2 === texcoords.length,\n\t\t\tpositions.length / 3 * 4 === colors.length);\n\t\t*/\n\t\treturn {\n\t\t\tpositions, normals, texcoords, colors\n\t\t};\n\t}\n\n\tunrapUvw(positions: number[]): number[] {\n\t\tconst texcoords: number[] = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t\treturn texcoords;\n\t}\n\n}\n","\nimport IterableStringMap from '../core/iterable';\nimport Logger from '../logger/logger';\nimport { Texture } from '../textures/textures';\n\nexport enum UniformMethod {\n\tUnknown = 0,\n\tUniform1i = 'uniform1i', // (intUniformLoc,   v);                 // for int\n\t// Uniform1i  = 'uniform1i', // (boolUniformLoc,   v);                // for bool\n\t// Uniform1i  = 'uniform1i', // (sampler2DUniformLoc,   v);           // for sampler2D\n\t// Uniform1i  = 'uniform1i', // (samplerCubeUniformLoc,   v);         // for samplerCube\n\tUniform2i = 'uniform2i', // (ivec2UniformLoc, v0, v1);            // for ivec2\n\tUniform3i = 'uniform3i', // (ivec3UniformLoc, v0, v1, v2);        // for ivec3\n\tUniform4i = 'uniform4i', // (ivec4UniformLoc, v0, v1, v2, v4);    // for ivec4\n\tUniform1f = 'uniform1f', // (floatUniformLoc, v);                 // for float\n\tUniform2f = 'uniform2f', // (vec2UniformLoc,  v0, v1);            // for vec2\n\tUniform3f = 'uniform3f', // (vec3UniformLoc,  v0, v1, v2);        // for vec3\n\tUniform4f = 'uniform4f', // (vec4UniformLoc,  v0, v1, v2, v4);    // for vec4\n\t//\n\tUniform1iv = 'uniform1iv', // (intUniformLoc, [v]);                 // for int or int array\n\t// Uniform1iv = 'uniform1iv', // (boolUniformLoc, [v]);                // for bool or bool array\n\t// Uniform1iv = 'uniform1iv', // (sampler2DUniformLoc, [v]);           // for sampler2D or sampler2D array\n\t// Uniform1iv = 'uniform1iv', // (samplerCubeUniformLoc, [v]);         // for samplerCube or samplerCube array\n\tUniform2iv = 'uniform2iv', // (ivec2UniformLoc, [v0, v1]);          // for ivec2 or ivec2 array\n\tUniform3iv = 'uniform3iv', // (ivec3UniformLoc, [v0, v1, v2]);      // for ivec3 or ivec3 array\n\tUniform4iv = 'uniform4iv', // (ivec4UniformLoc, [v0, v1, v2, v4]);  // for ivec4 or ivec4 array\n\t//\n\tUniform1fv = 'uniform1fv', // (floatUniformLoc, [v]);               // for float or float array\n\tUniform2fv = 'uniform2fv', // (vec2UniformLoc,  [v0, v1]);          // for vec2 or vec2 array\n\tUniform3fv = 'uniform3fv', // (vec3UniformLoc,  [v0, v1, v2]);      // for vec3 or vec3 array\n\tUniform4fv = 'uniform4fv', // (vec4UniformLoc,  [v0, v1, v2, v4]);  // for vec4 or vec4 array\n\t//\n\tUniformMatrix2fv = 'uniformMatrix2fv', // (mat2UniformLoc, false, [  4x element array ])  // for mat2 or mat2 array\n\tUniformMatrix3fv = 'uniformMatrix3fv', // (mat3UniformLoc, false, [  9x element array ])  // for mat3 or mat3 array\n\tUniformMatrix4fv = 'uniformMatrix4fv', // (mat4UniformLoc, false, [ 16x element array ])  // for mat4 or mat4 array\n}\n\nexport enum UniformType {\n\tUnknown = 0,\n\tFloat,\n\tInt,\n\tBool,\n\tSampler2D,\n\tSamplerCube,\n\tMatrix2fv,\n\tMatrix3fv,\n\tMatrix4fv,\n}\n\nexport const METHODS_INT = [UniformMethod.Uniform1i, UniformMethod.Uniform2i, UniformMethod.Uniform3i, UniformMethod.Uniform4i];\nexport const METHODS_FLOAT = [UniformMethod.Uniform1f, UniformMethod.Uniform2f, UniformMethod.Uniform3f, UniformMethod.Uniform4f];\nexport const METHODS_INTV = [UniformMethod.Uniform1iv, UniformMethod.Uniform2iv, UniformMethod.Uniform3iv, UniformMethod.Uniform4iv];\nexport const METHODS_FLOATV = [UniformMethod.Uniform1fv, UniformMethod.Uniform2fv, UniformMethod.Uniform3fv, UniformMethod.Uniform4fv];\n\nexport interface IUniformOption { [key: string]: any[]; }\n\nexport class Uniform {\n\tmethod: UniformMethod;\n\ttype: UniformType;\n\tkey: string;\n\tvalues: any[];\n\tlocation?: WebGLUniformLocation;\n\tdirty?: boolean = true;\n\tapply?: Function;\n\n\tconstructor(options?: Uniform) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tswitch (this.method) {\n\t\t\tcase UniformMethod.UniformMatrix2fv:\n\t\t\tcase UniformMethod.UniformMatrix3fv:\n\t\t\tcase UniformMethod.UniformMatrix4fv:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location, false].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class UniformTexture extends Uniform {\n\n\ttexture: Texture;\n\n\tconstructor(options?: Uniform) {\n\t\tsuper(options);\n\t}\n\n}\n\nexport default class Uniforms extends IterableStringMap<Uniform> {\n\n\tdirty: boolean = false;\n\n\tstatic isArrayOfInteger(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Number.isInteger(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfNumber(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'number';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfBoolean(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'boolean';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfTexture(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Texture.isTexture(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfSampler2D(array: Uniform[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: Uniform) => {\n\t\t\treturn flag && value.type === UniformType.Sampler2D;\n\t\t}, true);\n\t}\n\n\tprivate static getType_(\n\t\tvalues: any[],\n\t): UniformType {\n\t\tlet type = UniformType.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tif (Uniforms.isArrayOfNumber(subject)) {\n\t\t\ttype = UniformType.Float;\n\t\t} else if (Uniforms.isArrayOfBoolean(subject)) {\n\t\t\ttype = UniformType.Bool;\n\t\t} else if (Uniforms.isArrayOfTexture(subject)) {\n\t\t\ttype = UniformType.Sampler2D;\n\t\t}\n\t\treturn type;\n\t}\n\n\tprivate static getMethod_(\n\t\ttype: UniformType,\n\t\tvalues: any[],\n\t): UniformMethod {\n\t\tlet method = UniformMethod.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tconst length = subject.length;\n\t\tconst i = length - 1;\n\t\tswitch (type) {\n\t\t\tcase UniformType.Float:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_FLOATV.length ? METHODS_FLOATV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_FLOAT.length ? METHODS_FLOAT[i] : UniformMethod.Uniform1fv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Int:\n\t\t\tcase UniformType.Bool:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_INTV.length ? METHODS_INTV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_INT.length ? METHODS_INT[i] : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Sampler2D:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = UniformMethod.Uniform1iv;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = length === 1 ? UniformMethod.Uniform1i : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn method;\n\t}\n\n\tstatic parseUniform(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\ttype: UniformType = null\n\t): Uniform | Uniform[] {\n\t\tlet uniform: Uniform;\n\t\ttype = type || Uniforms.getType_(values);\n\t\tconst method = Uniforms.getMethod_(type, values);\n\t\tif (type !== UniformType.Unknown && method !== UniformMethod.Unknown) {\n\t\t\t// Logger.log('Uniforms.parseUniform', key, UniformType[type], method, values);\n\t\t\tif (type === UniformType.Sampler2D && method === UniformMethod.Uniform1iv) {\n\t\t\t\treturn values[0].map((texture: any, index: number) => {\n\t\t\t\t\treturn new Uniform({\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tkey: `${key}[${index}]`, // `${key.split('[')[0]}[${index}]`,\n\t\t\t\t\t\tvalues: [texture]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tuniform = new Uniform({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalues: values\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tLogger.error('Uniforms.parseUniform.Unknown', key, values);\n\t\t}\n\t\t// return this.parseUniform__bak(key, values);\n\t\treturn uniform;\n\t}\n\n\tcreate(method: UniformMethod, type: UniformType, key: string, values: any[]): Uniform {\n\t\tconst uniform = new Uniform({\n\t\t\tmethod: method,\n\t\t\ttype: type,\n\t\t\tkey: key,\n\t\t\tvalues: values,\n\t\t});\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tcreateTexture(key: string, index: number): UniformTexture {\n\t\tlet uniform;\n\t\tif (key.indexOf(']') !== -1) {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1iv,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [[index]],\n\t\t\t});\n\t\t} else {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1i,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [index],\n\t\t\t});\n\t\t}\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tupdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tconst uniform = this.get(key);\n\t\tif (uniform) {\n\t\t\t// !!! consider performance\n\t\t\t// && (uniform.method !== method || uniform.type !== type || Uniforms.isDifferent(uniform.values, values))) {\n\t\t\tuniform.method = method;\n\t\t\tuniform.type = type;\n\t\t\tuniform.values = values;\n\t\t\tuniform.dirty = true;\n\t\t\tthis.dirty = true;\n\t\t}\n\t}\n\n\tcreateOrUpdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tif (this.has(key)) {\n\t\t\tthis.update(method, type, key, values);\n\t\t} else {\n\t\t\tthis.create(method, type, key, values);\n\t\t}\n\t}\n\n\tapply(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tgl.useProgram(program);\n\t\tfor (const key in this.values) {\n\t\t\t// if (typeof this.values[key].apply === 'function') {\n\t\t\tthis.values[key].apply(gl, program);\n\t\t\t// }\n\t\t}\n\t\t// this.forEach(uniform => uniform.apply(gl, program));\n\t}\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\t/*\n\t// slow\n\tstatic isDifferent(a: any, b: any): boolean {\n        return JSON.stringify(a) !== JSON.stringify(b);\n    }\n\t*/\n\n\tstatic isDifferent(a: any[], b: any[]) {\n\t\treturn a.length !== b.length || a.reduce((f: boolean, v: any, i: number) => {\n\t\t\treturn f || v !== b[i];\n\t\t}, false);\n\t}\n\n}\n","import { mat4 } from 'gl-matrix';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport CanvasTimer from '../canvas/canvas-timer';\nimport Context, { ContextMode, ContextVertexBuffers } from '../context/context';\nimport Subscriber from '../core/subscriber';\nimport BoxGeometry from '../geometry/box-geometry';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\nimport SphereGeometry from '../geometry/sphere-geometry';\nimport TorusGeometry from '../geometry/torus-geometry';\nimport ObjLoader from '../loaders/obj-loader';\nimport Textures, { ITextureInput } from '../textures/textures';\nimport Uniforms, { UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport const useDoubleSide: boolean = true;\n\nexport interface IPoint {\n\tx: number,\n\ty: number,\n}\n\nexport default class Renderer extends Subscriber {\n\n\tgl: WebGLRenderingContext | WebGL2RenderingContext;\n\tprogram: WebGLProgram;\n\ttimer: CanvasTimer;\n\tuniforms: Uniforms = new Uniforms();\n\tbuffers: Buffers = new Buffers();\n\ttextures: Textures = new Textures();\n\ttextureList: ITextureInput[] = [];\n\n\tmouse: IPoint = { x: 0, y: 0 };\n\tradians: number = 0;\n\tdirty: boolean = true;\n\tanimated: boolean = false;\n\tdrawFunc_: (deltaTime: number) => void;\n\n\tvertexString: string;\n\tfragmentString: string;\n\n\tgeometry: Geometry;\n\n\tvertexBuffers: ContextVertexBuffers;\n\n\tprojectionMatrix: mat4;\n\tmodelViewMatrix: mat4;\n\tnormalMatrix: mat4;\n\n\tmode: ContextMode | string;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.drawFunc_ = this.drawArrays_;\n\t}\n\n\tprotected render(): void {\n\t\tconst gl = this.gl;\n\t\tif (!gl) {\n\t\t\treturn;\n\t\t}\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tthis.update_();\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.geometry.attachAttributes_(gl, buffer.program);\n\t\t\tthis.uniforms.apply(gl, buffer.program);\n\t\t\t/*\n\t\t\tconsole.log('uniforms');\n\t\t\tfor (const key in this.uniforms.values) {\n\t\t\t\tif (key.indexOf('u_buff') === 0) {\n\t\t\t\t\tconsole.log(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tbuffer.render(gl, BW, BH);\n\t\t}\n\t\tthis.geometry.attachAttributes_(gl, this.program);\n\t\tthis.uniforms.apply(gl, this.program);\n\t\tthis.drawFunc_(this.timer.delta);\n\t\tthis.uniforms.clean();\n\t\tthis.textures.clean();\n\t\tthis.dirty = false;\n\t\tthis.trigger('render', this);\n\t}\n\n\t/*\n\tprotected drawArrays_(deltaTime: number) {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 6);\n\t}\n\t*/\n\n\tprotected drawArrays_(deltaTime: number) {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// Clear\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\n\t\tgl.clearDepth(1.0);\n\t\t// Clear the canvas before we start drawing on it.\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\tgl.enable(gl.CULL_FACE);\n\t\tif (this.mode !== ContextMode.Flat && useDoubleSide) {\n\t\t\t// back\n\t\t\t// gl.frontFace(gl.CW);\n\t\t\tgl.cullFace(gl.FRONT);\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t\t// front\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t\t// gl.frontFace(gl.CCW);\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// gl.drawElements(gl.TRIANGLES, this.geometry.size, gl.UNSIGNED_SHORT, 0);\n\t}\n\n\tprotected create_(): void {\n\t\t// this.createVertex__();\n\t\tthis.createGeometry_();\n\t\tthis.createUniforms_();\n\t}\n\n\tprotected createGeometry_() {\n\t\t// console.log('Geometry', Geometry);\n\t\t// console.log('FlatGeometry', FlatGeometry);\n\t\t// console.log('BoxGeometry', BoxGeometry);\n\t\tthis.mode = this.parseGeometry_();\n\t\tlet geometry: Geometry;\n\t\tswitch (this.mode) {\n\t\t\tcase ContextMode.Flat:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Box:\n\t\t\t\tgeometry = new BoxGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Sphere:\n\t\t\t\tgeometry = new SphereGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Torus:\n\t\t\t\tgeometry = new TorusGeometry();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tconst loader = new ObjLoader();\n\t\t\t\tloader.load(this.mode).then(geometry => {\n\t\t\t\t\t// console.log(geometry);\n\t\t\t\t\tgeometry.createAttributes_(this.gl, this.program);\n\t\t\t\t\tthis.geometry = geometry;\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t});\n\t\t}\n\t\tgeometry.create(this.gl, this.program);\n\t\tthis.geometry = geometry;\n\t}\n\n\tprotected parseGeometry_(): ContextMode | string {\n\t\t// attribute vec4 a_position;\n\t\tlet mode: ContextMode | string = this.mode;\n\t\tconst regexp = /attribute\\s+vec4\\s+a_position\\s*;\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]+)/gm;\n\t\tconst match = regexp.exec(this.vertexString);\n\t\tif (match && match.length > 1) {\n\t\t\tmode = match[1];\n\t\t}\n\t\t// console.log('match', match);\n\t\treturn mode;\n\t}\n\n\tprotected createVertex__(): void {\n\t\tthis.vertexBuffers = Context.createVertexBuffers(this.gl, this.program);\n\t}\n\n\tprotected createUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst fragmentString = this.fragmentString;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tconst timer = this.timer = new CanvasTimer();\n\t\tconst hasDelta = (fragmentString.match(/u_delta/g) || []).length > 1;\n\t\tconst hasTime = (fragmentString.match(/u_time/g) || []).length > 1;\n\t\tconst hasDate = (fragmentString.match(/u_date/g) || []).length > 1;\n\t\tconst hasMouse = (fragmentString.match(/u_mouse/g) || []).length > 1;\n\t\tthis.animated = hasTime || hasDate || hasMouse;\n\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (hasDelta) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (hasTime) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (hasDate) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.create(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (hasMouse) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [0, 0]);\n\t\t}\n\t\t// if (this.mode !== ContextMode.Flat) {\n\t\tthis.projectionMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.projectionMatrix as number[]);\n\t\tthis.modelViewMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.modelViewMatrix as number[]);\n\t\tthis.normalMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.normalMatrix as number[]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightAmbient', [0.3, 0.3, 0.3]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightColor', [1.0, 1.0, 1.0]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightDirection', [0.0, 0.0, 1.0]);\n\t\t// }\n\t}\n\n\tprotected update_(): void {\n\t\tthis.updateUniforms_();\n\t}\n\n\tprotected updateUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tif (!this.timer) {\n\t\t\treturn;\n\t\t}\n\t\tconst timer = this.timer.next();\n\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (this.uniforms.has('u_delta')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_time')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_date')) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.update(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (this.uniforms.has('u_mouse')) {\n\t\t\tconst mouse = this.mouse;\n\t\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [mouse.x, mouse.y]);\n            /*\n            const rect = this.rect;\n            if (mouse.x >= rect.left && mouse.x <= rect.right &&\n                mouse.y >= rect.top && mouse.y <= rect.bottom) {\n                const MX = (mouse.x - rect.left) * this.devicePixelRatio;\n                const MY = (this.canvas.height - (mouse.y - rect.top) * this.devicePixelRatio);\n                this.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [MX, MY]);\n            }\n            */\n\t\t}\n\t\tif (this.mode !== ContextMode.Flat) {\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.updateProjectionMatrix_() as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.updateModelViewMatrix_(this.timer.delta) as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.updateNormalMatrix_(this.modelViewMatrix) as number[]);\n\t\t}\n\t}\n\n\tprotected updateProjectionMatrix_(): mat4 {\n\t\tconst gl = this.gl;\n\t\tconst fieldOfView = 45 * Math.PI / 180;\n\t\tconst aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\tconst zNear = 0.1;\n\t\tconst zFar = 100.0;\n\t\tmat4.perspective(this.projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\t\treturn this.projectionMatrix;\n\t}\n\n\tprotected updateModelViewMatrix_(deltaTime: number): mat4 {\n\t\t// this.modelViewMatrix = mat4.create();\n\t\tthis.modelViewMatrix = mat4.identity(this.modelViewMatrix);\n\t\tmat4.translate(this.modelViewMatrix, this.modelViewMatrix, [0.0, 0.0, -6.0]); // amount to translate\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.radians, [0, 1, 0]); // axis to rotate around (Y)\n\t\t// mat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.radians * 0.2, [1, 0, 0]); // axis to rotate around (X)\n\t\tthis.radians += deltaTime * 0.001;\n\t\treturn this.modelViewMatrix;\n\t}\n\n\tprotected updateNormalMatrix_(modelViewMatrix: mat4): mat4 {\n\t\t// this.normalMatrix = mat4.create();\n\t\tthis.normalMatrix = mat4.identity(this.normalMatrix);\n\t\tmat4.invert(this.normalMatrix, modelViewMatrix);\n\t\tmat4.transpose(this.normalMatrix, this.normalMatrix);\n\t\treturn this.normalMatrix;\n\t}\n\n}\n","// import '@babel/polyfill';\nimport 'promise-polyfill';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport Context, { ContextMode, IContextOptions } from '../context/context';\nimport Common from '../core/common';\nimport Logger from '../logger/logger';\nimport Renderer, { IPoint } from '../renderer/renderer';\nimport Textures, { ITextureData, ITextureOptions, Texture } from '../textures/textures';\nimport Uniforms, { IUniformOption, Uniform, UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport interface ICanvasOptions extends IContextOptions {\n\tvertexString?: string;\n\tfragmentString?: string;\n\tbackgroundColor?: string;\n\tworkpath?: string;\n\tonError?: Function;\n\textensions?: string[];\n\tmode?: ContextMode;\n}\n\nexport default class Canvas extends Renderer {\n\n\toptions: ICanvasOptions;\n\tcanvas: HTMLCanvasElement;\n\trect: ClientRect | DOMRect;\n\n\twidth: number;\n\theight: number;\n\tdevicePixelRatio: number;\n\n\tvalid: boolean = false;\n\tvisible: boolean = false;\n\n\trafId: number;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\toptions: ICanvasOptions = {\n\t\t\t// alpha: true,\n\t\t\t// antialias: true,\n\t\t\t// premultipliedAlpha: true\n\t\t}\n\t) {\n\t\tsuper();\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.options = options;\n\t\tthis.canvas = canvas;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.rect = canvas.getBoundingClientRect();\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\n\t\tthis.mode = options.mode || ContextMode.Flat;\n\t\tcanvas.style.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n\t\tthis.getShaders_().then((success) => {\n\t\t\tthis.load().then(success => {\n\t\t\t\tif (!this.program) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.addListeners_();\n\t\t\t\tthis.onLoop();\n\t\t\t});\n\t\t}, (error) => {\n\t\t\tLogger.error('GlslCanvas.getShaders_.error', error);\n\t\t});\n\t\tCanvas.items.push(this);\n\t}\n\n\tstatic logger: Logger = Logger;\n\tstatic items: Canvas[] = [];\n\n\tstatic of(canvas: HTMLCanvasElement, options?: ICanvasOptions): Canvas {\n\t\treturn Canvas.items.find(x => x.canvas === canvas) || new Canvas(canvas, options);\n\t}\n\n\tstatic loadAll(): Canvas[] {\n\t\tconst canvases: HTMLCanvasElement[] = <HTMLCanvasElement[]>[].slice.call(document.getElementsByClassName('glsl-canvas')).filter((x: HTMLElement) => x instanceof HTMLCanvasElement);\n\t\treturn canvases.map(x => Canvas.of(x));\n\t}\n\n\tprivate getShaders_(): Promise<string[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.vertexString = this.options.vertexString || this.vertexString;\n\t\t\tthis.fragmentString = this.options.fragmentString || this.fragmentString;\n\t\t\tconst canvas = this.canvas;\n\t\t\tconst urls: any = {};\n\t\t\tif (canvas.hasAttribute('data-vertex-url')) {\n\t\t\t\turls.vertex = canvas.getAttribute('data-vertex-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment-url')) {\n\t\t\t\turls.fragment = canvas.getAttribute('data-fragment-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-vertex')) {\n\t\t\t\tthis.vertexString = canvas.getAttribute('data-vertex');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment')) {\n\t\t\t\tthis.fragmentString = canvas.getAttribute('data-fragment');\n\t\t\t}\n\t\t\tif (Object.keys(urls).length) {\n\t\t\t\tPromise.all(Object.keys(urls).map((key, i) => {\n\t\t\t\t\tconst url: string = urls[key];\n\t\t\t\t\treturn Common.fetch(url)\n\t\t\t\t\t\t// .then((response) => response.text())\n\t\t\t\t\t\t.then((body) => {\n\t\t\t\t\t\t\tif (key === 'vertex') {\n\t\t\t\t\t\t\t\treturn this.vertexString = body;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn this.fragmentString = body;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t})).then(shaders => {\n\t\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addListeners_(): void {\n        /*\n        const resize = (e: Event) => {\n            this.rect = this.canvas.getBoundingClientRect();\n            this.trigger('resize', e);\n        };\n        */\n\t\tthis.onScroll = this.onScroll.bind(this);\n\t\tthis.onClick = this.onClick.bind(this);\n\t\tthis.onMove = this.onMove.bind(this);\n\t\tthis.onMousemove = this.onMousemove.bind(this);\n\t\tthis.onMouseover = this.onMouseover.bind(this);\n\t\tthis.onMouseout = this.onMouseout.bind(this);\n\t\tthis.onTouchmove = this.onTouchmove.bind(this);\n\t\tthis.onTouchend = this.onTouchend.bind(this);\n\t\tthis.onTouchstart = this.onTouchstart.bind(this);\n\t\tthis.onLoop = this.onLoop.bind(this);\n\t\t// window.addEventListener('resize', this.onResize);\n\t\twindow.addEventListener('scroll', this.onScroll);\n\t\tdocument.addEventListener('mousemove', this.onMousemove, false);\n\t\tdocument.addEventListener('touchmove', this.onTouchmove);\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tprivate addCanvasListeners_() {\n\t\tif (this.canvas.hasAttribute('controls')) {\n\t\t\tthis.canvas.addEventListener('click', this.onClick);\n\t\t\tthis.canvas.addEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.addEventListener('mouseout', this.onMouseout);\n\t\t\tthis.canvas.addEventListener('touchstart', this.onTouchstart);\n\t\t\tif (!this.canvas.hasAttribute('data-autoplay')) {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeCanvasListeners_() {\n\t\tif (this.canvas.hasAttribute('controls')) {\n\t\t\tthis.canvas.removeEventListener('click', this.onClick);\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseout);\n\t\t\tthis.canvas.removeEventListener('touchstart', this.onTouchstart);\n\t\t}\n\t}\n\n\tprivate removeListeners_() {\n\t\twindow.cancelAnimationFrame(this.rafId);\n\t\t// window.removeEventListener('resize', this.onResize);\n\t\twindow.removeEventListener('scroll', this.onScroll);\n\t\tdocument.removeEventListener('mousemove', this.onMousemove);\n\t\tdocument.removeEventListener('touchmove', this.onTouchmove);\n\t\tthis.removeCanvasListeners_();\n\t}\n\n\tonScroll(e: Event) {\n\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t}\n\n\tonClick(e: MouseEvent) {\n\t\tthis.toggle();\n\t\tthis.trigger('click', e);\n\t}\n\n\tonMove(mx: number, my: number) {\n\t\t/*\n\t\tconst rect = this.rect, gap = 20;\n\t\tconst x = Math.max(-gap, Math.min(rect.width + gap, (mx - rect.left) * this.devicePixelRatio));\n\t\tconst y = Math.max(-gap, Math.min(rect.height + gap, (this.canvas.height - (my - rect.top) * this.devicePixelRatio)));\n\t\t*/\n\t\tconst rect = this.rect;\n\t\tconst x = (mx - rect.left) * this.devicePixelRatio;\n\t\tconst y = (rect.height - (my - rect.top)) * this.devicePixelRatio;\n\t\tif (x !== this.mouse.x ||\n\t\t\ty !== this.mouse.y) {\n\t\t\tthis.mouse.x = x;\n\t\t\tthis.mouse.y = y;\n\t\t\tthis.trigger('move', this.mouse);\n\t\t}\n\t}\n\n\tonMousemove(e: MouseEvent) {\n\t\tthis.onMove(e.clientX || e.pageX, e.clientY || e.pageY);\n\t}\n\n\tonMouseover(e: MouseEvent) {\n\t\tthis.play();\n\t\tthis.trigger('over', e);\n\t}\n\n\tonMouseout(e: MouseEvent) {\n\t\tthis.pause();\n\t\tthis.trigger('out', e);\n\t}\n\n\tonTouchmove(e: TouchEvent) {\n\t\tconst touch = [].slice.call(e.touches).reduce((p: IPoint, touch: Touch) => {\n\t\t\tp = p || { x: 0, y: 0 };\n\t\t\tp.x += touch.clientX;\n\t\t\tp.y += touch.clientY;\n\t\t\treturn p;\n\t\t}, null);\n\t\tif (touch) {\n\t\t\tthis.onMove(touch.x / e.touches.length, touch.y / e.touches.length);\n\t\t}\n\t}\n\n\tonTouchend(e: TouchEvent) {\n\t\tthis.pause();\n\t\tthis.trigger('out', e);\n\t\tdocument.removeEventListener('touchend', this.onTouchend);\n\t}\n\n\tonTouchstart(e: TouchEvent) {\n\t\tthis.play();\n\t\tthis.trigger('over', e);\n\t\tdocument.addEventListener('touchend', this.onTouchend);\n\t\tdocument.removeEventListener('mousemove', this.onMousemove);\n\t\tif (this.canvas.hasAttribute('controls')) {\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseout);\n\t\t}\n\t}\n\n\tonLoop(time?: number) {\n\t\tthis.checkRender();\n\t\tthis.rafId = window.requestAnimationFrame(this.onLoop);\n\t}\n\n\tprivate setUniform_(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\toptions: ITextureOptions = {},\n\t\ttype: UniformType = null\n\t): void {\n\t\tconst uniform: Uniform | Uniform[] = Uniforms.parseUniform(key, values, type);\n\t\tif (Array.isArray(uniform)) {\n\t\t\tif (Uniforms.isArrayOfSampler2D(uniform)) {\n\t\t\t\tuniform.forEach((x) => this.loadTexture(x.key, x.values[0], options));\n\t\t\t} else {\n\t\t\t\tuniform.forEach((x) => this.uniforms.set(x.key, x.values[0]));\n\t\t\t}\n\t\t} else if (uniform) {\n\t\t\tswitch (uniform.type) {\n\t\t\t\tcase UniformType.Sampler2D:\n\t\t\t\t\tthis.loadTexture(key, values[0], options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.uniforms.set(key, uniform);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isVisible_(): boolean {\n\t\tconst rect = this.rect;\n\t\treturn (rect.top + rect.height) > 0 && rect.top < (window.innerHeight || document.documentElement.clientHeight);\n\t}\n\n\tprivate isAnimated_(): boolean {\n\t\treturn (this.animated || this.textures.animated) && !this.timer.paused;\n\t}\n\n\tprivate isDirty_(): boolean {\n\t\treturn this.dirty || this.uniforms.dirty || this.textures.dirty;\n\t}\n\n\t// check size change at start of requestFrame\n\tprivate sizeDidChanged_(): boolean {\n\t\tconst gl = this.gl;\n\t\tconst W = Math.ceil(this.canvas.clientWidth),\n\t\t\tH = Math.ceil(this.canvas.clientHeight);\n\t\tif (this.width !== W ||\n\t\t\tthis.height !== H) {\n\t\t\tthis.width = W;\n\t\t\tthis.height = H;\n\t\t\t// Lookup the size the browser is displaying the canvas in CSS pixels\n\t\t\t// and compute a size needed to make our drawingbuffer match it in\n\t\t\t// device pixels.\n\t\t\tconst BW = Math.ceil(W * this.devicePixelRatio);\n\t\t\tconst BH = Math.ceil(H * this.devicePixelRatio);\n\t\t\tthis.canvas.width = BW;\n\t\t\tthis.canvas.height = BH;\n            /*\n            if (gl.canvas.width !== BW ||\n                gl.canvas.height !== BH) {\n                gl.canvas.width = BW;\n                gl.canvas.height = BH;\n                // Set the viewport to match\n                // gl.viewport(0, 0, BW, BH);\n            }\n            */\n\t\t\tfor (const key in this.buffers.values) {\n\t\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\t\tbuffer.resize(gl, BW, BH);\n\t\t\t}\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t\t\tthis.trigger('resize');\n\t\t\t// gl.useProgram(this.program);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate parseTextures_(fragmentString: string): boolean {\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)|\\s*)/gm;\n\t\tconst regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]*)|\\s*)/gm;\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\://|\\.|\\-|\\_]*)|\\s*)((\\s*\\:\\s)(\\{(\\s*\\w*\\:\\s*['|\"]{0,1}\\w*['|\"]{0,1}\\s*[,]{0,1})+\\}))*/gm;\n\t\tlet matches;\n\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\tconst key = matches[1];\n\t\t\tconst url = matches[3];\n\t\t\tif (Texture.isTextureUrl(url)) {\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t\t/*\n\t\t\t\tif (matches[3]) {\n\t\t\t\t\tconst ext = matches[3].split('?')[0].split('.').pop().toLowerCase();\n\t\t\t\t\tconst url = matches[3];\n\t\t\t\t\tif (url && TextureExtensions.indexOf(ext) !== -1) {\n\t\t\t\t\t\t// let options;\n\t\t\t\t\t\t// if (matches[6]) {\n\t\t\t\t\t\t// \ttry {\n\t\t\t\t\t\t// \t\toptions = new Function(`return ${matches[6]};`)();\n\t\t\t\t\t\t// \t} catch (e) {\n\t\t\t\t\t\t// \t\t// console.log('wrong texture options');\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// console.log(options, matches[6]);\n\t\t\t\t\t\t// this.textureList.push({ key, url, options });\n\t\t\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t} else if (!this.buffers.has(key)) {\n\t\t\t\t// create empty texture\n\t\t\t\tthis.textureList.push({ key, url: null });\n\t\t\t}\n\t\t}\n\t\tif (this.canvas.hasAttribute('data-textures')) {\n\t\t\tconst urls = this.canvas.getAttribute('data-textures').split(',');\n\t\t\turls.forEach((url: string, i: number) => {\n\t\t\t\tconst key = 'u_texture' + i;\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t});\n\t\t}\n\t\treturn this.textureList.length > 0;\n\t}\n\n\tload(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<boolean> {\n\t\tconst fragmentVertexString: string = Context.getFragmentVertex(this.gl, fragmentString || this.fragmentString);\n\t\treturn Promise.all([\n\t\t\tContext.getIncludes(fragmentString || this.fragmentString),\n\t\t\tContext.getIncludes(fragmentVertexString || vertexString || this.vertexString)\n\t\t]).then(array => {\n\t\t\tthis.fragmentString = array[0];\n\t\t\tthis.vertexString = array[1];\n\t\t\treturn this.createContext_();\n\t\t});\n\t}\n\n\tprivate getContext_(): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst vertexString = this.vertexString;\n\t\tconst fragmentString = this.fragmentString;\n\t\tthis.vertexString = Context.getVertex(vertexString, fragmentString, this.mode);\n\t\tthis.fragmentString = Context.getFragment(vertexString, fragmentString, this.mode);\n\t\tif (Context.versionDiffers(this.gl, vertexString, fragmentString)) {\n\t\t\tthis.destroyContext_();\n\t\t\tthis.swapCanvas_();\n\t\t\tthis.uniforms = new Uniforms();\n\t\t\tthis.buffers = new Buffers();\n\t\t\tthis.textures = new Textures();\n\t\t\tthis.textureList = [];\n\t\t}\n\t\tif (!this.gl) {\n\t\t\tconst gl = Context.tryInferContext(vertexString, fragmentString, this.canvas, this.options, this.options.extensions, this.options.onError);\n\t\t\tif (!gl) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.gl = gl;\n\t\t}\n\t\treturn this.gl;\n\t}\n\n\tprivate createContext_(): boolean {\n\t\tconst gl = this.getContext_();\n\t\tif (!gl) {\n\t\t\treturn false;\n\t\t}\n\t\tlet vertexShader, fragmentShader;\n\t\ttry {\n\t\t\tContext.inferPrecision(this.fragmentString);\n\t\t\tvertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\t\tfragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER);\n\t\t\t// If Fragment shader fails load a empty one to sign the error\n\t\t\tif (!fragmentShader) {\n\t\t\t\tconst defaultFragment = Context.getFragment(null, null, this.mode);\n\t\t\t\tfragmentShader = Context.createShader(gl, defaultFragment, gl.FRAGMENT_SHADER);\n\t\t\t\tthis.valid = false;\n\t\t\t} else {\n\t\t\t\tthis.valid = true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// !!!\n\t\t\t// console.error(e);\n\t\t\tthis.trigger('error', e);\n\t\t\treturn false;\n\t\t}\n\t\t// Create and use program\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\n\t\tif (!program) {\n\t\t\tthis.trigger('error', Context.lastError);\n\t\t\treturn false;\n\t\t}\n\t\t// console.log(this.vertexString, this.fragmentString, program);\n\t\t// Delete shaders\n\t\t// gl.detachShader(program, vertexShader);\n\t\t// gl.detachShader(program, fragmentShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tthis.program = program;\n\t\tif (this.valid) {\n\t\t\ttry {\n\t\t\t\tthis.buffers = Buffers.getBuffers(gl, this.fragmentString, Context.getBufferVertex(gl));\n\t\t\t} catch (e) {\n\t\t\t\t// console.error('load', e);\n\t\t\t\tthis.valid = false;\n\t\t\t\tthis.trigger('error', e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.create_();\n\t\t\tif (this.animated) {\n\t\t\t\tthis.canvas.classList.add('animated');\n\t\t\t} else {\n\t\t\t\tthis.canvas.classList.remove('animated');\n\t\t\t}\n\t\t}\n\t\t// Trigger event\n\t\tthis.trigger('load', this);\n\t\treturn this.valid;\n\t}\n\n\tprotected create_(): void {\n\t\tthis.mode = this.parseMode_();\n\t\tsuper.create_();\n\t\tthis.createBuffers_();\n\t\tthis.createTextures_();\n\t}\n\n\tprotected parseMode_(): ContextMode | string {\n\t\tlet mode: ContextMode | string = this.mode;\n\t\tif (this.canvas.hasAttribute('data-mode')) {\n\t\t\tconst data = this.canvas.getAttribute('data-mode');\n\t\t\tif (['flat', 'box', 'sphere', 'torus'].indexOf(data) !== -1 || data.indexOf('.obj') !== -1) {\n\t\t\t\tmode = data;\n\t\t\t}\n\t\t}\n\t\treturn mode;\n\t}\n\n\tprotected createBuffers_() {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected createTextures_() {\n\t\tconst hasTextures = this.parseTextures_(this.fragmentString);\n\t\tif (hasTextures) {\n\t\t\tthis.textureList.filter(x => x.url).forEach(x => {\n\t\t\t\tthis.setTexture(x.key, x.url, x.options);\n\t\t\t});\n\t\t\tthis.textureList = [];\n\t\t}\n\t}\n\n\tprotected update_(): void {\n\t\tsuper.update_();\n\t\tthis.updateBuffers_();\n\t\tthis.updateTextures_();\n\t}\n\n\tprotected updateBuffers_(): void {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected updateTextures_(): void {\n\t\tconst gl = this.gl;\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.tryUpdate(gl);\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, texture.key, [texture.index]);\n\t\t}\n\t}\n\n\tprivate destroyContext_(): void {\n\t\tconst gl = this.gl;\n\t\tgl.useProgram(null);\n\t\tif (this.program) {\n\t\t\tgl.deleteProgram(this.program);\n\t\t}\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.destroy(gl);\n\t\t}\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.destroy(gl);\n\t\t}\n\t\tthis.buffers = null;\n\t\tthis.textures = null;\n\t\tthis.uniforms = null;\n\t\tthis.program = null;\n\t\tthis.gl = null;\n\t}\n\n\tprivate swapCanvas_(): void {\n\t\tconst canvas = this.canvas;\n\t\tconst canvas_ = canvas.cloneNode() as HTMLCanvasElement;\n\t\tcanvas.parentNode.replaceChild(canvas_, canvas);\n\t\tthis.canvas = canvas_;\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tdestroy(): void {\n\t\tthis.removeListeners_();\n\t\tthis.destroyContext_();\n\t\tthis.animated = false;\n\t\tthis.valid = false;\n\t\tCanvas.items.splice(Canvas.items.indexOf(this), 1);\n\t}\n\n\tloadTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t) {\n\t\tif (this.valid) {\n\t\t\t// Logger.log('GlslCanvas.loadTexture', key, urlElementOrData);\n\t\t\tthis.textures.createOrUpdate(this.gl, key, urlElementOrData, this.buffers.count, options, this.options.workpath).then(\n\t\t\t\ttexture => {\n\t\t\t\t\tconst index = texture.index;\n\t\t\t\t\tconst uniform = this.uniforms.createTexture(key, index);\n\t\t\t\t\tuniform.texture = texture;\n\t\t\t\t\tconst keyResolution = key.indexOf('[') !== -1 ? key.replace('[', 'Resolution[') : key + 'Resolution';\n\t\t\t\t\t// const uniformResolution = ;\n\t\t\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, keyResolution, [texture.width, texture.height]);\n\t\t\t\t\t// Logger.log('loadTexture', key, url, index, texture.width, texture.height);\n\t\t\t\t\treturn texture;\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconst message = Array.isArray(error.path) ? error.path.map((x: any) => x.error ? x.error.message : '').join(', ') : error.message;\n\t\t\t\t\tLogger.error('GlslCanvas.loadTexture.error', key, urlElementOrData, message);\n\t\t\t\t\tthis.trigger('textureError', { key, urlElementOrData, message });\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.textureList.push({ key, url: urlElementOrData, options });\n\t\t}\n\t}\n\n\tsetTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): void {\n\t\treturn this.setUniform_(key, [urlElementOrData], options);\n\t}\n\n\tsetUniform(key: string, ...values: any[]): void {\n\t\treturn this.setUniform_(key, values);\n\t}\n\n\tsetUniformOfInt(key: string, values: any[]): void {\n\t\treturn this.setUniform_(key, values, null, UniformType.Int);\n\t}\n\n\tsetUniforms(values: IUniformOption): void {\n\t\tfor (const key in values) {\n\t\t\tthis.setUniform(key, values[key]);\n\t\t}\n\t}\n\n\tpause(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.pause();\n\t\t\tthis.canvas.classList.add('paused');\n\t\t\tthis.trigger('pause');\n\t\t}\n\t}\n\n\tplay(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.play();\n\t\t\tthis.canvas.classList.remove('paused');\n\t\t\tthis.trigger('play');\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tif (this.valid) {\n\t\t\tif (this.timer.paused) {\n\t\t\t\tthis.play();\n\t\t\t} else {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckRender(): void {\n\t\tif (this.isVisible_() && (this.sizeDidChanged_() || this.isDirty_() || this.isAnimated_())) {\n\t\t\tthis.render();\n\t\t\tthis.canvas.classList.add('playing');\n\t\t} else {\n\t\t\tthis.canvas.classList.remove('playing');\n\t\t}\n\t}\n\n\t/*\n\ttest(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst vertex = this.vertexString;\n\t\t\tconst fragment = this.fragmentString;\n\t\t\tconst paused = this.timer.paused;\n\t\t\t// Thanks to @thespite for the help here\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n\t\t\tconst extension = this.gl.getExtension('EXT_disjoint_timer_query');\n\t\t\tconst query = extension.createQueryEXT();\n\t\t\tlet wasValid = this.valid;\n\t\t\tif (fragmentString || vertexString) {\n\t\t\t\tthis.load(fragmentString, vertexString);\n\t\t\t\twasValid = this.valid;\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.timer.paused = true;\n\t\t\textension.beginQueryEXT(extension.TIME_ELAPSED_EXT, query);\n\t\t\tthis.render();\n\t\t\textension.endQueryEXT(extension.TIME_ELAPSED_EXT);\n\t\t\tconst waitForTest = () => {\n\t\t\t\tthis.render();\n\t\t\t\tconst available = extension.getQueryObjectEXT(query, extension.QUERY_RESULT_AVAILABLE_EXT);\n\t\t\t\tconst disjoint = this.gl.getParameter(extension.GPU_DISJOINT_EXT);\n\t\t\t\tif (available && !disjoint) {\n\t\t\t\t\tconst result = {\n\t\t\t\t\t\twasValid: wasValid,\n\t\t\t\t\t\tfragment: fragmentString || this.fragmentString,\n\t\t\t\t\t\tvertex: vertexString || this.vertexString,\n\t\t\t\t\t\ttimeElapsedMs: extension.getQueryObjectEXT(query, extension.QUERY_RESULT_EXT) / 1000000.0\n\t\t\t\t\t};\n\t\t\t\t\tthis.timer.paused = paused;\n\t\t\t\t\tif (fragmentString || vertexString) {\n\t\t\t\t\t\tthis.load(fragment, vertex);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else {\n\t\t\t\t\twindow.requestAnimationFrame(waitForTest);\n\t\t\t\t}\n\t\t\t}\n\t\t\twaitForTest();\n\t\t});\n\t}\n\t*/\n\n}\n\nif (document) {\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\tCanvas.loadAll();\n\t});\n}\n"]}