{"version":3,"sources":["src/glsl.ts","../../node_modules/promise-polyfill/src/index.js","../../node_modules/promise-polyfill/src/finally.js","../../src/logger/logger.ts","../../src/core/common.ts","../../src/context/context.ts","../../src/buffers/buffers.ts","../../src/core/iterable.ts","../../src/geometry/geometry.ts","../../src/geometry/flat-geometry.ts","../../src/math/vector2.ts","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../src/textures/textures.ts","../../src/math/vector3.ts","../../src/camera/orbit-camera.ts","../../src/canvas/canvas-timer.ts","../../src/core/subscriber.ts","../../src/geometry/box-geometry.ts","../../src/geometry/sphere-geometry.ts","../../src/geometry/torus-geometry.ts","../../src/loaders/obj-loader.ts","../../src/uniforms/uniforms.ts","../../src/renderer/renderer.ts","../../src/canvas/canvas.ts"],"names":["glsl","exports","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","_assertThisInitialized","self","ReferenceError","setTimeoutFunc","setTimeout","isArray","x","Boolean","noop","Promise","fn","this","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","reject","promise","resolve","push","newValue","then","finale","thisArg","apply","arguments","_unhandledRejectionFn","len","Handler","done","value","reason","ex","prom","callback","all","arr","args","Array","slice","call","remaining","res","val","race","setImmediate","err","console","warn","LoggerLevel","Common","fetch","url","xhr","XMLHttpRequest","onload","response","responseText","onerror","error","log","Error","ontimeout","onabort","open","send","Logger","_console","enabled","level","Log","_console2","Warn","_console3","ContextVersion","ContextPrecision","ContextMode","DefaultWebGLBufferVertex","DefaultWebGL2BufferVertex","DefaultWebGLFlatFragment","DefaultWebGLMeshVertex","DefaultWebGL2MeshVertex","DefaultWebGLMeshFragment","DefaultWebGL2FlatFragment","DefaultWebGL2MeshFragment","ContextError","ContextDefault","webgl","flat","vertex","fragment","mesh","webgl2","ContextVertexBuffers","Context","getContext_","canvas","options","names","context","getContext","getContext2_","getFragmentVertex","gl","fragmentString","vertexString","isWebGl2","replace","exec","getIncludes","input","match","regex","promises","index","chunks","join","isWebGl","WebGLRenderingContext","window","WebGL2RenderingContext","inferVersion","source","indexOf","WebGl2","WebGl","inferPrecision","precision","versionDiffers","currentVersion","getBufferVertex","getVertex","mode","Flat","version","getFragment","tryInferContext","attributes","extensions","errorCallback","handleError","errorCode","html","container","parentNode","innerHTML","BrowserSupport","inferContext","supportedExtensions","getSupportedExtensions","forEach","getExtension","Other","tryGetContext","createShader","type","offset","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","locations","program","attachShader","bindAttribLocation","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","createVertexBuffers","vertexBuffers","texcoordIndex","getAttribLocation","texcoord","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionIndex","position","MediumP","BufferFloatType","StringMap","IterableStringMap","values","_proto","has","hasOwnProperty","set","item","get","callbackfn","reduce","initialValue","previous","Geometry","assign","positions","size","createData_","createAttributes_","createBufferData_","array","buffer","createAttribLocation_","name","location","positionBuffer","positionLocation","texcoords","texcoordBuffer","texcoordLocation","normals","normalBuffer","normalLocation","colors","colorBuffer","colorLocation","attachAttributes_","attribLocation","bindAttributes_","fromIndices","indices","FlatGeometry","_Geometry","BuffersDefaultFragment","BuffersDefaultFragment2","Buffer","BW","BH","createFramebuffer","texture","getTexture","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","getFloatType","floatType","extension","extensionName","HALF_FLOAT","HALF_FLOAT_OES","createTexture","activeTexture","TEXTURE0","bindTexture","texImage2D","RGBA16F","RGBA","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","resize","bindFramebuffer","pixels","status","minW","Math","min","minH","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","deleteTexture","IOBuffer","isValid","geometry","_proto2","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","output","render","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","drawArrays","TRIANGLES","destroy","Buffers","_IterableStringMap","Constructor","protoProps","staticProps","getBuffers","buffers","count","matches","regexp","bufferFragmentString","drawingBufferWidth","drawingBufferHeight","keys","Vector2","y","isVector2","copy","v","sqrt","normalize","divideScalar","scalar","multiplyScalar","subVectors","a","b","addVectors","ARRAY_TYPE","out","glMatrix.ARRAY_TYPE","identity","rotate","rad","axis","s","c","t","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","b00","b01","b02","b10","b11","b12","b20","b21","b22","z","hypot","sin","cos","TextureSourceType","TextureFilteringType","Vector3","isVector3","crossVectors","ax","ay","az","bx","by","bz","RAD","PI","OrbitCamera","theta","phi","radius","_this","_Vector","dirty","down","mouse","move","max","up","wheel","d","fromVector","vector","acos","atan","CanvasTimer","delay","current","delta","paused","start","now","performance","play","pause","next","Listener","event","Subscriber","listeners","Set","logListeners","subscribe","listener","add","unsubscribe","delete","unsubscribeAll","on","off","trigger","_len","data","BoxGeometry","faceColors","j","concat","SphereGeometry","ix","iy","phiLength","thetaLength","p","n","thetaEnd","grid","positionRow","uOffset","u","uvx","uvy","heightDivisions","TorusGeometry","normal","p1","p2","B","T","N","calculatePositionOnCurve","cx","cy","q","cu","su","quOverP","cs","COLORS","CI","ObjLoader","load","text","parse","parseIndices","faceIndices","k","l","NaN","parseFaces","F","V","VN","VT","_this2","si","vl","fill","rgb","_this3","split","line","trim","map","parseFloat","f","parseInt","boundingBox","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","dx","dy","dz","unrapUvw","pitch","asin","yaw","atan2","tx","ty","TextureImageExtensions","TextureVideoExtensions","TextureExtensions","isTextureData","object","UniformMethod","UniformType","Texture","_Subscriber","workpath","filtering","Linear","valid","animated","powerOf2","isPowerOf2","isSafari","test","navigator","userAgent","isTextureUrl","isTexture","urlElementOrData","getTextureOptions","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","prev","curr","params","decodeURIComponent","document","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","element","width","height","setData","Uint8Array","setUrl","setElement","sourceType","Url","src","String","ext","pop","toLowerCase","createElement","setAttribute","loop","muted","addEventListener","crossOrigin","originalElement","Element","video","update","setFiltering","message","JSON","stringify","Data","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","naturalWidth","naturalHeight","UNSIGNED_BYTE","videoWidth","videoHeight","imageBuffer","tryUpdate","MipMap","wrapS","repeat","REPEAT","wrapT","LINEAR_MIPMAP_LINEAR","LINEAR","generateMipmap","Nearest","Textures","clean","createOrUpdate","_this4","textureOptions","flag","METHODS_INT","Uniform1i","Uniform2i","Uniform3i","Uniform4i","METHODS_FLOAT","Uniform1f","Uniform2f","Uniform3f","Uniform4f","METHODS_INTV","Uniform1iv","Uniform2iv","Uniform3iv","Uniform4iv","METHODS_FLOATV","Uniform1fv","Uniform2fv","Uniform3fv","Uniform4fv","Uniform","method","UniformMatrix2fv","UniformMatrix3fv","UniformMatrix4fv","getUniformLocation","UniformTexture","_Uniform","Uniforms","isArrayOfInteger","isInteger","isArrayOfNumber","isArrayOfBoolean","isArrayOfTexture","isArrayOfSampler2D","Sampler2D","getType_","Unknown","subject","Float","Bool","getMethod_","isVector","Int","parseUniform","uniform","isDifferent","Renderer","uniforms","textures","textureList","W","H","radians","camera","cache","drawFunc_","drawArrays_","update_","timer","deltaTime","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","doubleSided","cullFace","FRONT","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","BACK","create_","createGeometry_","createUniforms_","parseGeometry_","setMode","defaultMesh","hasDelta","hasTime","hasDate","hasMouse","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","projectionMatrix","mat4","modelViewMatrix","normalMatrix","updateUniforms_","updateProjectionMatrix_","updateModelViewMatrix_","updateNormalMatrix_","fieldOfView","aspect","fovy","near","far","nf","tan","Infinity","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","det","Mesh","Box","Sphere","Torus","getResource","setMesh","Canvas","_Renderer","visible","controls","rect","getBoundingClientRect","devicePixelRatio","style","backgroundColor","getShaders_","success","addListeners_","onLoop","items","of","find","loadAll","getElementsByClassName","filter","urls","hasAttribute","getAttribute","body","onScroll","bind","onWheel","onClick","onMove","onMousedown","onMousemove","onMouseover","onMouseout","onMouseup","onTouchmove","onTouchend","onTouchstart","addCanvasListeners_","removeCanvasListeners_","removeEventListener","removeListeners_","cancelAnimationFrame","rafId","deltaY","toggle","onDown","mx","my","left","top","onUp","clientX","pageX","clientY","pageY","touch","touches","time","checkRender","requestAnimationFrame","setUniform_","loadTexture","isVisible_","innerHeight","documentElement","clientHeight","isAnimated_","isDirty_","sizeDidChanged_","CW","ceil","clientWidth","CH","parseTextures_","_this5","fragmentVertexString","createContext_","destroyContext_","swapCanvas_","onError","defaultFragment","classList","remove","parseMode_","parseMesh_","createBuffers_","createTextures_","_this6","setTexture","updateBuffers_","updateTextures_","canvas_","cloneNode","replaceChild","splice","_this7","keyResolution","path","setUniform","setUniformOfInt","setUniforms"],"mappings":"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","file":"docs/js/glsl-canvas.min.js","sourcesContent":[null,"import promiseFinally from './finally';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = promiseFinally;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n","/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nexport default finallyConstructor;\n","export enum LoggerLevel {\n\tNone = 0,\n\tError = 1,\n\tWarn = 2,\n\tLog = 3,\n}\n\nexport default class Logger {\n\n\tstatic level: LoggerLevel = LoggerLevel.Warn;\n\n\tstatic enabled: boolean = true;\n\n\tstatic log(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Log) {\n\t\t\tconsole.log(...datas);\n\t\t}\n\t}\n\n\tstatic warn(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Warn) {\n\t\t\tconsole.warn(...datas);\n\t\t}\n\t}\n\n\tstatic error(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Error) {\n\t\t\tconsole.error(...datas);\n\t\t}\n\t}\n\n}\n","import 'promise-polyfill';\n\nexport default class Common {\n\tstatic fetch(url: string): Promise<string> {\n\t\t// console.log('Common.fetch', url);\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\n\t\t\txhr.onload = function () {\n\t\t\t\tresolve(xhr.response || xhr.responseText);\n\t\t\t};\n\t\t\txhr.onerror = function (error) {\n\t\t\t\tconsole.log('Common.error', error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.ontimeout = function (error) {\n\t\t\t\t// console.log(error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.onabort = function () {\n\t\t\t\treject(new Error('Aborted'));\n\t\t\t};\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.send(null);\n\t\t})\n\t}\n}\n","import Common from '../core/common';\nimport Logger from '../logger/logger';\n\nexport const DefaultWebGLBufferVertex = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec3 a_normal;\nattribute vec4 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec4 v_color;\nvarying vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main(void) {\n\tgl_Position = a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGL2BufferVertex = `#version 300 es\n\nprecision mediump float;\n\nin vec4 a_position;\nin vec2 a_texcoord;\nin vec3 a_normal;\nin vec4 a_color;\n\nout vec2 v_texcoord;\nout vec3 v_normal;\nout vec4 v_color;\nout vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main() {\n\tgl_Position = a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGLFlatFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGLMeshVertex = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec3 a_normal;\nattribute vec4 a_color;\n\nvarying vec4 v_position;\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec4 v_color;\nvarying vec3 v_light;\n\nuniform float u_time;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main(void) {\n\tvec4 v_position = a_position;\n\t// v_position.y += sin(v_position.x * 0.1) * 10.0;\n\t// v_position.xyz += a_normal * 0.025 + cos(u_time * 5.0) * a_normal * 0.025;\n\tv_position = u_projectionMatrix * u_modelViewMatrix * v_position;\n\tgl_Position = v_position;\n\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0) * 1.5;\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGL2MeshVertex = `#version 300 es\n\nprecision mediump float;\n\nin vec4 a_position;\nin vec2 a_texcoord;\nin vec3 a_normal;\nin vec4 a_color;\n\nout vec2 v_texcoord;\nout vec3 v_normal;\nout vec4 v_color;\nout vec3 v_light;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec3 u_lightAmbient;\nuniform vec3 u_lightColor;\nuniform vec3 u_lightDirection;\n\nvoid main() {\n\tgl_Position = u_projectionMatrix * u_modelViewMatrix * a_position;\n\tv_texcoord = a_texcoord;\n\tv_normal = a_normal;\n\tv_color = a_color;\n\n\t// light\n\tvec4 normal = u_normalMatrix * vec4(a_normal, 1.0);\n\tfloat incidence = max(dot(normal.xyz, u_lightDirection), 0.0);\n\tv_light = u_lightAmbient + (u_lightColor * incidence);\n}\n`;\n\nexport const DefaultWebGLMeshFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 v_texcoord;\nvarying vec3 v_normal;\nvarying vec3 v_light;\nvarying vec4 v_color;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\tgl_FragColor = vec4(v_color.rgb * color * v_light, 1.0);\n}\n`;\n\nexport const DefaultWebGL2FlatFragment = `#version 300 es\n\nprecision mediump float;\n\nout vec4 outColor;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\toutColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGL2MeshFragment = `#version 300 es\n\nprecision mediump float;\n\nin vec2 v_texcoord;\nin vec3 v_light;\nin vec4 v_color;\n\nout vec4 outColor;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\toutColor = vec4(v_color.rgb * color * v_light, 1.0);\n}\n`;\n\nexport enum ContextVersion {\n\tWebGl = 'webgl',\n\tWebGl2 = 'webgl2',\n}\n\nexport enum ContextPrecision {\n\tLowP = 'lowp',\n\tMediumP = 'mediump',\n\tHighP = 'highp',\n}\n\nexport enum ContextMode {\n\tFlat = 'flat',\n\tBox = 'box',\n\tSphere = 'sphere',\n\tTorus = 'torus',\n\tMesh = 'mesh',\n}\n\nexport const ContextDefault = {\n\t'webgl': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLFlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLMeshFragment,\n\t\t}\n\t},\n\t'webgl2': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2FlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2MeshFragment,\n\t\t}\n\t}\n};\n\nexport enum ContextError {\n\tBrowserSupport = 1,\n\tOther = 2,\n}\n\n/*\nexport interface IContextOptions {\n\talpha?: GLboolean;\n\tantialias?: GLboolean;\n\tdepth?: GLboolean;\n\tfailIfMajorPerformanceCaveat?: boolean;\n\tpowerPreference?: WebGLPowerPreference;\n\tpremultipliedAlpha?: GLboolean;\n\tpreserveDrawingBuffer?: GLboolean;\n\tstencil?: GLboolean;\n}\n*/\n\nexport class ContextVertexBuffers {\n\ttexcoord: WebGLBuffer;\n\tposition: WebGLBuffer;\n}\n\nexport default class Context {\n\n\tstatic precision: ContextPrecision = ContextPrecision.MediumP;\n\tstatic lastError: string = '';\n\n\tstatic getContext_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext {\n\t\tconst names = ['webgl', 'experimental-webgl'];\n\t\tlet context = null;\n\t\tfor (let i = 0; i < names.length; ++i) {\n\t\t\ttry {\n\t\t\t\tcontext = canvas.getContext(names[i], options) as WebGLRenderingContext;\n\t\t\t} catch (e) {\n\t\t\t\tif (context) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getContext2_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGL2RenderingContext {\n\t\tlet context = null;\n\t\ttry {\n\t\t\tcontext = canvas.getContext('webgl2', options) as WebGL2RenderingContext;\n\t\t} catch (e) {\n\t\t\t// console.error('GlslCanvas.Context.getContext2_.error', e);\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getFragmentVertex(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string): string {\n\t\tlet vertexString;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*VERTEX)(?:\\s*\\))|(?:#ifdef)(?:\\s*VERTEX)(?:\\s*))/gm;\n\t\t\tconst matches = regexp.exec(fragmentString);\n\t\t\tif (matches !== null) {\n\t\t\t\tvertexString = Context.isWebGl2(gl) ? `#version 300 es\n#define VERTEX\n${fragmentString}` : `#define VERTEX\n${fragmentString}`;\n\t\t\t}\n\t\t}\n\t\t// console.log('vertexString', vertexString);\n\t\treturn vertexString;\n\t}\n\n\tstatic getIncludes(input: string | undefined): Promise<string | undefined> {\n\t\tif (input === undefined) {\n\t\t\treturn Promise.resolve(input);\n\t\t}\n\t\tconst regex = /#include\\s*['|\"](.*.glsl)['|\"]/gm;\n\t\tconst promises = [];\n\t\tlet i = 0;\n\t\tlet match;\n\t\twhile ((match = regex.exec(input)) !== null) {\n\t\t\tpromises.push(Promise.resolve(input.slice(i, match.index)));\n\t\t\ti = match.index + match[0].length;\n\t\t\tpromises.push(Common.fetch(match[1]));\n\t\t}\n\t\tpromises.push(Promise.resolve(input.slice(i)));\n\t\treturn Promise.all(promises).then(chunks => {\n\t\t\treturn chunks.join('');\n\t\t});\n\t}\n\n\tstatic isWebGl(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\treturn context instanceof WebGLRenderingContext;\n\t}\n\n\tstatic isWebGl2(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\t// console.log(context);\n\t\t// return context !== undefined && typeof (context as any).bindBufferRange === 'function';\n\t\treturn (window as any).WebGL2RenderingContext && context instanceof WebGL2RenderingContext;\n\t}\n\n\tstatic inferVersion(vertexString?: string, fragmentString?: string): ContextVersion {\n\t\tconst source: string = vertexString || fragmentString;\n\t\tif (source) {\n\t\t\treturn source.indexOf('#version 300 es') === 0 ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t} else {\n\t\t\treturn ContextVersion.WebGl;\n\t\t}\n\t}\n\n\tstatic inferPrecision(fragmentString: string): ContextPrecision {\n\t\tconst precision: RegExpMatchArray = fragmentString.match(/precision\\s+(.+)\\s+float/);\n\t\tif (precision && precision.length > 1) {\n\t\t\tContext.precision = precision[1] as ContextPrecision;\n\t\t}\n\t\t// console.log('precision', Context.precision);\n\t\treturn Context.precision;\n\t}\n\n\tstatic versionDiffers(gl: WebGLRenderingContext | WebGL2RenderingContext, vertexString?: string, fragmentString?: string): boolean {\n\t\tif (gl) {\n\t\t\tconst currentVersion = this.isWebGl2(gl) ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t\tconst newVersion = Context.inferVersion(vertexString, fragmentString);\n\t\t\treturn newVersion !== currentVersion;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic getBufferVertex(gl: WebGLRenderingContext | WebGL2RenderingContext): string {\n\t\treturn this.isWebGl2(gl) ? DefaultWebGL2BufferVertex : DefaultWebGLBufferVertex;\n\t}\n\n\tstatic getVertex(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\n\t\tif (vertexString) {\n\t\t\treturn vertexString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].vertex;\n\t\t}\n\t}\n\n\tstatic getFragment(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\n\t\tif (fragmentString) {\n\t\t\treturn fragmentString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].fragment;\n\t\t}\n\t}\n\n\tstatic tryInferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, extensions: string[] = [], errorCallback: Function): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext | WebGL2RenderingContext = Context.inferContext(vertexString, fragmentString, canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tif (!(this.isWebGl2(context)) && extensions.indexOf('OES_standard_derivatives') === -1) {\n\t\t\t\textensions.push('OES_standard_derivatives');\n\t\t\t}\n\t\t\tconst supportedExtensions = context.getSupportedExtensions();\n\t\t\textensions.forEach(key => {\n\t\t\t\tif (supportedExtensions.indexOf(key) !== -1) {\n\t\t\t\t\tcontext.getExtension(key);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn(`GlslCanvas ${key} not supported`);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// context.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic tryGetContext(canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, errorCallback: Function): WebGLRenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext = Context.getContext_(canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tcontext.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic inferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\treturn version === ContextVersion.WebGl2 ? this.getContext2_(canvas, options) : this.getContext_(canvas, options);\n\t}\n\n\tstatic createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, source: string, type: number, offset: number = 0): WebGLShader {\n\t\tconst shader = gl.createShader(type);\n\t\tsource = source.replace(/precision\\s+(.+)\\s+float/, `precision ${Context.precision} float`);\n\t\tgl.shaderSource(shader, source);\n\t\tgl.compileShader(shader);\n\t\tconst compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tif (!compiled) {\n\t\t\t// Something went wrong during compilation; get the error\n\t\t\tContext.lastError = gl.getShaderInfoLog(shader);\n\t\t\t// console.log('lastError', Context.lastError);\n\t\t\tLogger.error(`*** Error compiling shader: ${Context.lastError}`);\n\t\t\t// main.trigger('error', {\n\t\t\tgl.deleteShader(shader);\n\t\t\tthrow ({\n\t\t\t\tshader: shader,\n\t\t\t\tsource: source,\n\t\t\t\ttype: type,\n\t\t\t\terror: Context.lastError,\n\t\t\t\toffset: offset\n\t\t\t});\n\t\t}\n\t\treturn shader;\n\t}\n\n\tstatic createProgram(gl: WebGLRenderingContext | WebGL2RenderingContext, shaders: WebGLShader[], attributes?: any[], locations?: number[]): WebGLProgram {\n\t\tconst program = gl.createProgram();\n\t\tfor (let i = 0; i < shaders.length; ++i) {\n\t\t\tgl.attachShader(program, shaders[i]);\n\t\t}\n\t\tif (attributes && locations) {\n\t\t\tfor (let i = 0; i < attributes.length; ++i) {\n\t\t\t\tgl.bindAttribLocation(program, locations ? locations[i] : i, attributes[i]);\n\t\t\t}\n\t\t}\n\t\tgl.linkProgram(program);\n\t\tgl.validateProgram(program);\n\t\t// Check the link status\n\t\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\t\tif (!linked) {\n\t\t\t// something went wrong with the link\n\t\t\tContext.lastError = gl.getProgramInfoLog(program);\n\t\t\tLogger.error(`Error in program linking: ${Context.lastError}`);\n\t\t\tgl.deleteProgram(program);\n\t\t\treturn null;\n\t\t}\n\t\tgl.useProgram(program);\n\t\treturn program;\n\t}\n\n\tstatic createVertexBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram): ContextVertexBuffers {\n\t\tconst vertexBuffers: ContextVertexBuffers = new ContextVertexBuffers();\n\t\tconst texcoordIndex: number = gl.getAttribLocation(program, 'a_texcoord');\n\t\tvertexBuffers.texcoord = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.texcoord);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(texcoordIndex);\n\t\tgl.vertexAttribPointer(texcoordIndex, 2, gl.FLOAT, false, 0, 0);\n\t\tconst positionIndex: number = gl.getAttribLocation(program, 'a_position');\n\t\tvertexBuffers.position = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.position);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(positionIndex);\n\t\tgl.vertexAttribPointer(positionIndex, 2, gl.FLOAT, false, 0, 0);\n\t\treturn vertexBuffers;\n\t}\n\n}\n","import Context from '../context/context';\nimport IterableStringMap from '../core/iterable';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\n\nexport const BuffersDefaultFragment = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid main(){\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}`;\n\nexport const BuffersDefaultFragment2 = `#version 300 es\n\nprecision mediump float;\n\nout vec4 outColor;\n\nvoid main() {\n\toutColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n`;\n\nexport enum BufferFloatType {\n\tFLOAT = 0,\n\tHALF_FLOAT,\n}\n\nexport class Buffer {\n\n\tstatic floatType: BufferFloatType = BufferFloatType.HALF_FLOAT;\n\ttexture: WebGLTexture;\n\tbuffer: WebGLFramebuffer;\n\tBW: number;\n\tBH: number;\n\tindex: number;\n\n\tconstructor(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number) {\n\t\t// BW = BH = 1024;\n\t\tconst buffer = gl.createFramebuffer();\n\t\tconst texture = this.getTexture(gl, BW, BH, index);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tthis.texture = texture;\n\t\tthis.buffer = buffer;\n\t\tthis.BW = BW;\n\t\tthis.BH = BH;\n\t\tthis.index = index;\n\t}\n\n\tgetFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\tlet floatType: number, extension;\n\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_float' : 'OES_texture_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = gl.FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t} else {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_half_float' : 'OES_texture_half_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = extension.HALF_FLOAT_OES;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t}\n\t\treturn floatType;\n\t}\n\n\tgetTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number): WebGLTexture {\n\t\t// BW = BH = 1024;\n\t\tconst floatType = this.getFloatType(gl);\n\t\tconst texture = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, (Context.isWebGl2(gl) ? (gl as WebGL2RenderingContext).RGBA16F : gl.RGBA), BW, BH, 0, gl.RGBA, floatType, null);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t}\n\t\t\treturn this.getTexture(gl, BW, BH, index);\n\t\t}\n\t\treturn texture;\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tif (BW !== this.BW || BH !== this.BH) {\n\t\t\tconst buffer = this.buffer;\n\t\t\tconst texture = this.texture;\n\t\t\tconst index = this.index;\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\tconst minW = Math.min(BW, this.BW);\n\t\t\tconst minH = Math.min(BH, this.BH);\n\t\t\tlet pixels: Float32Array;\n\t\t\tlet floatType = this.getFloatType(gl);\n\t\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tpixels = new Float32Array(minW * minH * 4);\n\t\t\t\tgl.readPixels(0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tconst newIndex = index + 1; // temporary index\n\t\t\tconst newTexture = this.getTexture(gl, BW, BH, newIndex);\n\t\t\tfloatType = this.getFloatType(gl);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tif (pixels) {\n\t\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tconst newBuffer = gl.createFramebuffer();\n\t\t\t/*\n\t\t\tif (!newBuffer) {\n\t\t\t\tLogger.error('Failed to create the frame buffer object');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t*/\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tgl.deleteTexture(texture);\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, newTexture);\n\t\t\tthis.index = index;\n\t\t\tthis.texture = newTexture;\n\t\t\tthis.buffer = newBuffer;\n\t\t\tthis.BW = BW;\n\t\t\tthis.BH = BH;\n\t\t}\n\t}\n\n}\n\nexport class IOBuffer {\n\n\tprogram: WebGLProgram;\n\tgeometry: Geometry;\n\tinput: Buffer;\n\toutput: Buffer;\n\tindex: number;\n\tkey: string;\n\tvertexString: string;\n\tfragmentString: string;\n\tBW: number;\n\tBH: number;\n\tisValid: boolean = false;\n\n\tconstructor(index: number, key: string, vertexString: string, fragmentString: string) {\n\t\tthis.index = index;\n\t\tthis.key = key;\n\t\tthis.vertexString = vertexString;\n\t\tthis.fragmentString = fragmentString;\n\t\tthis.geometry = new FlatGeometry();\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tconst vertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\tlet fragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER, 1);\n\t\tif (!fragmentShader) {\n\t\t\tfragmentShader = Context.createShader(gl, Context.isWebGl2(gl) ? BuffersDefaultFragment2 : BuffersDefaultFragment, gl.FRAGMENT_SHADER);\n\t\t\tthis.isValid = false;\n\t\t} else {\n\t\t\tthis.isValid = true;\n\t\t}\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]);\n\t\tif (!program) {\n\t\t\tthis.isValid = false;\n\t\t\tgl.deleteShader(vertexShader);\n\t\t\tgl.deleteShader(fragmentShader);\n\t\t\treturn;\n\t\t}\n\t\tthis.geometry.create(gl, program);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tconst input = new Buffer(gl, BW, BH, this.index + 0);\n\t\tconst output = new Buffer(gl, BW, BH, this.index + 2);\n\t\tthis.program = program;\n\t\tthis.input = input;\n\t\tthis.output = output;\n\t\t// console.log(geometry.position.length / 3, geometry.size);\n\t\t// console.log(gl.getProgramInfoLog(program));\n\t\t// Context.lastError = gl.getProgramInfoLog(program);\n\t\t// Logger.warn(`Error in program linking: ${Context.lastError}`);\n\t}\n\n\trender(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tgl.useProgram(this.program);\n\t\t// gl.activeTexture(gl.TEXTURE0);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.input.texture);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.output.buffer);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.output.texture);\n\t\t// console.log(this.output.texture);\n\t\t// console.log('binding', gl.getParameter(gl.FRAMEBUFFER_BINDING));\n\t\t// gl.enable(gl.DEPTH_TEST); // Enable depth testing\n\t\t// gl.depthFunc(gl.LEQUAL); // Near things obscure far things\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t// Clear the canvas before we start drawing on it.\n\t\t\tgl.clearColor(0, 0, 0, 1);  // black\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\t}\n\t\t// this.geometry.createAttributes_(gl, this.program);\n\t\t// this.geometry.bindAttributes_(gl, this.program);\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// console.log(this.geometry.size);\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// console.log(BW, BH);\n\t\t// console.log(gl.getProgramInfoLog(this.program));\n\t\t// swap\n\t\tconst input = this.input;\n\t\t// const output = this.output;\n\t\tthis.input = this.output;\n\t\tthis.output = input;\n\t\t// console.log('swap');\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tgl.useProgram(this.program);\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tthis.input.resize(gl, BW, BH);\n\t\tthis.output.resize(gl, BW, BH);\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t\tgl.deleteProgram(this.program);\n\t\tthis.program = null;\n\t\tthis.input = null;\n\t\tthis.output = null;\n\t}\n\n}\n\nexport default class Buffers extends IterableStringMap<IOBuffer> {\n\n\tget count(): number {\n\t\treturn Object.keys(this.values).length * 4;\n\t}\n\n\tstatic getBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string, vertexString: string): Buffers {\n\t\tconst buffers: Buffers = new Buffers();\n\t\tlet count = 0;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm;\n\t\t\tlet matches;\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\t\tconst i = matches[3] || matches[4];\n\t\t\t\tconst key = 'u_buffer' + i;\n\t\t\t\tconst bufferFragmentString = Context.isWebGl2(gl) ? `#version 300 es\n#define BUFFER_${i}\n${fragmentString}` : `#define BUFFER_${i}\n${fragmentString}`;\n\t\t\t\tconst buffer = new IOBuffer(count, key, vertexString, bufferFragmentString);\n\t\t\t\tbuffer.create(gl, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\tif (buffer.program) {\n\t\t\t\t\tbuffers.set(key, buffer);\n\t\t\t\t} else {\n\t\t\t\t\tthrow (`buffer error ${key}`);\n\t\t\t\t}\n\t\t\t\tcount += 4;\n\t\t\t}\n\t\t}\n\t\treturn buffers;\n\t}\n\n}\n","export class NumberMap<T> { [key: number]: T; };\nexport class StringMap<T> { [key: string]: T; };\n\nexport default class IterableStringMap<T> {\n\n\tvalues: StringMap<T> = new StringMap<T>();\n\n\thas(key: string) {\n\t\treturn this.values.hasOwnProperty(key);\n\t}\n\n\tset(key: string, item: T) {\n\t\tthis.values[key] = item;\n\t}\n\n\tget(key: string): T {\n\t\treturn this.values[key];\n\t}\n\n\tforEach(callbackfn: Function) {\n\t\tlet i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tcallbackfn(this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t}\n\n\treduce(callbackfn: Function, initialValue?: any) {\n\t\tlet previous = initialValue, i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tprevious = callbackfn(previous, this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t\treturn previous;\n\t}\n\n}\n","export interface IGeometry {\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n}\n\nexport default class Geometry implements IGeometry {\n\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n\n\tpositionBuffer: WebGLBuffer;\n\tcolorBuffer: WebGLBuffer;\n\tnormalBuffer: WebGLBuffer;\n\ttexcoordBuffer: WebGLBuffer;\n\n\tpositionLocation: number;\n\tcolorLocation: number;\n\tnormalLocation: number;\n\ttexcoordLocation: number;\n\n\tsize: number;\n\n\tconstructor(options?: IGeometry) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (this.positions) {\n\t\t\t\tthis.size = this.positions.length / 3;\n\t\t\t}\n\t\t\t/*\n\t\t\tconsole.log(options);\n\t\t\tthis.positions = Geometry.fromIndices(options.indices, options.positions, 3);\n\t\t\tthis.normals = Geometry.fromIndices(options.indices, options.normals, 3);\n\t\t\tthis.texcoords = Geometry.fromIndices(options.indices, options.texcoords, 2);\n\t\t\tthis.colors = Geometry.fromIndices(options.indices, options.colors, 4);\n\t\t\t*/\n\t\t}\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tthis.createData_();\n\t\tthis.createAttributes_(gl, program);\n\t}\n\n\tcreateBufferData_(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, array: BufferSource) {\n\t\tconst buffer = gl.createBuffer();\n\t\tgl.bindBuffer(type, buffer);\n\t\tgl.bufferData(type, array, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\tcreateAttribLocation_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram, name: string, size: number, type: number) {\n\t\tconst location: number = gl.getAttribLocation(program, name);\n\t\tgl.enableVertexAttribArray(location);\n\t\tgl.vertexAttribPointer(location, size, type, false, 0, 0);\n\t\treturn location;\n\t}\n\n\tcreateAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tthis.positionBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions));\n\t\t\tthis.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tthis.texcoordBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.texcoords));\n\t\t\tthis.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tthis.normalBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.normals));\n\t\t\tthis.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tthis.colorBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.colors));\n\t\t\tthis.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t\t/*\n\t\tconsole.log('positionLocation', this.positionLocation);\n\t\tconsole.log('texcoordLocation', this.texcoordLocation);\n\t\tconsole.log('normalLocation', this.normalLocation);\n\t\tconsole.log('colorLocation', this.colorLocation);\n\t\t*/\n\t}\n\n\tattachAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tlet attribLocation: number;\n\t\tif (this.positions) {\n\t\t\t// this.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_position');\n\t\t\tgl.enableVertexAttribArray(attribLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\t\t\tgl.vertexAttribPointer(attribLocation, this.positions.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t\t// console.log('positionLocation', attribLocation);\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\t// this.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_texcoord');\n\t\t\tgl.enableVertexAttribArray(this.texcoordLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\t\t\tgl.vertexAttribPointer(this.texcoordLocation, this.texcoords.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t\t// console.log('texcoordLocation', attribLocation);\n\t\t}\n\t\tif (this.normals) {\n\t\t\t// this.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_normal');\n\t\t\tgl.enableVertexAttribArray(this.normalLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n\t\t\tgl.vertexAttribPointer(this.normalLocation, this.normals.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t\t// console.log('normalLocation', attribLocation);\n\t\t}\n\t\tif (this.colors) {\n\t\t\t// this.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_color');\n\t\t\tgl.enableVertexAttribArray(this.colorLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n\t\t\tgl.vertexAttribPointer(this.colorLocation, this.colors.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t\t// console.log('colorLocation', attribLocation);\n\t\t}\n\t}\n\n\tbindAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t}\n\n\tprotected createData_() {\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [];\n\t\tthis.normals = [];\n\t\tthis.texcoords = [];\n\t\tthis.colors = [];\n\t\tthis.size = 0;\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n\tstatic fromIndices(indices: number[], array: number[], size: number): number[] {\n\t\tconst buffer: number[] = [];\n\t\tindices.forEach(i => {\n\t\t\tbuffer.push.apply(buffer, array.slice(i * size, i * size + size));\n\t\t});\n\t\treturn buffer;\n\t}\n\n}\n","import Geometry from \"./geometry\";\n\nexport default class FlatGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 6;\n\t\tthis.positions = [\n\t\t\t-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0,\n\t\t\t-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t];\n\t\tthis.colors = [\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t];\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n}\n","export default class Vector2 {\n\n\tisVector2: boolean = true;\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tcopy(v: Vector2): Vector2 {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\treturn this;\n\t}\n\n\tlength(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tnormalize(): Vector2 {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\tdivideScalar(scalar: number): Vector2 {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tmultiplyScalar(scalar: number): Vector2 {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\n\tsubVectors(a: Vector2, b: Vector2): Vector2 {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\treturn this;\n\t}\n\n\taddVectors(a: Vector2, b: Vector2): Vector2 {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\treturn this;\n\t}\n\n}\n\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// import 'promise-polyfill';\nimport IterableStringMap from '../core/iterable';\nimport Subscriber from '../core/subscriber';\nimport Logger from '../logger/logger';\n\nexport const TextureImageExtensions = ['jpg', 'jpeg', 'png'];\nexport const TextureVideoExtensions = ['ogv', 'webm', 'mp4'];\nexport const TextureExtensions = TextureImageExtensions.concat(TextureVideoExtensions);\n\nexport enum TextureSourceType {\n\tData = 0,\n\tElement = 1,\n\tUrl = 2,\n}\n\nexport enum TextureFilteringType {\n\tMipMap = 'mipmap',\n\tLinear = 'linear',\n\tNearest = 'nearest',\n}\n\nexport interface ITextureData {\n\tdata: Uint8Array;\n\twidth: number;\n\theight: number;\n}\n\nexport interface ITextureOptions {\n\turl?: string;\n\telement?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element;\n\tdata?: Uint8Array;\n\twidth?: number;\n\theight?: number;\n\tfiltering?: TextureFilteringType;\n\trepeat?: boolean;\n\tUNPACK_FLIP_Y_WEBGL?: boolean;\n\tUNPACK_PREMULTIPLY_ALPHA_WEBGL?: number;\n\tTEXTURE_WRAP_S?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n\tTEXTURE_WRAP_T?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n}\n\nexport interface ITextureInput {\n\tkey: string;\n\turl: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData;\n\toptions?: ITextureOptions;\n}\n\nexport function isTextureData(object: any): object is ITextureData {\n\treturn 'data' in object && 'width' in object && 'height' in object;\n}\n\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\nexport class Texture extends Subscriber {\n\n\tkey: string;\n\tindex: number;\n\toptions: ITextureOptions;\n\tworkpath: string;\n\twidth: number;\n\theight: number;\n\n\ttexture: WebGLTexture;\n\tsource: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | Uint8Array;\n\tsourceType: TextureSourceType;\n\tfiltering: TextureFilteringType;\n\turl: string;\n\tvalid: boolean = false;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\tpowerOf2: boolean = false;\n\n\tconstructor(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\tindex: number,\n\t\toptions: ITextureOptions = { filtering: TextureFilteringType.Linear },\n\t\tworkpath?: string,\n\t) {\n\t\tsuper();\n\t\tthis.key = key;\n\t\tthis.index = index;\n\t\tthis.options = options;\n\t\tthis.workpath = workpath;\n\t\tthis.create(gl);\n\t}\n\n\tstatic isPowerOf2(value: number): boolean {\n\t\treturn (value & (value - 1)) === 0;\n\t}\n\n\tstatic isSafari(): boolean {\n\t\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\t}\n\n\tstatic isTextureUrl(text: string): boolean {\n\t\treturn text && (/\\.(jpg|jpeg|png|ogv|webm|mp4)$/i).test(text.split('?')[0]);\n\t}\n\n\tstatic isTexture(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t): boolean {\n\t\tconst options = Texture.getTextureOptions(urlElementOrData);\n\t\treturn options !== undefined;\n\t}\n\n\tstatic getMaxTextureSize(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t};\n\n\tstatic getTextureOptions(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): ITextureOptions {\n\t\tif (typeof urlElementOrData === 'string' && urlElementOrData !== '') {\n\t\t\tif (Texture.isTextureUrl(urlElementOrData)) {\n\t\t\t\toptions.url = urlElementOrData;\n\t\t\t\tif (urlElementOrData.indexOf('?') !== -1) {\n\t\t\t\t\toptions = urlElementOrData.split('?')[1].split('&').reduce(function (prev: ITextureOptions, curr) {\n\t\t\t\t\t\tconst params = curr.split('=');\n\t\t\t\t\t\tconst key = decodeURIComponent(params[0]);\n\t\t\t\t\t\tconst value = decodeURIComponent(params[1]);\n\t\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\t\tcase 'filtering':\n\t\t\t\t\t\t\t\tprev[key] = value as TextureFilteringType;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'repeat':\n\t\t\t\t\t\t\tcase 'UNPACK_FLIP_Y_WEBGL':\n\t\t\t\t\t\t\t\tprev[key] = Boolean(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UNPACK_PREMULTIPLY_ALPHA_WEBGL':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_S':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_T':\n\t\t\t\t\t\t\t\tprev[key] = Number(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, options);\n\t\t\t\t}\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tif (document) {\n\t\t\t\turlElementOrData = document.querySelector(urlElementOrData);\n\t\t\t\t// Logger.log(urlElementOrData);\n\t\t\t}\n\t\t}\n\t\tif (urlElementOrData instanceof HTMLCanvasElement || urlElementOrData instanceof HTMLImageElement || urlElementOrData instanceof HTMLVideoElement) {\n\t\t\toptions.element = urlElementOrData;\n\t\t\treturn options;\n\t\t} else if (isTextureData(urlElementOrData)) {\n\t\t\toptions.data = urlElementOrData.data;\n\t\t\toptions.width = urlElementOrData.width;\n\t\t\toptions.height = urlElementOrData.height;\n\t\t\treturn options;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcreate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext\n\t): void {\n\t\tthis.texture = gl.createTexture();\n\t\tif (this.texture) {\n\t\t\tthis.valid = true;\n\t\t}\n\t\t// Default to a 1-pixel black texture so we can safely render while we wait for an image to load\n\t\t// See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n\t\t// [255, 255, 255, 255]\n\t\tthis.setData(gl, 1, 1, new Uint8Array([0, 0, 0, 0]), this.options);\n\t\t// this.bindTexture();\n\t\t// this.load(options);\n\t}\n\n\tload(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.options = options;\n\t\tif (typeof options.url === 'string') {\n\t\t\tif (this.url === undefined || options.url !== this.url) {\n\t\t\t\treturn this.setUrl(gl, options.url, options);\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(this);\n\t\t\t}\n\t\t} else if (options.element) {\n\t\t\treturn this.setElement(gl, options.element, options);\n\t\t} else if (options.data && options.width && options.height) {\n\t\t\treturn this.setData(gl, options.width, options.height, options.data, options);\n\t\t} else {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t}\n\n\tsetUrl(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\turl: string,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tif (!this.valid) {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t\tthis.url = url; // save URL reference (will be overwritten when element is loaded below)\n\t\tthis.source = url;\n\t\tthis.sourceType = TextureSourceType.Url;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tconst src = String((url.indexOf(':/') === -1 && this.workpath !== undefined) ? `${this.workpath}/${url}` : url);\n\t\tconst ext = url.split('?')[0].split('.').pop().toLowerCase();\n\t\tconst isVideo = TextureVideoExtensions.indexOf(ext) !== -1;\n\t\tlet element: HTMLVideoElement | HTMLImageElement;\n\t\tlet promise: Promise<Texture>;\n\t\tif (isVideo) {\n\t\t\tLogger.log('GlslCanvas.setUrl video', src);\n\t\t\telement = document.createElement('video'); // new HTMLVideoElement();\n\t\t\telement.setAttribute('preload', 'auto');\n\t\t\t// element.setAttribute('autoplay', 'true');\n\t\t\telement.setAttribute('loop', 'true');\n\t\t\telement.setAttribute('muted', 'true');\n\t\t\telement.setAttribute('playsinline', 'true');\n\t\t\t// element.autoplay = true;\n\t\t\telement.loop = true;\n\t\t\telement.muted = true;\n\t\t\t/*\n\t\t\tif (!(Texture.isSafari() && /(?<!http|https):\\//.test(url))) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\t*/\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\telement.src = src;\n\t\t\telement.addEventListener('canplay', () => {\n\t\t\t\t(element as HTMLVideoElement).play();\n\t\t\t});\n\t\t} else {\n\t\t\tLogger.log('GlslCanvas.setUrl image', src);\n\t\t\telement = document.createElement('img'); // new HTMLImageElement();\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\tif (!(Texture.isSafari() && url.slice(0, 5) === 'data:')) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t}\n\t\treturn promise;\n\t}\n\n\tsetElement(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\telement: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\toptions = this.options = Object.assign(this.options, options);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst originalElement = element;\n\t\t\t// a string element is interpeted as a CSS selector\n\t\t\tif (typeof element === 'string') {\n\t\t\t\telement = document.querySelector(element);\n\t\t\t}\n\t\t\tif (element instanceof HTMLCanvasElement ||\n\t\t\t\telement instanceof HTMLImageElement ||\n\t\t\t\telement instanceof HTMLVideoElement) {\n\t\t\t\tthis.source = element;\n\t\t\t\tthis.sourceType = TextureSourceType.Element;\n\t\t\t\tif (element instanceof HTMLVideoElement) {\n\t\t\t\t\tconst video = element as HTMLVideoElement;\n\t\t\t\t\tvideo.addEventListener('loadeddata', (event) => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.load();\n\t\t\t\t} else if (element instanceof HTMLImageElement) {\n\t\t\t\t\telement.addEventListener('load', () => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\telement.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\tresolve(this);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet message = `the 'element' parameter (\\`element: ${JSON.stringify(originalElement)}\\`) must be a CSS selector string, or a <canvas>, <image> or <video> object`;\n\t\t\t\tLogger.log(`Texture '${this.key}': ${message}`, options);\n\t\t\t\treject(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetData(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\twidth: number,\n\t\theight: number,\n\t\tdata: Uint8Array,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tthis.source = data;\n\t\tthis.sourceType = TextureSourceType.Data;\n\t\tthis.update(gl, options);\n\t\tthis.setFiltering(gl, options);\n\t\treturn Promise.resolve(this);\n\t}\n\n\t// Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n\tupdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.activeTexture(gl.TEXTURE0 + this.index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? 0 : 1));\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || 0);\n\t\tif (this.sourceType === TextureSourceType.Element) {\n\t\t\tif (this.source instanceof HTMLImageElement && this.source.naturalWidth && this.source.naturalHeight) {\n\t\t\t\tthis.width = this.source.naturalWidth;\n\t\t\t\tthis.height = this.source.naturalHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLVideoElement && this.source.videoWidth && this.source.videoHeight) {\n\t\t\t\tthis.width = this.source.videoWidth;\n\t\t\t\tthis.height = this.source.videoHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLCanvasElement) {\n\t\t\t\tthis.width = this.source.width;\n\t\t\t\tthis.height = this.source.height;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t}\n\t\t} else if (this.sourceType === TextureSourceType.Data) {\n\t\t\tconst imageBuffer: ArrayBufferView = this.source as ArrayBufferView;\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageBuffer);\n\t\t}\n\t\tthis.trigger('loaded', this);\n\t}\n\n\ttryUpdate(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\tlet dirty = false;\n\t\tif (this.animated) {\n\t\t\tdirty = true;\n\t\t\tthis.update(gl, this.options);\n\t\t}\n\t\treturn dirty;\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.deleteTexture(this.texture);\n\t\tthis.texture = null;\n\t\tdelete this.source;\n\t\tthis.source = null;\n\t\tthis.valid = false;\n\t}\n\n\tsetFiltering(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tconst powerOf2 = Texture.isPowerOf2(this.width) && Texture.isPowerOf2(this.height);\n\t\tlet filtering = options.filtering || TextureFilteringType.MipMap;\n\t\tlet wrapS = options.TEXTURE_WRAP_S || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tlet wrapT = options.TEXTURE_WRAP_T || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tif (!powerOf2) {\n\t\t\tfiltering = filtering === TextureFilteringType.MipMap ? TextureFilteringType.Linear : filtering;\n\t\t\twrapS = wrapT = gl.CLAMP_TO_EDGE;\n\t\t\tif (options.repeat || options.TEXTURE_WRAP_S || options.TEXTURE_WRAP_T) {\n\t\t\t\tLogger.warn(`GlslCanvas: cannot repeat texture ${options.url} cause is not power of 2.`);\n\t\t\t}\n\t\t}\n\t\tthis.powerOf2 = powerOf2;\n\t\tthis.filtering = filtering;\n\t\t// this.bindTexture();\n\t\t// WebGL has strict requirements on non-power-of-2 textures:\n\t\t// No mipmaps and must clamp to edge\n\t\t// For power-of-2 textures, the following presets are available:\n\t\t// mipmap: linear blend from nearest mip\n\t\t// linear: linear blend from original image (no mips)\n\t\t// nearest: nearest pixel from original image (no mips, 'blocky' look)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\t\tif (this.filtering === TextureFilteringType.MipMap) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t} else if (this.filtering === TextureFilteringType.Nearest) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t} else if (this.filtering === TextureFilteringType.Linear) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t}\n\t}\n}\n\nexport default class Textures extends IterableStringMap<Texture> {\n\n\tcount: number = 0;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\tcreateOrUpdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\tindex: number = 0,\n\t\toptions: ITextureOptions = {},\n\t\tworkpath: string,\n\t): Promise<Texture> {\n\t\tlet texture;\n\t\tconst textureOptions = Texture.getTextureOptions(urlElementOrData, options);\n\t\ttexture = this.get(key);\n\t\tif (!texture) {\n\t\t\ttexture = new Texture(gl, key, index + this.count, textureOptions, workpath);\n\t\t\tthis.count++;\n\t\t\tthis.set(key, texture);\n\t\t}\n\t\tif (textureOptions !== undefined) {\n\t\t\treturn texture.load(gl, textureOptions).then(\n\t\t\t\t(texture) => {\n\t\t\t\t\tif (texture.source instanceof HTMLVideoElement) {\n\t\t\t\t\t\tconst video = texture.source as HTMLVideoElement;\n\t\t\t\t\t\t// Logger.log('video', video);\n\t\t\t\t\t\tvideo.addEventListener('play', () => {\n\t\t\t\t\t\t\t// Logger.log('play', texture.key);\n\t\t\t\t\t\t\ttexture.animated = true;\n\t\t\t\t\t\t\tthis.animated = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('pause', () => {\n\t\t\t\t\t\t\t// Logger.log('pause', texture.key);\n\t\t\t\t\t\t\ttexture.animated = false;\n\t\t\t\t\t\t\tthis.animated = this.reduce((flag: boolean, texture: Texture) => {\n\t\t\t\t\t\t\t\treturn flag || texture.animated;\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('seeked', () => {\n\t\t\t\t\t\t\t// Logger.log('seeked');\n\t\t\t\t\t\t\ttexture.update(gl, texture.options);\n\t\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Logger.log('video');\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tvideo.addEventListener('canplaythrough', () => {\n\t\t\t\t\t\t\t// !!!\n\t\t\t\t\t\t\tthis.intervalID = setInterval(() => {\n\t\t\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\t\t}, 15);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\n\t\t\t\t\t\t\tvideo.currentTime = 0;\n\t\t\t\t\t\t\tvideo.play();\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\treturn texture;\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\treturn Promise.resolve(texture);\n\t\t}\n\t}\n}\n","export default class Vector3 {\n\n\tisVector3: boolean = true;\n\tx: number;\n\ty: number;\n\tz: number;\n\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tcopy(v: Vector3): Vector3 {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\treturn this;\n\t}\n\n\tlength(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t}\n\n\tnormalize(): Vector3 {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\n\tdivideScalar(scalar: number): Vector3 {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tmultiplyScalar(scalar: number): Vector3 {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\treturn this;\n\t}\n\n\tsubVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\treturn this;\n\t}\n\n\taddVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\treturn this;\n\t}\n\n\tcrossVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\t\treturn this;\n\t}\n\n\t/*\n\tset(x, y, z) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetScalar(scalar) {\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\treturn this;\n\t}\n\n\tsetX(x) {\n\t\tthis.x = x;\n\t\treturn this;\n\t}\n\n\tsetY(y) {\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetZ(z) {\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetComponent(index, value) {\n\t\tswitch (index) {\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetComponent(index) {\n\t\tswitch (index) {\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t}\n\n\tclone() {\n\t\treturn new Vector3(this.x, this.y, this.z);\n\t}\n\n\tadd(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.addVectors(v, w);\n\t\t}\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\treturn this;\n\t}\n\n\taddScalar(s) {\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\treturn this;\n\t}\n\n\taddScaledVector(v, s) {\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\treturn this;\n\t}\n\n\tsub(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.subVectors(v, w);\n\t\t}\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\treturn this;\n\t}\n\n\tsubScalar(s) {\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\treturn this;\n\t}\n\n\n\tmultiply(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.multiplyVectors(v, w);\n\t\t}\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\treturn this;\n\t}\n\n\tmultiplyVectors(a:Vector3, b:Vector3):Vector3 {\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\t\treturn this;\n\t}\n\n\tapplyMatrix3(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\treturn this;\n\t}\n\n\tapplyNormalMatrix(m) {\n\t\treturn this.applyMatrix3(m).normalize();\n\t}\n\n\tapplyMatrix4(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\treturn this;\n\t}\n\n\tapplyQuaternion(q) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\t\t// calculate quat * vector\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\t\t// calculate result * inverse quat\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\t\treturn this;\n\t}\n\n\tproject(camera) {\n\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t}\n\n\tunproject(camera) {\n\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t}\n\n\ttransformDirection(m) {\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\treturn this.normalize();\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\treturn this;\n\t}\n\n\tmin(v) {\n\t\tthis.x = Math.min(this.x, v.x);\n\t\tthis.y = Math.min(this.y, v.y);\n\t\tthis.z = Math.min(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tmax(v) {\n\t\tthis.x = Math.max(this.x, v.x);\n\t\tthis.y = Math.max(this.y, v.y);\n\t\tthis.z = Math.max(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tclamp(min, max) {\n\t\t// assumes min < max, componentwise\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\treturn this;\n\t}\n\n\tclampScalar(minVal, maxVal) {\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\treturn this;\n\t}\n\n\tclampLength(min, max) {\n\t\tvar length = this.length();\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t}\n\n\tfloor() {\n\t\tthis.x = Math.floor(this.x);\n\t\tthis.y = Math.floor(this.y);\n\t\tthis.z = Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tceil() {\n\t\tthis.x = Math.ceil(this.x);\n\t\tthis.y = Math.ceil(this.y);\n\t\tthis.z = Math.ceil(this.z);\n\t\treturn this;\n\t}\n\n\tround() {\n\t\tthis.x = Math.round(this.x);\n\t\tthis.y = Math.round(this.y);\n\t\tthis.z = Math.round(this.z);\n\t\treturn this;\n\t}\n\n\troundToZero() {\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n\t\tthis.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tnegate() {\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\treturn this;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t}\n\n\t// TODO lengthSquared?\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t}\n\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t}\n\n\tsetLength(length) {\n\t\treturn this.normalize().multiplyScalar(length);\n\t}\n\n\tlerp(v, alpha) {\n\t\tthis.x += (v.x - this.x) * alpha;\n\t\tthis.y += (v.y - this.y) * alpha;\n\t\tthis.z += (v.z - this.z) * alpha;\n\t\treturn this;\n\t}\n\n\tlerpVectors(v1, v2, alpha) {\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n\t}\n\n\tcross(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.crossVectors(v, w);\n\t\t}\n\t\treturn this.crossVectors(this, v);\n\t}\n\n\tprojectOnVector(v) {\n\t\tvar denominator = v.lengthSq();\n\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\tvar scalar = v.dot(this) / denominator;\n\t\treturn this.copy(v).multiplyScalar(scalar);\n\t}\n\n\tprojectOnPlane(planeNormal) {\n\t\tconst v = new Vector3();\n\t\tv.copy(this).projectOnVector(planeNormal);\n\t\treturn this.sub(v);\n\t}\n\n\treflect(normal) {\n\t\tconst v = new Vector3();\n\t\treturn this.sub(v.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t}\n\n\tangleTo(v) {\n\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\tif (denominator === 0) return Math.PI / 2;\n\t\tvar theta = this.dot(v) / denominator;\n\t\t// clamp, to handle numerical problems\n\t\treturn Math.acos(MathUtils.clamp(theta, - 1, 1));\n\t}\n\n\tdistanceTo(v) {\n\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t}\n\n\tdistanceToSquared(v) {\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\t\treturn dx * dx + dy * dy + dz * dz;\n\t}\n\n\tmanhattanDistanceTo(v) {\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t}\n\n\tsetFromSpherical(s) {\n\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t}\n\n\tsetFromSphericalCoords(radius, phi, theta) {\n\t\tvar sinPhiRadius = Math.sin(phi) * radius;\n\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\tthis.y = Math.cos(phi) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromCylindrical(c) {\n\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t}\n\n\tsetFromCylindricalCoords(radius, theta, y) {\n\t\tthis.x = radius * Math.sin(theta);\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromMatrixPosition(m) {\n\t\tvar e = m.elements;\n\t\tthis.x = e[12];\n\t\tthis.y = e[13];\n\t\tthis.z = e[14];\n\t\treturn this;\n\t}\n\n\tsetFromMatrixScale(m) {\n\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\n\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\n\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\t\treturn this;\n\t}\n\n\tsetFromMatrixColumn(m, index) {\n\t\treturn this.fromArray(m.elements, index * 4);\n\t}\n\n\tsetFromMatrix3Column(m, index) {\n\t\treturn this.fromArray(m.elements, index * 3);\n\t}\n\n\tequals(v) {\n\t\treturn ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\t}\n\n\tfromArray(array, offset) {\n\t\tif (offset === undefined) offset = 0;\n\t\tthis.x = array[offset];\n\t\tthis.y = array[offset + 1];\n\t\tthis.z = array[offset + 2];\n\t\treturn this;\n\t}\n\n\ttoArray(array, offset) {\n\t\tif (array === undefined) array = [];\n\t\tif (offset === undefined) offset = 0;\n\t\tarray[offset] = this.x;\n\t\tarray[offset + 1] = this.y;\n\t\tarray[offset + 2] = this.z;\n\t\treturn array;\n\t}\n\n\tfromBufferAttribute(attribute, index) {\n\t\tthis.x = attribute.getX(index);\n\t\tthis.y = attribute.getY(index);\n\t\tthis.z = attribute.getZ(index);\n\t\treturn this;\n\t}\n\n\trandom() {\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\treturn this;\n\t}\n\t*/\n\n}\n\n","\nimport Vector2 from '../math/vector2';\nimport Vector3 from '../math/vector3';\n\nconst PI = Math.PI;\nconst RAD = PI / 180;\n\nexport default class OrbitCamera extends Vector3 {\n\n\ttheta: number;\n\tphi: number;\n\tradius: number;\n\tposition: Vector3 = new Vector3();\n\tvalue: Float32Array = new Float32Array([0, 0, 0]);\n\tmouse: Vector2;\n\tdirty: boolean = false;\n\n\tconstructor(theta?: number, phi?: number, radius?: number) {\n\t\tsuper();\n\t\tthis.theta = (theta || 0) * RAD;\n\t\tthis.phi = (phi || 0) * RAD;\n\t\tthis.radius = radius || 6.0;\n\t\t// this.update();\n\t}\n\n\tdown(x: number, y: number) {\n\t\tthis.mouse = new Vector2(x, y);\n\t}\n\n\tmove(x: number, y: number) {\n\t\tconst mouse = this.mouse;\n\t\tif (mouse && (mouse.x !== x || mouse.y !== y)) {\n\t\t\tconst theta = (x - mouse.x) * 180 * RAD;\n\t\t\tconst phi = (y - mouse.y) * 180 * RAD;\n\t\t\tmouse.x = x;\n\t\t\tmouse.y = y;\n\t\t\tthis.theta += theta;\n\t\t\tthis.phi = Math.max(-60 * RAD, Math.min(60 * RAD, this.phi + phi));\n\t\t\t// this.update();\n\t\t}\n\t}\n\n\tup() {\n\t\tthis.mouse = null;\n\t}\n\n\twheel(d: number) {\n\t\tthis.radius = Math.max(4.0, Math.min(10.0, this.radius + d * 0.02));\n\t}\n\n\t/*\n\n\tupdate() {\n\t\tconst spr = Math.sin(this.phi) * this.radius;\n\t\tconst x = spr * Math.sin(this.theta);\n\t\tconst y = Math.cos(this.phi) * this.radius;\n\t\tconst z = spr * Math.cos(this.theta);\n\t\tthis.position.x = x;\n\t\tthis.position.y = y;\n\t\tthis.position.z = z;\n\t\tthis.value[0] = x;\n\t\tthis.value[1] = y;\n\t\tthis.value[2] = z;\n\t}\n\n\trender(canvas: Canvas) {\n\t\tconst vector = OrbitCamera.toVector(this);\n\t\tconst array = new Float32Array([vector.x, vector.y, vector.z]);\n\t\tthis.update_(canvas, '3fv', 'vec3', 'u_camera', array);\n\t}\n\n\tupdate_(canvas: Canvas, method, type, name, value) {\n\t\ttry {\n\t\t\tconst u = canvas.uniforms[name] = canvas.uniforms[name] || {};\n\t\t\tu.name = name;\n\t\t\tu.value = value;\n\t\t\tu.type = type;\n\t\t\tu.method = 'uniform' + method;\n\t\t\tu.location = canvas.gl.getUniformLocation(canvas.program, name);\n\t\t\tcanvas.gl[u.method].apply(canvas.gl, [u.location].concat(u.value));\n\t\t} catch (e) {\n\t\t\tconsole.log('fastUpdate', e);\n\t\t}\n\t}\n\n\tstatic toVector(camera: OrbitCamera): Vector3 {\n\t\tcamera.update();\n\t\treturn camera.position;\n\t\tconst spr = Math.sin(camera.phi) * camera.radius;\n\t\tconst x = spr * Math.sin(camera.theta);\n\t\tconst y = Math.cos(camera.phi) * camera.radius;\n\t\tconst z = spr * Math.cos(camera.theta);\n\t\treturn new Vector3(x, y, z);\n\t}\n\t*/\n\n\tstatic fromVector(vector: Vector3) {\n\t\tconst radius = vector.length();\n\t\tconst theta = Math.acos(vector.y / radius); //theta\n\t\tconst phi = Math.atan(vector.x / vector.z); //phi\n\t\treturn new OrbitCamera(theta, phi, radius);\n\t}\n\n}\n","export default class CanvasTimer {\n\n\tstart: number;\n\tprevious: number;\n\tdelay: number = 0.0;\n\tcurrent: number = 0.0;\n\tdelta: number = 0.0;\n\tpaused: boolean = false;\n\n\tconstructor() {\n\t\tthis.start = this.previous = this.now();\n\t}\n\n\tnow() {\n\t\treturn performance.now();\n\t}\n\n\tplay() {\n\t\tif (this.previous) {\n\t\t\tconst now = this.now();\n\t\t\tthis.delay += (now - this.previous);\n\t\t\tthis.previous = now;\n\t\t}\n\t\t// Logger.log(this.delay);\n\t\tthis.paused = false;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t}\n\n\tnext(): CanvasTimer {\n\t\tconst now = this.now();\n\t\tthis.delta = now - this.previous;\n\t\tthis.current = now - this.start - this.delay;\n\t\tthis.previous = now;\n\t\treturn this;\n\t}\n\n}\n","import Logger from '../logger/logger';\n\nexport class Listener {\n\tevent: string;\n\tcallback: Function;\n\n\tconstructor(\n\t\tevent: string,\n\t\tcallback: Function\n\t) {\n\t\tthis.event = event;\n\t\tthis.callback = callback;\n\t}\n}\n\nexport default class Subscriber {\n\tprivate listeners: Set<Listener> = new Set<Listener>();\n\n\tlogListeners() {\n\t\tthis.listeners.forEach(x => Logger.log(x));\n\t}\n\n\tsubscribe(listener: Listener) {\n\t\tthis.listeners.add(listener);\n\t}\n\n\tunsubscribe(listener: Listener) {\n\t\tthis.listeners.delete(listener);\n\t}\n\n\tunsubscribeAll() {\n\t\tthis.listeners.clear();\n\t}\n\n\ton(event: string, callback: Function) {\n\t\tthis.listeners.add(new Listener(event, callback));\n\t\treturn this;\n\t}\n\n\toff(event: string, callback?: Function) {\n\t\tif (callback) {\n\t\t\tthis.listeners.delete(new Listener(event, callback));\n\t\t} else {\n\t\t\tthis.listeners.forEach(x => {\n\t\t\t\tif (x.event === event) {\n\t\t\t\t\tthis.listeners.delete(x);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\ttrigger(event: string, ...data: any[]) {\n\t\tthis.listeners.forEach(x => {\n\t\t\tif (x.event === event && typeof x.callback === 'function') {\n\t\t\t\tx.callback(...data);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n}\n","import Geometry from \"./geometry\";\n\nexport default class BoxGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 36;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [\n\t\t\t// Front face\n\t\t\t-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t// Back face\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\n\t\t\t// Top face\n\t\t\t-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\n\t\t\t// Bottom face\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,\n\t\t\t// Right face\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,\n\t\t\t// Left face\n\t\t\t-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Top\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Bottom\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Right\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Left\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t// Top\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t// Bottom\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t// Right\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t// Left\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t];\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tconst faceColors = [\n\t\t\t[1.0, 1.0, 1.0, 1.0],    // Front face: white\n\t\t\t[1.0, 0.0, 0.0, 1.0],    // Back face: red\n\t\t\t[0.0, 1.0, 0.0, 1.0],    // Top face: green\n\t\t\t[0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\n\t\t\t[1.0, 1.0, 0.0, 1.0],    // Right face: yellow\n\t\t\t[1.0, 0.0, 1.0, 1.0],    // Left face: purple\n\t\t];\n\t\t// Convert the array of colors into a table for all the vertices.\n\t\tlet colors: number[] = [];\n\t\tfor (var j = 0; j < faceColors.length; ++j) {\n\t\t\tconst c = faceColors[j];\n\t\t\t// Repeat each color four times for the four vertices of the face\n\t\t\tcolors = colors.concat(c, c, c, c, c, c);\n\t\t}\n\t\tthis.colors = colors;\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n}\n","import Vector3 from \"../math/vector3\";\nimport Geometry from \"./geometry\";\n\nexport default class SphereGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tconst radius = 1.4;\n\t\tconst widthDivisions = 80;\n\t\tconst heightDivisions = 60;\n\t\tconst phiStart = 0;\n\t\tconst phiLength = Math.PI * 2;\n\t\tconst thetaStart = 0;\n\t\tconst thetaLength = Math.PI;\n\t\tconst p = new Vector3();\n\t\tconst n = new Vector3();\n\t\t// buffers\n\t\tconst indices = [];\n\t\tconst positions = [];\n\t\tconst normals = [];\n\t\tconst texcoords = [];\n\t\tconst colors = [];\n\t\t//\n\t\tlet thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\tlet ix, iy;\n\t\tlet index = 0;\n\t\tlet grid = [];\n\t\t// generate positions, normals and uvs\n\t\tfor (iy = 0; iy <= heightDivisions; iy++) {\n\t\t\tlet positionRow = [];\n\t\t\tlet v = iy / heightDivisions;\n\t\t\t// special case for the poles\n\t\t\tlet uOffset = 0;\n\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\tuOffset = 0.5 / widthDivisions;\n\t\t\t} else if (iy == heightDivisions && thetaEnd == Math.PI) {\n\t\t\t\tuOffset = -0.5 / widthDivisions;\n\t\t\t}\n\t\t\tfor (ix = 0; ix <= widthDivisions; ix++) {\n\t\t\t\tlet u = ix / widthDivisions;\n\t\t\t\t// position\n\t\t\t\tp.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tp.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\tp.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tpositions.push(p.x, p.y, p.z);\n\t\t\t\t// normal\n\t\t\t\tn.copy(p).normalize();\n\t\t\t\tnormals.push(n.x, n.y, n.z);\n\t\t\t\t// uv\n\t\t\t\tconst uvx = (u + uOffset);\n\t\t\t\tconst uvy = (1 - v);\n\t\t\t\ttexcoords.push(uvx, uvy);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t\tpositionRow.push(index++);\n\t\t\t}\n\t\t\tgrid.push(positionRow);\n\t\t}\n\t\t// indices\n\t\tfor (iy = 0; iy < heightDivisions; iy++) {\n\t\t\tfor (ix = 0; ix < widthDivisions; ix++) {\n\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\tif (iy !== heightDivisions - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\t// build geometry\n\t\tthis.size = indices.length;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t// this.unrapUvw(this.positions);\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normal', this.normal.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('color', this.color.length);\n\t\t*/\n\t}\n\n\t/*\n\tunrapUvw(positions: number[]): void {\n\t\tconst texcoords: number[] = this.texcoords = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t}\n\t*/\n\n}\n","import Vector3 from \"../math/vector3\";\nimport Geometry from \"./geometry\";\nexport default class TorusGeometry extends Geometry {\n\tprotected createData_() {\n\t\tconst radius: number = 1;\n\t\tconst tube: number = 0.25;\n\t\tconst tubularDivisions: number = 200;\n\t\tconst radialDivisions: number = 40;\n\t\tconst p: number = 2;\n\t\tconst q: number = 3;\n\t\t// buffers\n\t\tconst indices: number[] = [];\n\t\tconst positions: number[] = [];\n\t\tconst normals: number[] = [];\n\t\tconst texcoords: number[] = [];\n\t\tconst colors: number[] = [];\n\t\t// helper variables\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst p1 = new Vector3();\n\t\tconst p2 = new Vector3();\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\t\t// generate positions, normals and uvs\n\t\tfor (let i: number = 0; i <= tubularDivisions; ++i) {\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\tconst u = i / tubularDivisions * p * Math.PI * 2;\n\t\t\t// now we calculate two points. p1 is our current position on the curve, p2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\t\t\tthis.calculatePositionOnCurve(u, p, q, radius, p1);\n\t\t\tthis.calculatePositionOnCurve(u + 0.01, p, q, radius, p2);\n\t\t\t// calculate orthonormal basis\n\t\t\tT.subVectors(p2, p1);\n\t\t\tN.addVectors(p2, p1);\n\t\t\tB.crossVectors(T, N);\n\t\t\tN.crossVectors(B, T);\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\t\t\tfor (let j: number = 0; j <= radialDivisions; ++j) {\n\t\t\t\t// now calculate the positions. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\tconst v: number = j / radialDivisions * Math.PI * 2;\n\t\t\t\tconst cx: number = - tube * Math.cos(v);\n\t\t\t\tconst cy: number = tube * Math.sin(v);\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\t\t\t\tvertex.x = p1.x + (cx * N.x + cy * B.x);\n\t\t\t\tvertex.y = p1.y + (cx * N.y + cy * B.y);\n\t\t\t\tvertex.z = p1.z + (cx * N.z + cy * B.z);\n\t\t\t\tpositions.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t// normal (p1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors(vertex, p1).normalize();\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\n\t\t\t\t// uv\n\t\t\t\ttexcoords.push(i / tubularDivisions);\n\t\t\t\ttexcoords.push(j / radialDivisions);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t}\n\t\t}\n\t\t// generate indices\n\t\tfor (let j: number = 1; j <= tubularDivisions; j++) {\n\t\t\tfor (let i: number = 1; i <= radialDivisions; i++) {\n\t\t\t\t// indices\n\t\t\t\tconst a: number = (radialDivisions + 1) * (j - 1) + (i - 1);\n\t\t\t\tconst b: number = (radialDivisions + 1) * j + (i - 1);\n\t\t\t\tconst c: number = (radialDivisions + 1) * j + i;\n\t\t\t\tconst d: number = (radialDivisions + 1) * (j - 1) + i;\n\t\t\t\t// faces\n\t\t\t\tindices.push(a, b, d);\n\t\t\t\tindices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\t// build geometry\n\t\tthis.size = indices.length;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t/*\n\t\tconsole.log('positions', this.positions.length);\n\t\tconsole.log('normals', this.normals.length);\n\t\tconsole.log('texcoords', this.texcoords.length);\n\t\tconsole.log('colors', this.colors.length);\n\t\t*/\n\t}\n\n\tprotected calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3): void {\n\t\tconst cu: number = Math.cos(u);\n\t\tconst su: number = Math.sin(u);\n\t\tconst quOverP: number = q / p * u;\n\t\tconst cs: number = Math.cos(quOverP);\n\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t}\n\n}\n","import Common from \"../core/common\";\nimport Geometry, { IGeometry } from \"../geometry/geometry\";\nimport Vector3 from \"../math/vector3\";\n\nconst COLORS = [\n\t[1, 1, 1],\n\t[1, 0, 0],\n\t[0, 1, 0],\n\t[0, 0, 1],\n\t[1, 1, 0],\n\t[0, 1, 1],\n];\n\nlet CI: number = 0;\n\nexport default class ObjLoader {\n\n\tload(url: string): Promise<Geometry> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tCommon.fetch(url)\n\t\t\t\t// .then((response) => response.text())\n\t\t\t\t.then((text) => {\n\t\t\t\t\t// console.log(text);\n\t\t\t\t\tconst data = this.parse(text);\n\t\t\t\t\tif (data.positions.length) {\n\t\t\t\t\t\tconst geometry = new Geometry(data as IGeometry);\n\t\t\t\t\t\tresolve(geometry);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('ObjLoader error: empty positions');\n\t\t\t\t\t}\n\t\t\t\t}, error => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tparseIndices(faceIndices: number[][], k: number, l: number, source: number[][], output: number[], name: string) {\n\t\tlet i = 0;\n\t\twhile (i <= faceIndices.length - 3) {\n\t\t\tlet a, b, c;\n\t\t\tif (i === 0) {\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t} else {\n\t\t\t\ta = i - 1;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t}\n\t\t\ti++;\n\t\t\tconst indices = [a, b, c];\n\t\t\tfor (let j = 0; j < indices.length; j++) {\n\t\t\t\tconst index = faceIndices[indices[j]][k];\n\t\t\t\tlet values;\n\t\t\t\tif (index && index !== NaN) {\n\t\t\t\t\tvalues = source[index - 1];\n\t\t\t\t\tif (values) {\n\t\t\t\t\t\tvalues = values.slice(0, l);\n\t\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.log('error', name, source.length, index - 1);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\telse {\n\t\t\t\t\tvalues = new Array(l).fill(0);\n\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\n\tparseFaces(F: number[][][], V: number[][], VN: number[][], VT: number[][], positions: number[], normals: number[], texcoords: number[], colors: number[]) {\n\t\tconst si: number = positions.length;\n\t\tF.forEach(faceIndices => {\n\t\t\t// console.log(faceIndices);\n\t\t\tthis.parseIndices(faceIndices, 0, 3, V, positions, 'positions');\n\t\t\tthis.parseIndices(faceIndices, 2, 3, VN, normals, 'normals');\n\t\t\tthis.parseIndices(faceIndices, 1, 2, VT, texcoords, 'texcoords');\n\t\t});\n\t\tconst vl: number = positions.length - si;\n\t\tif (vl > 0) {\n\t\t\t// console.log(faceIndices.length - 2);\n\t\t\tconst c = new Array(vl / 3).fill(0);\n\t\t\tc.forEach(() => {\n\t\t\t\tconst rgb = COLORS[CI % COLORS.length];\n\t\t\t\tcolors.push(rgb[0], rgb[1], rgb[2], 1.0);\n\t\t\t});\n\t\t\tCI++;\n\t\t\t/*\n\t\t\tconsole.log(positions.length, normals.length, texcoords.length, colors.length,\n\t\t\t\tpositions.length / 3 * 2 === texcoords.length,\n\t\t\t\tpositions.length / 3 * 4 === colors.length);\n\t\t\t*/\n\t\t}\n\t}\n\n\tparse(text: string): IGeometry {\n\t\tlet positions: number[] = [], normals: number[] = [], texcoords: number[] = [], colors: number[] = [];\n\t\tCI = 0;\n\t\tlet V: number[][] = [], VN: number[][] = [], VT: number[][] = [], F: number[][][] = [];\n\t\tif (text.indexOf('\\r\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\r\\n/g, '\\n');\n\t\t}\n\t\t/*\n\t\tif (text.indexOf('\\\\\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\\\\\n/g, '');\n\t\t}\n\t\t*/\n\t\ttext = text.replace(/  /g, ' ');\n\t\tconst lines = text.split('\\n');\n\t\tlines.forEach((line, i) => {\n\t\t\tif (line.indexOf('v ') === 0) {\n\t\t\t\tif (F.length) {\n\t\t\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t\t\t\tF = [];\n\t\t\t\t\t// V = [];\n\t\t\t\t\t// VN = [];\n\t\t\t\t\t// VT = [];\n\t\t\t\t}\n\t\t\t\t// v  0.0012 -0.0055 0.0090\n\t\t\t\tconst a = line.replace('v', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tV.push(v);\n\t\t\t} else if (line.indexOf('vn ') === 0) {\n\t\t\t\t// vn 0.0128 0.9896 0.1431\n\t\t\t\tconst a = line.replace('vn', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tconst n = new Vector3(v[0], v[1], v[2]).normalize();\n\t\t\t\tVN.push([n.x, n.y, n.z]);\n\t\t\t} else if (line.indexOf('vt ') === 0) {\n\t\t\t\t// vt 0.5955 0.0054 0.0000\n\t\t\t\tconst a = line.replace('vt', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tVT.push(v);\n\t\t\t} else if (line.indexOf('f ') === 0) {\n\t\t\t\t// f 1//1 2//2 3//3 4//4\n\t\t\t\tconst a = line.replace('f', '').trim().split(' ');\n\t\t\t\tconst f = a.map((x: string) => {\n\t\t\t\t\tconst indices = x.split('/').map(y => parseInt(y));\n\t\t\t\t\tif (indices.length === 2) {\n\t\t\t\t\t\tindices.push(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn indices;\n\t\t\t\t});\n\t\t\t\tF[F.length] = f;\n\t\t\t} /*\n\t\t\telse if (line.indexOf('polygons') !== -1) {\n\t\t\t\t// # 8588 polygons\n\t\t\t\tconst poly = parseInt(line.split(' ')[1]);\n\t\t\t\tconsole.log('poly', poly);\n\t\t\t}\n\t\t\t*/\n\t\t});\n\t\tif (F.length) {\n\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t}\n\t\tconst boundingBox = { min: new Vector3(Number.POSITIVE_INFINITY), max: new Vector3(Number.NEGATIVE_INFINITY) };\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tboundingBox.min.x = Math.min(boundingBox.min.x, positions[i]);\n\t\t\tboundingBox.min.y = Math.min(boundingBox.min.y, positions[i + 1]);\n\t\t\tboundingBox.min.z = Math.min(boundingBox.min.z, positions[i + 2]);\n\t\t\tboundingBox.max.x = Math.max(boundingBox.max.x, positions[i]);\n\t\t\tboundingBox.max.y = Math.max(boundingBox.max.y, positions[i + 1]);\n\t\t\tboundingBox.max.z = Math.max(boundingBox.max.z, positions[i + 2]);\n\t\t}\n\t\tconst centerX = true, centerY = true, centerZ = true;\n\t\tconst dx = -(boundingBox.min.x + boundingBox.max.x) / 2;\n\t\tconst dy = -(boundingBox.min.y + boundingBox.max.y) / 2;\n\t\tconst dz = -(boundingBox.min.z + boundingBox.max.z) / 2;\n\t\t// console.log(dx, dy, dz);\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tpositions[i] += centerX ? dx : 0;\n\t\t\tpositions[i + 1] += centerY ? dy : 0;\n\t\t\tpositions[i + 2] += centerZ ? dz : 0;\n\t\t}\n\t\tconst radius = positions.reduce((p: number, c: number) => {\n\t\t\treturn Math.max(p, c);\n\t\t}, 0);\n\t\tpositions.forEach((x: number, i: number) => positions[i] = x / radius * 2.0);\n\t\tif (!normals.length) {\n\t\t\tnormals = positions.slice();\n\t\t}\n\t\tif (!texcoords.length) {\n\t\t\ttexcoords = this.unrapUvw(positions);\n\t\t}\n\t\t/*\n\t\tconsole.log(positions.length, normals.length, texcoords.length, colors.length,\n\t\t\tpositions.length / 3 * 2 === texcoords.length,\n\t\t\tpositions.length / 3 * 4 === colors.length);\n\t\t*/\n\t\treturn {\n\t\t\tpositions, normals, texcoords, colors\n\t\t};\n\t}\n\n\tunrapUvw(positions: number[]): number[] {\n\t\tconst texcoords: number[] = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t\treturn texcoords;\n\t}\n\n}\n","\nimport IterableStringMap from '../core/iterable';\nimport Logger from '../logger/logger';\nimport { Texture } from '../textures/textures';\n\nexport enum UniformMethod {\n\tUnknown = 0,\n\tUniform1i = 'uniform1i', // (intUniformLoc,   v);                 // for int\n\t// Uniform1i  = 'uniform1i', // (boolUniformLoc,   v);                // for bool\n\t// Uniform1i  = 'uniform1i', // (sampler2DUniformLoc,   v);           // for sampler2D\n\t// Uniform1i  = 'uniform1i', // (samplerCubeUniformLoc,   v);         // for samplerCube\n\tUniform2i = 'uniform2i', // (ivec2UniformLoc, v0, v1);            // for ivec2\n\tUniform3i = 'uniform3i', // (ivec3UniformLoc, v0, v1, v2);        // for ivec3\n\tUniform4i = 'uniform4i', // (ivec4UniformLoc, v0, v1, v2, v4);    // for ivec4\n\tUniform1f = 'uniform1f', // (floatUniformLoc, v);                 // for float\n\tUniform2f = 'uniform2f', // (vec2UniformLoc,  v0, v1);            // for vec2\n\tUniform3f = 'uniform3f', // (vec3UniformLoc,  v0, v1, v2);        // for vec3\n\tUniform4f = 'uniform4f', // (vec4UniformLoc,  v0, v1, v2, v4);    // for vec4\n\t//\n\tUniform1iv = 'uniform1iv', // (intUniformLoc, [v]);                 // for int or int array\n\t// Uniform1iv = 'uniform1iv', // (boolUniformLoc, [v]);                // for bool or bool array\n\t// Uniform1iv = 'uniform1iv', // (sampler2DUniformLoc, [v]);           // for sampler2D or sampler2D array\n\t// Uniform1iv = 'uniform1iv', // (samplerCubeUniformLoc, [v]);         // for samplerCube or samplerCube array\n\tUniform2iv = 'uniform2iv', // (ivec2UniformLoc, [v0, v1]);          // for ivec2 or ivec2 array\n\tUniform3iv = 'uniform3iv', // (ivec3UniformLoc, [v0, v1, v2]);      // for ivec3 or ivec3 array\n\tUniform4iv = 'uniform4iv', // (ivec4UniformLoc, [v0, v1, v2, v4]);  // for ivec4 or ivec4 array\n\t//\n\tUniform1fv = 'uniform1fv', // (floatUniformLoc, [v]);               // for float or float array\n\tUniform2fv = 'uniform2fv', // (vec2UniformLoc,  [v0, v1]);          // for vec2 or vec2 array\n\tUniform3fv = 'uniform3fv', // (vec3UniformLoc,  [v0, v1, v2]);      // for vec3 or vec3 array\n\tUniform4fv = 'uniform4fv', // (vec4UniformLoc,  [v0, v1, v2, v4]);  // for vec4 or vec4 array\n\t//\n\tUniformMatrix2fv = 'uniformMatrix2fv', // (mat2UniformLoc, false, [  4x element array ])  // for mat2 or mat2 array\n\tUniformMatrix3fv = 'uniformMatrix3fv', // (mat3UniformLoc, false, [  9x element array ])  // for mat3 or mat3 array\n\tUniformMatrix4fv = 'uniformMatrix4fv', // (mat4UniformLoc, false, [ 16x element array ])  // for mat4 or mat4 array\n}\n\nexport enum UniformType {\n\tUnknown = 0,\n\tFloat,\n\tInt,\n\tBool,\n\tSampler2D,\n\tSamplerCube,\n\tMatrix2fv,\n\tMatrix3fv,\n\tMatrix4fv,\n}\n\nexport const METHODS_INT = [UniformMethod.Uniform1i, UniformMethod.Uniform2i, UniformMethod.Uniform3i, UniformMethod.Uniform4i];\nexport const METHODS_FLOAT = [UniformMethod.Uniform1f, UniformMethod.Uniform2f, UniformMethod.Uniform3f, UniformMethod.Uniform4f];\nexport const METHODS_INTV = [UniformMethod.Uniform1iv, UniformMethod.Uniform2iv, UniformMethod.Uniform3iv, UniformMethod.Uniform4iv];\nexport const METHODS_FLOATV = [UniformMethod.Uniform1fv, UniformMethod.Uniform2fv, UniformMethod.Uniform3fv, UniformMethod.Uniform4fv];\n\nexport interface IUniformOption { [key: string]: any[]; }\n\nexport class Uniform {\n\tmethod: UniformMethod;\n\ttype: UniformType;\n\tkey: string;\n\tvalues: any[];\n\tlocation?: WebGLUniformLocation;\n\tdirty?: boolean = true;\n\tapply?: Function;\n\n\tconstructor(options?: Uniform) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tswitch (this.method) {\n\t\t\tcase UniformMethod.UniformMatrix2fv:\n\t\t\tcase UniformMethod.UniformMatrix3fv:\n\t\t\tcase UniformMethod.UniformMatrix4fv:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location, false].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class UniformTexture extends Uniform {\n\n\ttexture: Texture;\n\n\tconstructor(options?: Uniform) {\n\t\tsuper(options);\n\t}\n\n}\n\nexport default class Uniforms extends IterableStringMap<Uniform> {\n\n\tdirty: boolean = false;\n\n\tstatic isArrayOfInteger(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Number.isInteger(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfNumber(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'number';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfBoolean(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'boolean';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfTexture(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Texture.isTexture(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfSampler2D(array: Uniform[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: Uniform) => {\n\t\t\treturn flag && value.type === UniformType.Sampler2D;\n\t\t}, true);\n\t}\n\n\tprivate static getType_(\n\t\tvalues: any[],\n\t): UniformType {\n\t\tlet type = UniformType.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tif (Uniforms.isArrayOfNumber(subject)) {\n\t\t\ttype = UniformType.Float;\n\t\t} else if (Uniforms.isArrayOfBoolean(subject)) {\n\t\t\ttype = UniformType.Bool;\n\t\t} else if (Uniforms.isArrayOfTexture(subject)) {\n\t\t\ttype = UniformType.Sampler2D;\n\t\t}\n\t\treturn type;\n\t}\n\n\tprivate static getMethod_(\n\t\ttype: UniformType,\n\t\tvalues: any[],\n\t): UniformMethod {\n\t\tlet method = UniformMethod.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tconst length = subject.length;\n\t\tconst i = length - 1;\n\t\tswitch (type) {\n\t\t\tcase UniformType.Float:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_FLOATV.length ? METHODS_FLOATV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_FLOAT.length ? METHODS_FLOAT[i] : UniformMethod.Uniform1fv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Int:\n\t\t\tcase UniformType.Bool:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_INTV.length ? METHODS_INTV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_INT.length ? METHODS_INT[i] : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Sampler2D:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = UniformMethod.Uniform1iv;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = length === 1 ? UniformMethod.Uniform1i : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn method;\n\t}\n\n\tstatic parseUniform(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\ttype: UniformType = null\n\t): Uniform | Uniform[] {\n\t\tlet uniform: Uniform;\n\t\ttype = type || Uniforms.getType_(values);\n\t\tconst method = Uniforms.getMethod_(type, values);\n\t\tif (type !== UniformType.Unknown && method !== UniformMethod.Unknown) {\n\t\t\t// Logger.log('Uniforms.parseUniform', key, UniformType[type], method, values);\n\t\t\tif (type === UniformType.Sampler2D && method === UniformMethod.Uniform1iv) {\n\t\t\t\treturn values[0].map((texture: any, index: number) => {\n\t\t\t\t\treturn new Uniform({\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tkey: `${key}[${index}]`, // `${key.split('[')[0]}[${index}]`,\n\t\t\t\t\t\tvalues: [texture]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tuniform = new Uniform({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalues: values\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tLogger.error('Uniforms.parseUniform.Unknown', key, values);\n\t\t}\n\t\t// return this.parseUniform__bak(key, values);\n\t\treturn uniform;\n\t}\n\n\tcreate(method: UniformMethod, type: UniformType, key: string, values: any[]): Uniform {\n\t\tconst uniform = new Uniform({\n\t\t\tmethod: method,\n\t\t\ttype: type,\n\t\t\tkey: key,\n\t\t\tvalues: values,\n\t\t});\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tcreateTexture(key: string, index: number): UniformTexture {\n\t\tlet uniform;\n\t\tif (key.indexOf(']') !== -1) {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1iv,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [[index]],\n\t\t\t});\n\t\t} else {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1i,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [index],\n\t\t\t});\n\t\t}\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tupdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tconst uniform = this.get(key);\n\t\tif (uniform) {\n\t\t\t// !!! consider performance\n\t\t\t// && (uniform.method !== method || uniform.type !== type || Uniforms.isDifferent(uniform.values, values))) {\n\t\t\tuniform.method = method;\n\t\t\tuniform.type = type;\n\t\t\tuniform.values = values;\n\t\t\tuniform.dirty = true;\n\t\t\tthis.dirty = true;\n\t\t}\n\t}\n\n\tcreateOrUpdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tif (this.has(key)) {\n\t\t\tthis.update(method, type, key, values);\n\t\t} else {\n\t\t\tthis.create(method, type, key, values);\n\t\t}\n\t}\n\n\tapply(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tgl.useProgram(program);\n\t\tfor (const key in this.values) {\n\t\t\t// if (typeof this.values[key].apply === 'function') {\n\t\t\tthis.values[key].apply(gl, program);\n\t\t\t// }\n\t\t}\n\t\t// this.forEach(uniform => uniform.apply(gl, program));\n\t}\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\t/*\n\t// slow\n\tstatic isDifferent(a: any, b: any): boolean {\n        return JSON.stringify(a) !== JSON.stringify(b);\n    }\n\t*/\n\n\tstatic isDifferent(a: any[], b: any[]) {\n\t\treturn a.length !== b.length || a.reduce((f: boolean, v: any, i: number) => {\n\t\t\treturn f || v !== b[i];\n\t\t}, false);\n\t}\n\n}\n","import { mat4 } from 'gl-matrix';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport OrbitCamera from '../camera/orbit-camera';\nimport CanvasTimer from '../canvas/canvas-timer';\nimport { ContextMode, ContextVertexBuffers } from '../context/context';\nimport Subscriber from '../core/subscriber';\nimport BoxGeometry from '../geometry/box-geometry';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\nimport SphereGeometry from '../geometry/sphere-geometry';\nimport TorusGeometry from '../geometry/torus-geometry';\nimport ObjLoader from '../loaders/obj-loader';\nimport Logger from '../logger/logger';\nimport Vector2 from '../math/vector2';\nimport Textures, { ITextureInput } from '../textures/textures';\nimport Uniforms, { UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport default class Renderer extends Subscriber {\n\n\tgl: WebGLRenderingContext | WebGL2RenderingContext;\n\tprogram: WebGLProgram;\n\ttimer: CanvasTimer;\n\tuniforms: Uniforms = new Uniforms();\n\tbuffers: Buffers = new Buffers();\n\ttextures: Textures = new Textures();\n\ttextureList: ITextureInput[] = [];\n\n\tW: number = 0;\n\tH: number = 0;\n\tmouse: Vector2 = new Vector2();\n\tradians: number = 0;\n\tdirty: boolean = true;\n\tanimated: boolean = false;\n\tdrawFunc_: (deltaTime: number) => void;\n\n\tvertexString: string;\n\tfragmentString: string;\n\n\tcamera: OrbitCamera = new OrbitCamera();\n\tgeometry: Geometry;\n\n\tvertexBuffers: ContextVertexBuffers;\n\n\tprojectionMatrix: mat4;\n\tmodelViewMatrix: mat4;\n\tnormalMatrix: mat4;\n\n\tmode: ContextMode;\n\tmesh: string;\n\tdefaultMesh: string;\n\tdoubleSided: boolean;\n\tcache: { [key: string]: Geometry } = {};\n\tworkpath: string;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.drawFunc_ = this.drawArrays_;\n\t}\n\n\tprotected render(): void {\n\t\tconst gl = this.gl;\n\t\tif (!gl) {\n\t\t\treturn;\n\t\t}\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tthis.update_();\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.geometry.attachAttributes_(gl, buffer.program);\n\t\t\t// this.uniforms.get('u_resolution').values = [1024, 1024];\n\t\t\tthis.uniforms.apply(gl, buffer.program);\n\t\t\t/*\n\t\t\tconsole.log('uniforms');\n\t\t\tfor (const key in this.uniforms.values) {\n\t\t\t\tif (key.indexOf('u_buff') === 0) {\n\t\t\t\t\tconsole.log(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tbuffer.render(gl, BW, BH);\n\t\t}\n\t\t// this.uniforms.get('u_resolution').values = [BW, BH];\n\t\tthis.geometry.attachAttributes_(gl, this.program);\n\t\tthis.uniforms.apply(gl, this.program);\n\t\t// gl.viewport(0, 0, BW, BH);\n\t\tthis.drawFunc_(this.timer.delta);\n\t\tthis.uniforms.clean();\n\t\tthis.textures.clean();\n\t\tthis.dirty = false;\n\t\tthis.trigger('render', this);\n\t}\n\n\t/*\n\tprotected drawArrays_(deltaTime: number) {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 6);\n\t}\n\t*/\n\n\tprotected drawArrays_(deltaTime: number) {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// Clear\n\t\tgl.viewport(0, 0, this.W, this.H);\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\n\t\tgl.clearDepth(1.0);\n\t\t// Clear the canvas before we start drawing on it.\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\tgl.enable(gl.CULL_FACE);\n\t\tif (this.doubleSided && this.mode !== ContextMode.Flat) {\n\t\t\t// back\n\t\t\t// gl.frontFace(gl.CW);\n\t\t\tgl.cullFace(gl.FRONT);\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t\t// front\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t\t// gl.frontFace(gl.CCW);\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// gl.drawElements(gl.TRIANGLES, this.geometry.size, gl.UNSIGNED_SHORT, 0);\n\t}\n\n\tprotected create_(): void {\n\t\tthis.createGeometry_();\n\t\tthis.createUniforms_();\n\t}\n\n\tprotected createGeometry_() {\n\t\t// console.log('Geometry', Geometry);\n\t\t// console.log('FlatGeometry', FlatGeometry);\n\t\t// console.log('BoxGeometry', BoxGeometry);\n\t\tthis.parseGeometry_();\n\t\tthis.setMode(this.mode);\n\t}\n\n\tprotected parseGeometry_() {\n\t\tconst regexp = /^attribute\\s+vec4\\s+a_position\\s*;\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]+)/gm;\n\t\tconst match = regexp.exec(this.vertexString);\n\t\tif (match && match.length > 1) {\n\t\t\tthis.mesh = match[1];\n\t\t} else {\n\t\t\tthis.mesh = this.defaultMesh;\n\t\t}\n\t}\n\n\tprotected createUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst fragmentString = this.fragmentString;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tconst timer = this.timer = new CanvasTimer();\n\t\tconst hasDelta = (fragmentString.match(/u_delta/g) || []).length > 1;\n\t\tconst hasTime = (fragmentString.match(/u_time/g) || []).length > 1;\n\t\tconst hasDate = (fragmentString.match(/u_date/g) || []).length > 1;\n\t\tconst hasMouse = (fragmentString.match(/u_mouse/g) || []).length > 1;\n\t\tthis.animated = hasTime || hasDate || hasMouse;\n\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (hasDelta) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (hasTime) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (hasDate) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.create(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (hasMouse) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [0, 0]);\n\t\t}\n\t\t// if (this.mode !== ContextMode.Flat) {\n\t\tthis.projectionMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.projectionMatrix as number[]);\n\t\tthis.modelViewMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.modelViewMatrix as number[]);\n\t\tthis.normalMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.normalMatrix as number[]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightAmbient', [0.3, 0.3, 0.3]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightColor', [1.0, 1.0, 1.0]);\n\t\tthis.uniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_lightDirection', [0.0, 0.0, 1.0]);\n\t\t// }\n\t}\n\n\tprotected update_(): void {\n\t\tthis.updateUniforms_();\n\t}\n\n\tprotected updateUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tif (!this.timer) {\n\t\t\treturn;\n\t\t}\n\t\tconst timer = this.timer.next();\n\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (this.uniforms.has('u_delta')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_time')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_date')) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.update(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (this.uniforms.has('u_mouse')) {\n\t\t\tconst mouse = this.mouse;\n\t\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [mouse.x, mouse.y]);\n            /*\n            const rect = this.rect;\n            if (mouse.x >= rect.left && mouse.x <= rect.right &&\n                mouse.y >= rect.top && mouse.y <= rect.bottom) {\n                const MX = (mouse.x - rect.left) * this.devicePixelRatio;\n                const MY = (this.canvas.height - (mouse.y - rect.top) * this.devicePixelRatio);\n                this.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [MX, MY]);\n            }\n            */\n\t\t}\n\t\tif (this.mode !== ContextMode.Flat) {\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.updateProjectionMatrix_() as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.updateModelViewMatrix_(this.timer.delta) as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.updateNormalMatrix_(this.modelViewMatrix) as number[]);\n\t\t}\n\t}\n\n\tprotected updateProjectionMatrix_(): mat4 {\n\t\tconst gl = this.gl;\n\t\tconst fieldOfView = 45 * Math.PI / 180;\n\t\tconst aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\tconst zNear = 0.1;\n\t\tconst zFar = 100.0;\n\t\tmat4.perspective(this.projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\t\treturn this.projectionMatrix;\n\t}\n\n\t/*\n\tprotected updateModelViewMatrix__(deltaTime: number): mat4 {\n\t\tthis.modelViewMatrix = mat4.identity(this.modelViewMatrix);\n\t\tmat4.translate(this.modelViewMatrix, this.modelViewMatrix, [0.0, 0.0, -6.0]); // amount to translate\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.radians, [0, 1, 0]); // axis to rotate around (Y)\n\t\t// mat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.radians * 0.2, [1, 0, 0]); // axis to rotate around (X)\n\t\tthis.radians += deltaTime * 0.001;\n\t\treturn this.modelViewMatrix;\n\t}\n\t*/\n\n\tprotected updateModelViewMatrix_(deltaTime: number): mat4 {\n\t\tthis.modelViewMatrix = mat4.identity(this.modelViewMatrix);\n\t\tmat4.translate(this.modelViewMatrix, this.modelViewMatrix, [0.0, 0.0, -this.camera.radius]); // amount to translate\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.camera.theta + this.radians, [0, 1, 0]); // axis to rotate around (Y)\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.camera.phi, [1, 0, 0]); // axis to rotate around (X)\n\t\tif (!this.camera.mouse) {\n\t\t\tthis.camera.theta += (0 - this.camera.theta) / 20;\n\t\t\tthis.camera.phi += (0 - this.camera.phi) / 20;\n\t\t\tthis.radians += deltaTime * 0.0005;\n\t\t}\n\t\treturn this.modelViewMatrix;\n\t}\n\n\tprotected updateNormalMatrix_(modelViewMatrix: mat4): mat4 {\n\t\t// this.normalMatrix = mat4.create();\n\t\tthis.normalMatrix = mat4.identity(this.normalMatrix);\n\t\tmat4.invert(this.normalMatrix, modelViewMatrix);\n\t\tmat4.transpose(this.normalMatrix, this.normalMatrix);\n\t\treturn this.normalMatrix;\n\t}\n\n\tpublic setMode(mode: ContextMode) {\n\t\tlet geometry: Geometry;\n\t\tif (mode === ContextMode.Mesh) {\n\t\t\tgeometry = this.cache[this.mesh];\n\t\t\tif (geometry) {\n\t\t\t\tthis.geometry = geometry;\n\t\t\t\tthis.mode = ContextMode.Mesh;\n\t\t\t\tthis.dirty = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlet loader: ObjLoader;\n\t\tswitch (mode) {\n\t\t\tcase ContextMode.Flat:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', mat4.create() as number[]);\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', mat4.create() as number[]);\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', mat4.create() as number[]);\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Box:\n\t\t\t\tgeometry = new BoxGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Sphere:\n\t\t\t\tgeometry = new SphereGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Torus:\n\t\t\t\tgeometry = new TorusGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Mesh:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tif (this.mesh) {\n\t\t\t\t\tloader = new ObjLoader();\n\t\t\t\t\tloader.load(this.getResource(this.mesh)).then(geometry => {\n\t\t\t\t\t\tgeometry.createAttributes_(this.gl, this.program);\n\t\t\t\t\t\tconst cache: { [key: string]: Geometry } = {};\n\t\t\t\t\t\tcache[this.mesh] = geometry;\n\t\t\t\t\t\tthis.cache = cache;\n\t\t\t\t\t\tthis.geometry = geometry;\n\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\tLogger.warn('GlslCanvas', error);\n\t\t\t\t\t\tthis.mode = ContextMode.Flat;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmode = ContextMode.Flat;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tgeometry.create(this.gl, this.program);\n\t\tthis.geometry = geometry;\n\t\tthis.mode = mode;\n\t\tthis.dirty = true;\n\t}\n\n\tpublic setMesh(mesh: string) {\n\t\tthis.mesh = mesh;\n\t}\n\n\tpublic getResource(url: string): string {\n\t\treturn String((url.indexOf(':/') === -1 && this.workpath !== undefined) ? `${this.workpath}/${url}` : url);\n\t}\n\n}\n","// import '@babel/polyfill';\nimport 'promise-polyfill';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport Context, { ContextMode } from '../context/context';\nimport Common from '../core/common';\nimport Logger from '../logger/logger';\nimport Vector2 from '../math/vector2';\nimport Renderer from '../renderer/renderer';\nimport Textures, { ITextureData, ITextureOptions, Texture } from '../textures/textures';\nimport Uniforms, { IUniformOption, Uniform, UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport interface ICanvasOptions extends WebGLContextAttributes {\n\tvertexString?: string;\n\tfragmentString?: string;\n\tbackgroundColor?: string;\n\tworkpath?: string;\n\tonError?: Function;\n\textensions?: string[];\n\tmode?: ContextMode;\n\tmesh?: string;\n\tdoubleSided?: boolean;\n}\n\nexport default class Canvas extends Renderer {\n\n\toptions: ICanvasOptions;\n\tcanvas: HTMLCanvasElement;\n\trect: ClientRect | DOMRect;\n\twidth: number;\n\theight: number;\n\tdevicePixelRatio: number;\n\tvalid: boolean = false;\n\tvisible: boolean = false;\n\tcontrols: boolean = false;\n\trafId: number;\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\toptions: ICanvasOptions = {\n\t\t\t// alpha: true,\n\t\t\t// antialias: true,\n\t\t\t// premultipliedAlpha: true\n\t\t}\n\t) {\n\t\tsuper();\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.options = options;\n\t\tthis.canvas = canvas;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.rect = canvas.getBoundingClientRect();\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\n\t\tthis.mode = options.mode || ContextMode.Flat;\n\t\tthis.mesh = options.mesh || undefined;\n\t\tthis.doubleSided = options.doubleSided || false;\n\t\tthis.defaultMesh = this.mesh;\n\t\tthis.workpath = options.workpath;\n\t\tcanvas.style.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n\t\tthis.getShaders_().then((success) => {\n\t\t\tthis.load().then(success => {\n\t\t\t\tif (!this.program) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.addListeners_();\n\t\t\t\tthis.onLoop();\n\t\t\t});\n\t\t}, (error) => {\n\t\t\tLogger.error('GlslCanvas.getShaders_.error', error);\n\t\t});\n\t\tCanvas.items.push(this);\n\t}\n\n\tstatic logger: Logger = Logger;\n\tstatic items: Canvas[] = [];\n\n\tstatic of(canvas: HTMLCanvasElement, options?: ICanvasOptions): Canvas {\n\t\treturn Canvas.items.find(x => x.canvas === canvas) || new Canvas(canvas, options);\n\t}\n\n\tstatic loadAll(): Canvas[] {\n\t\tconst canvases: HTMLCanvasElement[] = <HTMLCanvasElement[]>[].slice.call(document.getElementsByClassName('glsl-canvas')).filter((x: HTMLElement) => x instanceof HTMLCanvasElement);\n\t\treturn canvases.map(x => Canvas.of(x));\n\t}\n\n\tprivate getShaders_(): Promise<string[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.vertexString = this.options.vertexString || this.vertexString;\n\t\t\tthis.fragmentString = this.options.fragmentString || this.fragmentString;\n\t\t\tconst canvas = this.canvas;\n\t\t\tconst urls: any = {};\n\t\t\tif (canvas.hasAttribute('data-vertex-url')) {\n\t\t\t\turls.vertex = canvas.getAttribute('data-vertex-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment-url')) {\n\t\t\t\turls.fragment = canvas.getAttribute('data-fragment-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-vertex')) {\n\t\t\t\tthis.vertexString = canvas.getAttribute('data-vertex');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment')) {\n\t\t\t\tthis.fragmentString = canvas.getAttribute('data-fragment');\n\t\t\t}\n\t\t\tif (Object.keys(urls).length) {\n\t\t\t\tPromise.all(Object.keys(urls).map((key, i) => {\n\t\t\t\t\tconst url: string = urls[key];\n\t\t\t\t\treturn Common.fetch(url)\n\t\t\t\t\t\t// .then((response) => response.text())\n\t\t\t\t\t\t.then((body) => {\n\t\t\t\t\t\t\tif (key === 'vertex') {\n\t\t\t\t\t\t\t\treturn this.vertexString = body;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn this.fragmentString = body;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t})).then(shaders => {\n\t\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addListeners_(): void {\n        /*\n        const resize = (e: Event) => {\n            this.rect = this.canvas.getBoundingClientRect();\n            this.trigger('resize', e);\n        };\n        */\n\t\tthis.onScroll = this.onScroll.bind(this);\n\t\tthis.onWheel = this.onWheel.bind(this);\n\t\tthis.onClick = this.onClick.bind(this);\n\t\tthis.onMove = this.onMove.bind(this);\n\t\tthis.onMousedown = this.onMousedown.bind(this);\n\t\tthis.onMousemove = this.onMousemove.bind(this);\n\t\tthis.onMouseover = this.onMouseover.bind(this);\n\t\tthis.onMouseout = this.onMouseout.bind(this);\n\t\tthis.onMouseup = this.onMouseup.bind(this);\n\t\tthis.onTouchmove = this.onTouchmove.bind(this);\n\t\tthis.onTouchend = this.onTouchend.bind(this);\n\t\tthis.onTouchstart = this.onTouchstart.bind(this);\n\t\tthis.onLoop = this.onLoop.bind(this);\n\t\t// window.addEventListener('resize', this.onResize);\n\t\twindow.addEventListener('scroll', this.onScroll);\n\t\tdocument.addEventListener('mousemove', this.onMousemove, false);\n\t\tdocument.addEventListener('touchmove', this.onTouchmove);\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tprivate addCanvasListeners_() {\n\t\tthis.controls = this.canvas.hasAttribute('controls');\n\t\tthis.canvas.addEventListener('wheel', this.onWheel);\n\t\tthis.canvas.addEventListener('click', this.onClick);\n\t\tthis.canvas.addEventListener('mousedown', this.onMousedown);\n\t\tthis.canvas.addEventListener('touchstart', this.onTouchstart);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.addEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.addEventListener('mouseout', this.onMouseout);\n\t\t\tif (!this.canvas.hasAttribute('data-autoplay')) {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeCanvasListeners_() {\n\t\tthis.canvas.removeEventListener('wheel', this.onWheel);\n\t\tthis.canvas.removeEventListener('click', this.onClick);\n\t\tthis.canvas.removeEventListener('mousedown', this.onMousedown);\n\t\tthis.canvas.removeEventListener('mouseup', this.onMouseup);\n\t\tthis.canvas.removeEventListener('touchstart', this.onTouchstart);\n\t\tthis.canvas.removeEventListener('touchend', this.onTouchend);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseout);\n\t\t}\n\t}\n\n\tprivate removeListeners_() {\n\t\twindow.cancelAnimationFrame(this.rafId);\n\t\t// window.removeEventListener('resize', this.onResize);\n\t\twindow.removeEventListener('scroll', this.onScroll);\n\t\tdocument.removeEventListener('mousemove', this.onMousemove);\n\t\tdocument.removeEventListener('touchmove', this.onTouchmove);\n\t\tthis.removeCanvasListeners_();\n\t}\n\n\tonScroll(e: Event) {\n\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t}\n\n\tonWheel(e: MouseWheelEvent) {\n\t\tthis.camera.wheel(e.deltaY);\n\t\tthis.trigger('wheel', e);\n\t}\n\n\tonClick(e: MouseEvent) {\n\t\tif (this.controls) {\n\t\t\tthis.toggle();\n\t\t}\n\t\tthis.trigger('click', e);\n\t}\n\n\tonDown(mx: number, my: number) {\n\t\tmx *= this.devicePixelRatio;\n\t\tmy *= this.devicePixelRatio;\n\t\tthis.mouse.x = mx;\n\t\tthis.mouse.y = my;\n\t\tconst rect = this.rect;\n\t\tconst min = Math.min(rect.width, rect.height);\n\t\tthis.camera.down(mx / min, my / min);\n\t\tthis.trigger('down', this.mouse);\n\t}\n\n\tonMove(mx: number, my: number) {\n\t\tconst rect = this.rect;\n\t\tconst x = (mx - rect.left) * this.devicePixelRatio;\n\t\tconst y = (rect.height - (my - rect.top)) * this.devicePixelRatio;\n\t\tif (x !== this.mouse.x ||\n\t\t\ty !== this.mouse.y) {\n\t\t\tthis.mouse.x = x;\n\t\t\tthis.mouse.y = y;\n\t\t\tconst min = Math.min(rect.width, rect.height);\n\t\t\tthis.camera.move(mx / min, my / min);\n\t\t\tthis.trigger('move', this.mouse);\n\t\t}\n\t}\n\n\tonUp(e: Event) {\n\t\tthis.camera.up();\n\t\tif (this.controls) {\n\t\t\tthis.pause();\n\t\t}\n\t\tthis.trigger('out', e);\n\t}\n\n\tonMousedown(e: MouseEvent) {\n\t\tthis.onDown(e.clientX || e.pageX, e.clientY || e.pageY);\n\t\tdocument.addEventListener('mouseup', this.onMouseup);\n\t\tdocument.removeEventListener('touchstart', this.onTouchstart);\n\t\tdocument.removeEventListener('touchmove', this.onTouchmove);\n\t}\n\n\tonMousemove(e: MouseEvent) {\n\t\tthis.onMove(e.clientX || e.pageX, e.clientY || e.pageY);\n\t}\n\n\tonMouseup(e: MouseEvent) {\n\t\tthis.onUp(e);\n\t}\n\n\tonMouseover(e: MouseEvent) {\n\t\tthis.play();\n\t\tthis.trigger('over', e);\n\t}\n\n\tonMouseout(e: MouseEvent) {\n\t\tthis.pause();\n\t\tthis.trigger('out', e);\n\t}\n\n\tonTouchmove(e: TouchEvent) {\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\n\t\t\tp = p || new Vector2();\n\t\t\tp.x += touch.clientX;\n\t\t\tp.y += touch.clientY;\n\t\t\treturn p;\n\t\t}, null);\n\t\tif (touch) {\n\t\t\tthis.onMove(touch.x / e.touches.length, touch.y / e.touches.length);\n\t\t}\n\t}\n\n\tonTouchend(e: TouchEvent) {\n\t\tthis.onUp(e);\n\t\tdocument.removeEventListener('touchend', this.onTouchend);\n\t}\n\n\tonTouchstart(e: TouchEvent) {\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\n\t\t\tp = p || new Vector2();\n\t\t\tp.x += touch.clientX;\n\t\t\tp.y += touch.clientY;\n\t\t\treturn p;\n\t\t}, null);\n\t\tif (touch) {\n\t\t\tthis.onDown(touch.x / e.touches.length, touch.y / e.touches.length);\n\t\t}\n\t\tif (this.controls) {\n\t\t\tthis.play();\n\t\t}\n\t\tthis.trigger('over', e);\n\t\tdocument.addEventListener('touchend', this.onTouchend);\n\t\tdocument.removeEventListener('mousedown', this.onMousedown);\n\t\tdocument.removeEventListener('mousemove', this.onMousemove);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseover);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseout);\n\t\t}\n\t}\n\n\tonLoop(time?: number) {\n\t\tthis.checkRender();\n\t\tthis.rafId = window.requestAnimationFrame(this.onLoop);\n\t}\n\n\tprivate setUniform_(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\toptions: ITextureOptions = {},\n\t\ttype: UniformType = null\n\t): void {\n\t\tconst uniform: Uniform | Uniform[] = Uniforms.parseUniform(key, values, type);\n\t\tif (Array.isArray(uniform)) {\n\t\t\tif (Uniforms.isArrayOfSampler2D(uniform)) {\n\t\t\t\tuniform.forEach((x) => this.loadTexture(x.key, x.values[0], options));\n\t\t\t} else {\n\t\t\t\tuniform.forEach((x) => this.uniforms.set(x.key, x.values[0]));\n\t\t\t}\n\t\t} else if (uniform) {\n\t\t\tswitch (uniform.type) {\n\t\t\t\tcase UniformType.Sampler2D:\n\t\t\t\t\tthis.loadTexture(key, values[0], options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.uniforms.set(key, uniform);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isVisible_(): boolean {\n\t\tconst rect = this.rect;\n\t\treturn (rect.top + rect.height) > 0 && rect.top < (window.innerHeight || document.documentElement.clientHeight);\n\t}\n\n\tprivate isAnimated_(): boolean {\n\t\treturn (this.animated || this.textures.animated) && !this.timer.paused;\n\t}\n\n\tprivate isDirty_(): boolean {\n\t\treturn this.dirty || this.uniforms.dirty || this.textures.dirty;\n\t}\n\n\t// check size change at start of requestFrame\n\tprivate sizeDidChanged_(): boolean {\n\t\tconst gl = this.gl;\n\t\tconst CW = Math.ceil(this.canvas.clientWidth),\n\t\t\tCH = Math.ceil(this.canvas.clientHeight);\n\t\tif (this.width !== CW ||\n\t\t\tthis.height !== CH) {\n\t\t\tthis.width = CW;\n\t\t\tthis.height = CH;\n\t\t\t// Lookup the size the browser is displaying the canvas in CSS pixels\n\t\t\t// and compute a size needed to make our drawingbuffer match it in\n\t\t\t// device pixels.\n\t\t\tconst W = Math.ceil(CW * this.devicePixelRatio);\n\t\t\tconst H = Math.ceil(CH * this.devicePixelRatio);\n\t\t\tthis.W = W;\n\t\t\tthis.H = H;\n\t\t\tthis.canvas.width = W;\n\t\t\tthis.canvas.height = H;\n            /*\n            if (gl.canvas.width !== W ||\n                gl.canvas.height !== H) {\n                gl.canvas.width = W;\n                gl.canvas.height = H;\n                // Set the viewport to match\n                // gl.viewport(0, 0, W, H);\n            }\n            */\n\t\t\tfor (const key in this.buffers.values) {\n\t\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\t\tbuffer.resize(gl, W, H);\n\t\t\t}\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t\t\tthis.trigger('resize');\n\t\t\t// gl.useProgram(this.program);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate parseTextures_(fragmentString: string): boolean {\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)|\\s*)/gm;\n\t\tconst regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]*)|\\s*)/gm;\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\://|\\.|\\-|\\_]*)|\\s*)((\\s*\\:\\s)(\\{(\\s*\\w*\\:\\s*['|\"]{0,1}\\w*['|\"]{0,1}\\s*[,]{0,1})+\\}))*/gm;\n\t\tlet matches;\n\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\tconst key = matches[1];\n\t\t\tconst url = matches[3];\n\t\t\tif (Texture.isTextureUrl(url)) {\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t\t/*\n\t\t\t\tif (matches[3]) {\n\t\t\t\t\tconst ext = matches[3].split('?')[0].split('.').pop().toLowerCase();\n\t\t\t\t\tconst url = matches[3];\n\t\t\t\t\tif (url && TextureExtensions.indexOf(ext) !== -1) {\n\t\t\t\t\t\t// let options;\n\t\t\t\t\t\t// if (matches[6]) {\n\t\t\t\t\t\t// \ttry {\n\t\t\t\t\t\t// \t\toptions = new Function(`return ${matches[6]};`)();\n\t\t\t\t\t\t// \t} catch (e) {\n\t\t\t\t\t\t// \t\t// console.log('wrong texture options');\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// console.log(options, matches[6]);\n\t\t\t\t\t\t// this.textureList.push({ key, url, options });\n\t\t\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t} else if (!this.buffers.has(key)) {\n\t\t\t\t// create empty texture\n\t\t\t\tthis.textureList.push({ key, url: null });\n\t\t\t}\n\t\t}\n\t\tif (this.canvas.hasAttribute('data-textures')) {\n\t\t\tconst urls = this.canvas.getAttribute('data-textures').split(',');\n\t\t\turls.forEach((url: string, i: number) => {\n\t\t\t\tconst key = 'u_texture' + i;\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t});\n\t\t}\n\t\treturn this.textureList.length > 0;\n\t}\n\n\tload(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<boolean> {\n\t\tconst fragmentVertexString: string = Context.getFragmentVertex(this.gl, fragmentString || this.fragmentString);\n\t\treturn Promise.all([\n\t\t\tContext.getIncludes(fragmentString || this.fragmentString),\n\t\t\tContext.getIncludes(fragmentVertexString || vertexString || this.vertexString)\n\t\t]).then(array => {\n\t\t\tthis.fragmentString = array[0];\n\t\t\tthis.vertexString = array[1];\n\t\t\treturn this.createContext_();\n\t\t});\n\t}\n\n\tprivate getContext_(): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst vertexString = this.vertexString;\n\t\tconst fragmentString = this.fragmentString;\n\t\tthis.vertexString = Context.getVertex(vertexString, fragmentString, this.mode);\n\t\tthis.fragmentString = Context.getFragment(vertexString, fragmentString, this.mode);\n\t\tif (Context.versionDiffers(this.gl, vertexString, fragmentString)) {\n\t\t\tthis.destroyContext_();\n\t\t\tthis.swapCanvas_();\n\t\t\tthis.uniforms = new Uniforms();\n\t\t\tthis.buffers = new Buffers();\n\t\t\tthis.textures = new Textures();\n\t\t\tthis.textureList = [];\n\t\t}\n\t\tif (!this.gl) {\n\t\t\tconst gl = Context.tryInferContext(vertexString, fragmentString, this.canvas, this.options, this.options.extensions, this.options.onError);\n\t\t\tif (!gl) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.gl = gl;\n\t\t}\n\t\treturn this.gl;\n\t}\n\n\tprivate createContext_(): boolean {\n\t\tconst gl = this.getContext_();\n\t\tif (!gl) {\n\t\t\treturn false;\n\t\t}\n\t\tlet vertexShader, fragmentShader;\n\t\ttry {\n\t\t\tContext.inferPrecision(this.fragmentString);\n\t\t\tvertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\t\tfragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER);\n\t\t\t// If Fragment shader fails load a empty one to sign the error\n\t\t\tif (!fragmentShader) {\n\t\t\t\tconst defaultFragment = Context.getFragment(null, null, this.mode);\n\t\t\t\tfragmentShader = Context.createShader(gl, defaultFragment, gl.FRAGMENT_SHADER);\n\t\t\t\tthis.valid = false;\n\t\t\t} else {\n\t\t\t\tthis.valid = true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// !!!\n\t\t\t// console.error(e);\n\t\t\tthis.trigger('error', e);\n\t\t\treturn false;\n\t\t}\n\t\t// Create and use program\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\n\t\tif (!program) {\n\t\t\tthis.trigger('error', Context.lastError);\n\t\t\treturn false;\n\t\t}\n\t\t// console.log(this.vertexString, this.fragmentString, program);\n\t\t// Delete shaders\n\t\t// gl.detachShader(program, vertexShader);\n\t\t// gl.detachShader(program, fragmentShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tthis.program = program;\n\t\tif (this.valid) {\n\t\t\ttry {\n\t\t\t\tthis.buffers = Buffers.getBuffers(gl, this.fragmentString, Context.getBufferVertex(gl));\n\t\t\t} catch (e) {\n\t\t\t\t// console.error('load', e);\n\t\t\t\tthis.valid = false;\n\t\t\t\tthis.trigger('error', e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.create_();\n\t\t\tif (this.animated) {\n\t\t\t\tthis.canvas.classList.add('animated');\n\t\t\t} else {\n\t\t\t\tthis.canvas.classList.remove('animated');\n\t\t\t}\n\t\t}\n\t\t// Trigger event\n\t\tthis.trigger('load', this);\n\t\treturn this.valid;\n\t}\n\n\tprotected create_(): void {\n\t\tthis.parseMode_();\n\t\tthis.parseMesh_();\n\t\tsuper.create_();\n\t\tthis.createBuffers_();\n\t\tthis.createTextures_();\n\t}\n\n\tprotected parseMode_() {\n\t\tif (this.canvas.hasAttribute('data-mode')) {\n\t\t\tconst data = this.canvas.getAttribute('data-mode');\n\t\t\tif (['flat', 'box', 'sphere', 'torus', 'mesh'].indexOf(data) !== -1) {\n\t\t\t\tthis.mode = data as ContextMode;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected parseMesh_() {\n\t\tif (this.canvas.hasAttribute('data-mesh')) {\n\t\t\tconst data = this.canvas.getAttribute('data-mesh');\n\t\t\tif (data.indexOf('.obj') !== -1) {\n\t\t\t\tthis.mesh = this.defaultMesh = data;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected createBuffers_() {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected createTextures_() {\n\t\tconst hasTextures = this.parseTextures_(this.fragmentString);\n\t\tif (hasTextures) {\n\t\t\tthis.textureList.filter(x => x.url).forEach(x => {\n\t\t\t\tthis.setTexture(x.key, x.url, x.options);\n\t\t\t});\n\t\t\tthis.textureList = [];\n\t\t}\n\t}\n\n\tprotected update_(): void {\n\t\tsuper.update_();\n\t\tthis.updateBuffers_();\n\t\tthis.updateTextures_();\n\t}\n\n\tprotected updateBuffers_(): void {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected updateTextures_(): void {\n\t\tconst gl = this.gl;\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.tryUpdate(gl);\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, texture.key, [texture.index]);\n\t\t}\n\t}\n\n\tprivate destroyContext_(): void {\n\t\tconst gl = this.gl;\n\t\tgl.useProgram(null);\n\t\tif (this.program) {\n\t\t\tgl.deleteProgram(this.program);\n\t\t}\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.destroy(gl);\n\t\t}\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.destroy(gl);\n\t\t}\n\t\tthis.buffers = null;\n\t\tthis.textures = null;\n\t\tthis.uniforms = null;\n\t\tthis.program = null;\n\t\tthis.gl = null;\n\t}\n\n\tprivate swapCanvas_(): void {\n\t\tconst canvas = this.canvas;\n\t\tconst canvas_ = canvas.cloneNode() as HTMLCanvasElement;\n\t\tcanvas.parentNode.replaceChild(canvas_, canvas);\n\t\tthis.canvas = canvas_;\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tdestroy(): void {\n\t\tthis.removeListeners_();\n\t\tthis.destroyContext_();\n\t\tthis.animated = false;\n\t\tthis.valid = false;\n\t\tCanvas.items.splice(Canvas.items.indexOf(this), 1);\n\t}\n\n\tloadTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t) {\n\t\tif (this.valid) {\n\t\t\t// Logger.log('GlslCanvas.loadTexture', key, urlElementOrData);\n\t\t\tthis.textures.createOrUpdate(this.gl, key, urlElementOrData, this.buffers.count, options, this.options.workpath).then(\n\t\t\t\ttexture => {\n\t\t\t\t\tconst index = texture.index;\n\t\t\t\t\tconst uniform = this.uniforms.createTexture(key, index);\n\t\t\t\t\tuniform.texture = texture;\n\t\t\t\t\tconst keyResolution = key.indexOf('[') !== -1 ? key.replace('[', 'Resolution[') : key + 'Resolution';\n\t\t\t\t\t// const uniformResolution = ;\n\t\t\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, keyResolution, [texture.width, texture.height]);\n\t\t\t\t\t// Logger.log('loadTexture', key, url, index, texture.width, texture.height);\n\t\t\t\t\treturn texture;\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconst message = Array.isArray(error.path) ? error.path.map((x: any) => x.error ? x.error.message : '').join(', ') : error.message;\n\t\t\t\t\tLogger.error('GlslCanvas.loadTexture.error', key, urlElementOrData, message);\n\t\t\t\t\tthis.trigger('textureError', { key, urlElementOrData, message });\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.textureList.push({ key, url: urlElementOrData, options });\n\t\t}\n\t}\n\n\tsetTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): void {\n\t\treturn this.setUniform_(key, [urlElementOrData], options);\n\t}\n\n\tsetUniform(key: string, ...values: any[]): void {\n\t\treturn this.setUniform_(key, values);\n\t}\n\n\tsetUniformOfInt(key: string, values: any[]): void {\n\t\treturn this.setUniform_(key, values, null, UniformType.Int);\n\t}\n\n\tsetUniforms(values: IUniformOption): void {\n\t\tfor (const key in values) {\n\t\t\tthis.setUniform(key, values[key]);\n\t\t}\n\t}\n\n\tpause(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.pause();\n\t\t\tthis.canvas.classList.add('paused');\n\t\t\tthis.trigger('pause');\n\t\t}\n\t}\n\n\tplay(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.play();\n\t\t\tthis.canvas.classList.remove('paused');\n\t\t\tthis.trigger('play');\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tif (this.valid) {\n\t\t\tif (this.timer.paused) {\n\t\t\t\tthis.play();\n\t\t\t} else {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckRender(): void {\n\t\tif (this.isVisible_() && (this.sizeDidChanged_() || this.isDirty_() || this.isAnimated_())) {\n\t\t\tthis.render();\n\t\t\tthis.canvas.classList.add('playing');\n\t\t} else {\n\t\t\tthis.canvas.classList.remove('playing');\n\t\t}\n\t}\n\n\t/*\n\ttest(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst vertex = this.vertexString;\n\t\t\tconst fragment = this.fragmentString;\n\t\t\tconst paused = this.timer.paused;\n\t\t\t// Thanks to @thespite for the help here\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n\t\t\tconst extension = this.gl.getExtension('EXT_disjoint_timer_query');\n\t\t\tconst query = extension.createQueryEXT();\n\t\t\tlet wasValid = this.valid;\n\t\t\tif (fragmentString || vertexString) {\n\t\t\t\tthis.load(fragmentString, vertexString);\n\t\t\t\twasValid = this.valid;\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.timer.paused = true;\n\t\t\textension.beginQueryEXT(extension.TIME_ELAPSED_EXT, query);\n\t\t\tthis.render();\n\t\t\textension.endQueryEXT(extension.TIME_ELAPSED_EXT);\n\t\t\tconst waitForTest = () => {\n\t\t\t\tthis.render();\n\t\t\t\tconst available = extension.getQueryObjectEXT(query, extension.QUERY_RESULT_AVAILABLE_EXT);\n\t\t\t\tconst disjoint = this.gl.getParameter(extension.GPU_DISJOINT_EXT);\n\t\t\t\tif (available && !disjoint) {\n\t\t\t\t\tconst result = {\n\t\t\t\t\t\twasValid: wasValid,\n\t\t\t\t\t\tfragment: fragmentString || this.fragmentString,\n\t\t\t\t\t\tvertex: vertexString || this.vertexString,\n\t\t\t\t\t\ttimeElapsedMs: extension.getQueryObjectEXT(query, extension.QUERY_RESULT_EXT) / 1000000.0\n\t\t\t\t\t};\n\t\t\t\t\tthis.timer.paused = paused;\n\t\t\t\t\tif (fragmentString || vertexString) {\n\t\t\t\t\t\tthis.load(fragment, vertex);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else {\n\t\t\t\t\twindow.requestAnimationFrame(waitForTest);\n\t\t\t\t}\n\t\t\t}\n\t\t\twaitForTest();\n\t\t});\n\t}\n\t*/\n\n}\n\nif (document) {\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\tCanvas.loadAll();\n\t});\n}\n"]}