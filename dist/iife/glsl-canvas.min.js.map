{"version":3,"sources":["src/glsl.ts","../../src/context/chunks.ts","../../src/logger/logger.ts","../../src/core/common.ts","../../src/context/context.ts","../../src/core/iterable.ts","../../src/buffers/buffers.ts","../../src/geometry/geometry.ts","../../src/geometry/flat-geometry.ts","../../src/math/vector2.ts","../../src/math/vector3.ts","../../src/camera/orbit-camera.ts","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../src/textures/textures.ts","../../src/canvas/canvas-timer.ts","../../src/core/subscriber.ts","../../src/geometry/box-geometry.ts","../../src/geometry/sphere-geometry.ts","../../src/geometry/torus-geometry.ts","../../src/loaders/obj-loader.ts","../../src/uniforms/uniforms.ts","../../src/renderer/renderer.ts","../../src/canvas/canvas.ts","../../src/glsl.ts"],"names":["glsl","exports","_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_inheritsLoose","prototype","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","i","Symbol","toPrimitive","call","TypeError","String","Number","_toPrimitive","LoggerLevel","DefaultWebGLVertexAttributes_","DefaultWebGLFragmentAttributes_","DefaultWebGL2VertexAttributes_","DefaultWebGL2FragmentAttributes_","DefaultWebGLUniform_","DefaultWebGLFlatVertex_","DefaultWebGLMeshVertex_","DefaultWebGLMeshVertex","DefaultWebGL2MeshVertex","DefaultWebGLFlatFragment","DefaultWebGL2FlatFragment","DefaultWebGLMeshFragment","DefaultWebGL2MeshFragment","DefaultWebGLBufferVertex","DefaultWebGL2BufferVertex","DefaultWebGLBufferFragment","DefaultWebGL2BufferFragment","Common","fetch","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","responseText","onerror","error","console","log","Error","ontimeout","onabort","open","send","getResource","filepath","workpath","indexOf","join","comps","_len","arguments","args","Array","_key","forEach","a","x","pop","push","dirname","path","replace","split","ContextVersion","ContextPrecision","ContextMode","Logger","_console","enabled","level","Log","apply","warn","_console2","Warn","_console3","ContextError","ContextDefault","webgl","flat","vertex","fragment","mesh","webgl2","ContextVertexBuffers","this","texcoord","position","Context","getContext_","canvas","options","names","context","getContext","getContext2_","getFragmentVertex","gl","fragmentString","vertexString","version","inferVersion","WebGl2","exec","sanitizeIncludeFragment","getIncludes","input","_this","undefined","match","regex","promises","_loop","slice","index","filePath","nextWorkpath","then","include","all","chunks","isWebGl","WebGLRenderingContext","isWebGl2","window","WebGL2RenderingContext","source","WebGl","inferPrecision","precision","versionDiffers","currentVersion","getBufferVertex","getVertex","mode","Flat","getFragment","tryInferContext","attributes","extensions","errorCallback","handleError","errorCode","html","container","parentNode","innerHTML","BrowserSupport","inferContext","supportedExtensions","getSupportedExtensions","getExtension","Other","tryGetContext","createShader","type","offset","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","locations","program","attachShader","bindAttribLocation","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","createVertexBuffers","vertexBuffers","texcoordIndex","getAttribLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionIndex","MediumP","StringMap","BufferFloatType","IterableStringMap","values","_proto","has","set","item","get","callbackfn","keys","reduce","initialValue","_this2","previous","Geometry","positions","colors","normals","texcoords","positionBuffer","colorBuffer","normalBuffer","texcoordBuffer","positionLocation","colorLocation","normalLocation","texcoordLocation","size","assign","createData_","createAttributes_","createBufferData_","array","buffer","createAttribLocation_","name","location","attachAttributes_","attribLocation","bindAttributes_","fromIndices","indices","FlatGeometry","_Geometry","Buffer","BW","BH","texture","createFramebuffer","getTexture","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","getFloatType","getHalfFloatType","extension","HALF_FLOAT","HALF_FLOAT_OES","getInternalFormat","RGBA16F","RGBA","getType","internalFormat","format","createTexture","activeTexture","TEXTURE0","bindTexture","texImage2D","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","resize","bindFramebuffer","pixels","status","minW","Math","min","minH","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","deleteTexture","IOBuffer","geometry","output","isValid","_proto2","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","render","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","drawArrays","TRIANGLES","destroy","Buffers","_IterableStringMap","getBuffers","buffers","count","matches","regexp","bufferFragmentString","drawingBufferWidth","drawingBufferHeight","Vector2","y","isVector2","copy","v","sqrt","normalize","divideScalar","scalar","multiplyScalar","subVectors","b","addVectors","Vector3","z","isVector3","crossVectors","ax","ay","az","bx","by","bz","RAD","PI","OrbitCamera","_Vector","theta","phi","radius","value","mouse","dirty","down","move","max","up","wheel","d","fromVector","vector","acos","atan","toArray","camera","spr","sin","cos","ARRAY_TYPE","out","glMatrix.ARRAY_TYPE","identity","rotate","rad","axis","s","c","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","b00","b01","b02","b10","b11","b12","b20","b21","b22","len","hypot","TextureSourceType","TextureFilteringType","perspective","fovy","aspect","near","far","nf","f","tan","Infinity","CanvasTimer","start","delay","current","delta","paused","now","performance","play","pause","next","Listener","event","callback","Subscriber","listeners","Set","logListeners","subscribe","listener","add","unsubscribe","delete","unsubscribeAll","on","off","trigger","data","BoxGeometry","faceColors","j","concat","SphereGeometry","ix","iy","phiLength","thetaLength","p","n","thetaEnd","grid","positionRow","uOffset","u","uvx","uvy","heightDivisions","TorusGeometry","tubularDivisions","radialDivisions","normal","p1","p2","B","T","N","calculatePositionOnCurve","cx","cy","round","q","cu","su","quOverP","cs","COLORS","CI","ObjLoader","load","text","parse","parseIndices","faceIndices","k","l","NaN","parseFaces","F","V","VN","VT","si","vl","fill","rgb","_this3","line","trim","map","parseFloat","parseInt","boundingBox","POSITIVE_INFINITY","NEGATIVE_INFINITY","dx","dy","dz","unrapUvw","pitch","asin","yaw","atan2","tx","ty","TextureImageExtensions","TextureVideoExtensions","TextureExtensions","isTextureData","object","Texture","UniformMethod","UniformType","_Subscriber","filtering","Linear","width","height","sourceType","valid","animated","powerOf2","isPowerOf2","isSafari","test","navigator","userAgent","isTextureUrl","isTexture","urlElementOrData","getTextureOptions","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","prev","curr","params","decodeURIComponent","Boolean","document","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","element","setData","Uint8Array","setUrl","setElement","Url","promise","ext","toLowerCase","isVideo","src","createElement","setAttribute","loop","muted","addEventListener","crossOrigin","originalElement","Element","video","update","setFiltering","message","JSON","stringify","Data","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","naturalWidth","naturalHeight","UNSIGNED_BYTE","videoWidth","videoHeight","imageBuffer","tryUpdate","MipMap","wrapS","repeat","REPEAT","wrapT","LINEAR_MIPMAP_LINEAR","LINEAR","generateMipmap","Nearest","Textures","clean","_this4","createOrUpdate","_this5","textureOptions","flag","METHODS_INT","Uniform1i","Uniform2i","Uniform3i","Uniform4i","METHODS_FLOAT","Uniform1f","Uniform2f","Uniform3f","Uniform4f","METHODS_INTV","Uniform1iv","Uniform2iv","Uniform3iv","Uniform4iv","METHODS_FLOATV","Uniform1fv","Uniform2fv","Uniform3fv","Uniform4fv","Uniform","method","UniformMatrix2fv","UniformMatrix3fv","UniformMatrix4fv","getUniformLocation","UniformTexture","_Uniform2","Uniforms","isArrayOfInteger","isInteger","isArrayOfNumber","isArrayOfBoolean","isArrayOfTexture","isArrayOfSampler2D","Sampler2D","getType_","Unknown","subject","isArray","Float","Bool","getMethod_","isVector","Int","parseUniform","uniform","isDifferent","Renderer","timer","uniforms","textures","textureList","W","H","radians","drawFunc_","projectionMatrix","modelViewMatrix","normalMatrix","defaultMesh","doubleSided","cache","updateUniformDelta_","updateUniformTime_","updateUniformDate_","updateUniformMouse_","updateUniformCamera_","updateUniformMesh_","drawArrays_","update_","deltaTime","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","cullFace","FRONT","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","BACK","create_","createGeometry_","createUniforms_","parseGeometry_","setMode","hasDelta","hasTime","hasDate","hasMouse","hasCamera","updateUniformDelta__","updateUniformNoop_","updateUniformTime__","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","updateUniformDate__","updateUniformMouse__","updateUniformCamera__","mat4","updateUniformMesh__","updateProjectionMatrix_","updateModelViewMatrix_","updateNormalMatrix_","updateUniformFlat__","fieldOfView","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","det","Mesh","Box","Sphere","Torus","setMesh","Canvas","_Renderer","rect","devicePixelRatio","visible","controls","rafId","vertexPath","fragmentPath","getBoundingClientRect","style","backgroundColor","getShaders_","_","addListeners_","onLoop","items","ReferenceError","_assertThisInitialized","urls","hasAttribute","getAttribute","body","onScroll","onWheel","onClick","onMove","onMouseDown","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onTouchMove","onTouchEnd","onTouchStart","addCanvasListeners_","removeCanvasListeners_","removeEventListener","removeListeners_","cancelAnimationFrame","deltaY","toggle","onDown","mx","my","left","top","onUp","clientX","clientY","touch","touches","checkRender","requestAnimationFrame","setUniform_","loadTexture","isVisible_","innerHeight","documentElement","clientHeight","isAnimated_","isDirty_","sizeDidChanged_","CW","ceil","clientWidth","CH","parseTextures_","_this6","fragmentVertexString","createContext_","destroyContext_","swapCanvas_","onError","defaultFragment","classList","remove","parseMode_","parseMesh_","createBuffers_","createTextures_","_this7","_this8","filter","setTexture","updateBuffers_","updateTextures_","_this9","_this10","_this11","canvas_","cloneNode","replaceChild","splice","_this12","keyResolution","setUniform","setUniformOfInt","setUniforms","_this13","of","find","loadAll","getElementsByClassName"],"mappings":"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","file":"dist\\iife\\glsl-canvas.min.js","sourcesContent":[null,"\r\nexport const DefaultWebGLVertexAttributes_ = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nattribute vec4 a_position;\r\nattribute vec4 a_normal;\r\nattribute vec2 a_texcoord;\r\nattribute vec4 a_color;\r\n\r\nvarying vec4 v_position;\r\nvarying vec4 v_normal;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGLFragmentAttributes_ = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nvarying vec4 v_position;\r\nvarying vec4 v_normal;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGL2VertexAttributes_ = `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 a_position;\r\nin vec4 a_normal;\r\nin vec2 a_texcoord;\r\nin vec4 a_color;\r\n\r\nout vec4 v_position;\r\nout vec4 v_normal;\r\nout vec2 v_texcoord;\r\nout vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGL2FragmentAttributes_ = `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 v_position;\r\nin vec4 v_normal;\r\nin vec2 v_texcoord;\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\n`;\r\n\r\nexport const DefaultWebGLUniform_ = `\r\nuniform mat4 u_projectionMatrix;\r\nuniform mat4 u_modelViewMatrix;\r\nuniform mat4 u_normalMatrix;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\n`;\r\n\r\nexport const DefaultWebGL2Uniform_ = DefaultWebGLUniform_;\r\n\r\nexport const DefaultWebGLFlatVertex_ = `\r\nvoid main() {\r\n\tv_position = a_position;\r\n\tv_normal = a_normal;\r\n\tv_texcoord = a_texcoord;\r\n\tv_color = a_color;\r\n\tgl_Position = a_position;\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLMeshVertex_ = `\r\nvoid main(void) {\r\n\tv_position = u_projectionMatrix * u_modelViewMatrix * a_position;\r\n\tv_normal = u_normalMatrix * a_normal;\r\n\tv_texcoord = a_texcoord;\r\n\tv_color = a_color;\r\n\tgl_Position = v_position;\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLFlatFragment_ = `\r\nvoid main() {\r\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\tst.x *= u_resolution.x / u_resolution.y;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * st.y,\r\n\t\tabs(cos(u_time * 0.2)) * st.y,\r\n\t\tabs(sin(u_time)) * st.y\r\n\t);\r\n\tgl_FragColor = vec4(color, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGL2FlatFragment_ = `\r\nvoid main() {\r\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\tst.x *= u_resolution.x / u_resolution.y;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * st.y,\r\n\t\tabs(cos(u_time * 0.2)) * st.y,\r\n\t\tabs(sin(u_time)) * st.y\r\n\t);\r\n\toutColor = vec4(color, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLMeshFragment_ = `\r\nvoid main() {\r\n\tvec2 uv = v_texcoord;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * uv.y,\r\n\t\tabs(cos(u_time * 0.2)) * uv.y,\r\n\t\tabs(sin(u_time)) * uv.y\r\n\t);\r\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\r\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\r\n\tgl_FragColor = vec4(v_color.rgb * color * light, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGL2MeshFragment_ = `\r\nvoid main() {\r\n\tvec2 uv = v_texcoord;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * uv.y,\r\n\t\tabs(cos(u_time * 0.2)) * uv.y,\r\n\t\tabs(sin(u_time)) * uv.y\r\n\t);\r\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\r\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\r\n\toutColor = vec4(v_color.rgb * color * light, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLBufferFragment_ = `\r\nvoid main(){\r\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}`;\r\n\r\nexport const DefaultWebGL2BufferFragment_ = `\r\nvoid main() {\r\n\toutColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}\r\n`;\r\n\r\n//\r\nexport const DefaultWebGLMeshVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\r\nexport const DefaultWebGL2MeshVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\r\nexport const DefaultWebGLFlatFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatFragment_;\r\nexport const DefaultWebGL2FlatFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2FlatFragment_;\r\nexport const DefaultWebGLMeshFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshFragment_;\r\nexport const DefaultWebGL2MeshFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2MeshFragment_;\r\n//\r\nexport const DefaultWebGLBufferVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\r\nexport const DefaultWebGL2BufferVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\r\nexport const DefaultWebGLBufferFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLBufferFragment_;\r\nexport const DefaultWebGL2BufferFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2BufferFragment_;\r\n//\r\n\r\n","export enum LoggerLevel {\r\n\tNone = 0,\r\n\tError = 1,\r\n\tWarn = 2,\r\n\tLog = 3,\r\n}\r\n\r\nexport default class Logger {\r\n\r\n\tstatic level: LoggerLevel = LoggerLevel.Warn;\r\n\r\n\tstatic enabled: boolean = true;\r\n\r\n\tstatic log(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Log) {\r\n\t\t\tconsole.log(...datas);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic warn(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Warn) {\r\n\t\t\tconsole.warn(...datas);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic error(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Error) {\r\n\t\t\tconsole.error(...datas);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import 'promise-polyfill';\r\n\r\nexport default class Common {\r\n\tstatic fetch(url: string): Promise<string> {\r\n\t\t// console.log('Common.fetch', url);\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tresolve(xhr.response || xhr.responseText);\r\n\t\t\t};\r\n\t\t\txhr.onerror = function (error) {\r\n\t\t\t\tconsole.log('Common.error', error);\r\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\r\n\t\t\t};\r\n\t\t\txhr.ontimeout = function (error) {\r\n\t\t\t\t// console.log(error);\r\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\r\n\t\t\t};\r\n\t\t\txhr.onabort = function () {\r\n\t\t\t\treject(new Error('Aborted'));\r\n\t\t\t};\r\n\t\t\txhr.open('GET', url, true);\r\n\t\t\txhr.send(null);\r\n\t\t})\r\n\t}\r\n\r\n\tstatic getResource(filepath: string, workpath: string = ''): string {\r\n\t\tconst resource: string = (filepath.indexOf(':/') === -1) ? Common.join(workpath, filepath) : filepath;\r\n\t\treturn resource;\r\n\t}\r\n\r\n\tstatic join(...args: string[]): string {\r\n\t\tlet comps: string[] = [];\r\n\t\targs.forEach(a => {\r\n\t\t\tif (a.indexOf('/') === 0) {\r\n\t\t\t\tcomps = [];\r\n\t\t\t}\r\n\t\t\tconst parts = Common.comps(a);\r\n\t\t\tparts.forEach(x => {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase '.':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '..':\r\n\t\t\t\t\t\tcomps.pop();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcomps.push(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn comps.join('/');\r\n\t}\r\n\r\n\tstatic dirname(path: string): string {\r\n\t\t// return path.replace(/\\/[^\\/]+\\.\\w+/, '');\r\n\t\tconst comps: string[] = Common.comps(path);\r\n\t\tcomps.pop();\r\n\t\treturn comps.join('/');\r\n\t}\r\n\r\n\tstatic comps(path: string): string[] {\r\n\t\treturn path.replace(/\\/$/, '').split(/\\/+/);\r\n\t}\r\n}\r\n","import Common from '../core/common';\r\nimport Logger from '../logger/logger';\r\nimport { DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './chunks';\r\n\r\nexport enum ContextVersion {\r\n\tWebGl = 'webgl',\r\n\tWebGl2 = 'webgl2',\r\n}\r\n\r\nexport enum ContextPrecision {\r\n\tLowP = 'lowp',\r\n\tMediumP = 'mediump',\r\n\tHighP = 'highp',\r\n}\r\n\r\nexport enum ContextMode {\r\n\tFlat = 'flat',\r\n\tBox = 'box',\r\n\tSphere = 'sphere',\r\n\tTorus = 'torus',\r\n\tMesh = 'mesh',\r\n}\r\n\r\nexport const ContextDefault = {\r\n\t'webgl': {\r\n\t\t'flat': {\r\n\t\t\tvertex: DefaultWebGLMeshVertex,\r\n\t\t\tfragment: DefaultWebGLFlatFragment,\r\n\t\t},\r\n\t\t'mesh': {\r\n\t\t\tvertex: DefaultWebGLMeshVertex,\r\n\t\t\tfragment: DefaultWebGLMeshFragment,\r\n\t\t}\r\n\t},\r\n\t'webgl2': {\r\n\t\t'flat': {\r\n\t\t\tvertex: DefaultWebGL2MeshVertex,\r\n\t\t\tfragment: DefaultWebGL2FlatFragment,\r\n\t\t},\r\n\t\t'mesh': {\r\n\t\t\tvertex: DefaultWebGL2MeshVertex,\r\n\t\t\tfragment: DefaultWebGL2MeshFragment,\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport enum ContextError {\r\n\tBrowserSupport = 1,\r\n\tOther = 2,\r\n}\r\n\r\nexport class ContextVertexBuffers {\r\n\ttexcoord: WebGLBuffer;\r\n\tposition: WebGLBuffer;\r\n}\r\n\r\nexport default class Context {\r\n\r\n\tstatic precision: ContextPrecision = ContextPrecision.MediumP;\r\n\tstatic lastError: string = '';\r\n\r\n\tstatic getContext_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext {\r\n\t\tconst names = ['webgl', 'experimental-webgl'];\r\n\t\tlet context = null;\r\n\t\tfor (let i = 0; i < names.length; ++i) {\r\n\t\t\ttry {\r\n\t\t\t\tcontext = canvas.getContext(names[i], options) as WebGLRenderingContext;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic getContext2_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGL2RenderingContext {\r\n\t\tlet context = null;\r\n\t\ttry {\r\n\t\t\tcontext = canvas.getContext('webgl2', options) as WebGL2RenderingContext;\r\n\t\t} catch (e) {\r\n\t\t\t// console.error('GlslCanvas.Context.getContext2_.error', e);\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic getFragmentVertex(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string): string {\r\n\t\tlet vertexString;\r\n\t\tif (fragmentString) {\r\n\t\t\tconst version = Context.inferVersion(fragmentString);\r\n\t\t\tif (version === ContextVersion.WebGl2) {\r\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es.*?\\n/, '');\r\n\t\t\t}\r\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*VERTEX)(?:\\s*\\))|(?:#ifdef)(?:\\s*VERTEX)(?:\\s*))/gm;\r\n\t\t\tconst matches = regexp.exec(fragmentString);\r\n\t\t\tif (matches !== null) {\r\n\t\t\t\tvertexString = version === ContextVersion.WebGl2 ? `#version 300 es\r\n#define VERTEX\r\n${fragmentString}` : `#define VERTEX\r\n${fragmentString}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn vertexString;\r\n\t}\r\n\r\n\tstatic sanitizeIncludeFragment(fragmentString: string): string {\r\n\t\t// Remove #version lines\r\n\t\tconst versionLinesRegex = /^#version.*$/gm;\r\n\t\treturn fragmentString.replace(versionLinesRegex, '');\r\n\t}\r\n\t\r\n\tstatic getIncludes(input: string | undefined, workpath: string = ''): Promise<string | undefined> {\r\n\t\tif (input === undefined) {\r\n\t\t\treturn Promise.resolve(input);\r\n\t\t}\r\n\t\tconst regex = /#include\\s*['|\"](.*.glsl)['|\"]/gm;\r\n\t\tconst promises = [];\r\n\t\tlet i = 0;\r\n\t\tlet match;\r\n\t\twhile ((match = regex.exec(input)) !== null) {\r\n\t\t\tpromises.push(Promise.resolve(input.slice(i, match.index)));\r\n\t\t\ti = match.index + match[0].length;\r\n\t\t\tconst filePath = match[1];\r\n\t\t\tconst url = Common.getResource(filePath, workpath);\r\n\t\t\tconst nextWorkpath = filePath.indexOf(':/') === -1 ? Common.dirname(url) : '';\r\n\t\t\tpromises.push(Common.fetch(url).then(include => {\r\n\t\t\t\treturn Context.getIncludes(this.sanitizeIncludeFragment(include), nextWorkpath);\r\n\t\t\t}));\r\n\t\t}\r\n\t\tpromises.push(Promise.resolve(input.slice(i)));\r\n\t\treturn Promise.all(promises).then(chunks => {\r\n\t\t\treturn chunks.join('');\r\n\t\t});\r\n\t}\r\n\t\r\n\tstatic isWebGl(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\treturn context instanceof WebGLRenderingContext;\r\n\t}\r\n\r\n\tstatic isWebGl2(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\t// console.log(context);\r\n\t\t// return context !== undefined && typeof (context as any).bindBufferRange === 'function';\r\n\t\treturn (window as any).WebGL2RenderingContext && context instanceof WebGL2RenderingContext;\r\n\t}\r\n\r\n\tstatic inferVersion(vertexString?: string, fragmentString?: string): ContextVersion {\r\n\t\tconst source: string = vertexString || fragmentString;\r\n\t\tif (source) {\r\n\t\t\treturn source.indexOf('#version 300 es') === 0 ? ContextVersion.WebGl2 : ContextVersion.WebGl;\r\n\t\t} else {\r\n\t\t\treturn ContextVersion.WebGl;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic inferPrecision(fragmentString: string): ContextPrecision {\r\n\t\tconst precision: RegExpMatchArray = fragmentString.match(/precision\\s+(.+)\\s+float/);\r\n\t\tif (precision && precision.length > 1) {\r\n\t\t\tContext.precision = precision[1] as ContextPrecision;\r\n\t\t}\r\n\t\t// console.log('precision', Context.precision);\r\n\t\treturn Context.precision;\r\n\t}\r\n\r\n\tstatic versionDiffers(gl: WebGLRenderingContext | WebGL2RenderingContext, vertexString?: string, fragmentString?: string): boolean {\r\n\t\tif (gl) {\r\n\t\t\tconst currentVersion = this.isWebGl2(gl) ? ContextVersion.WebGl2 : ContextVersion.WebGl;\r\n\t\t\tconst newVersion = Context.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn newVersion !== currentVersion;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getBufferVertex(gl: WebGLRenderingContext | WebGL2RenderingContext): string {\r\n\t\treturn this.isWebGl2(gl) ? DefaultWebGL2BufferVertex : DefaultWebGLBufferVertex;\r\n\t}\r\n\r\n\tstatic getVertex(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\r\n\t\tif (vertexString) {\r\n\t\t\treturn vertexString;\r\n\t\t} else {\r\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].vertex;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getFragment(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\r\n\t\tif (fragmentString) {\r\n\t\t\treturn fragmentString;\r\n\t\t} else {\r\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].fragment;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic tryInferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, extensions: string[] = [], errorCallback: Function): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tfunction handleError(errorCode: number, html: string) {\r\n\t\t\tif (typeof errorCallback === 'function') {\r\n\t\t\t\terrorCallback(errorCode);\r\n\t\t\t} else {\r\n\t\t\t\tconst container = canvas.parentNode;\r\n\t\t\t\tif (container) {\r\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!WebGLRenderingContext) {\r\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst context: WebGLRenderingContext | WebGL2RenderingContext = Context.inferContext(vertexString, fragmentString, canvas, attributes);\r\n\t\tif (!context) {\r\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\r\n\t\t} else {\r\n\t\t\tif (!(this.isWebGl2(context)) && extensions.indexOf('OES_standard_derivatives') === -1) {\r\n\t\t\t\textensions.push('OES_standard_derivatives');\r\n\t\t\t}\r\n\t\t\tconst supportedExtensions = context.getSupportedExtensions();\r\n\t\t\textensions.forEach(key => {\r\n\t\t\t\tif (supportedExtensions.indexOf(key) !== -1) {\r\n\t\t\t\t\tcontext.getExtension(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLogger.warn(`GlslCanvas ${key} not supported`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// context.getExtension('OES_standard_derivatives');\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic tryGetContext(canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, errorCallback: Function): WebGLRenderingContext {\r\n\t\tfunction handleError(errorCode: number, html: string) {\r\n\t\t\tif (typeof errorCallback === 'function') {\r\n\t\t\t\terrorCallback(errorCode);\r\n\t\t\t} else {\r\n\t\t\t\tconst container = canvas.parentNode;\r\n\t\t\t\tif (container) {\r\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!WebGLRenderingContext) {\r\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst context: WebGLRenderingContext = Context.getContext_(canvas, attributes);\r\n\t\tif (!context) {\r\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\r\n\t\t} else {\r\n\t\t\tcontext.getExtension('OES_standard_derivatives');\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic inferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\treturn version === ContextVersion.WebGl2 ? this.getContext2_(canvas, options) : this.getContext_(canvas, options);\r\n\t}\r\n\r\n\tstatic createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, source: string, type: number, offset: number = 0): WebGLShader {\r\n\t\tconst shader = gl.createShader(type);\r\n\t\tsource = source.replace(/precision\\s+(.+)\\s+float/, `precision ${Context.precision} float`);\r\n\t\tgl.shaderSource(shader, source);\r\n\t\tgl.compileShader(shader);\r\n\t\tconst compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\t\tif (!compiled) {\r\n\t\t\t// Something went wrong during compilation; get the error\r\n\t\t\tContext.lastError = gl.getShaderInfoLog(shader);\r\n\t\t\t// console.log('lastError', Context.lastError);\r\n\t\t\tLogger.error(`*** Error compiling shader: ${Context.lastError}`);\r\n\t\t\t// main.trigger('error', {\r\n\t\t\tgl.deleteShader(shader);\r\n\t\t\tthrow ({\r\n\t\t\t\tshader: shader,\r\n\t\t\t\tsource: source,\r\n\t\t\t\ttype: type,\r\n\t\t\t\terror: Context.lastError,\r\n\t\t\t\toffset: offset\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tstatic createProgram(gl: WebGLRenderingContext | WebGL2RenderingContext, shaders: WebGLShader[], attributes?: any[], locations?: number[]): WebGLProgram {\r\n\t\tconst program = gl.createProgram();\r\n\t\tfor (let i = 0; i < shaders.length; ++i) {\r\n\t\t\tgl.attachShader(program, shaders[i]);\r\n\t\t}\r\n\t\tif (attributes && locations) {\r\n\t\t\tfor (let i = 0; i < attributes.length; ++i) {\r\n\t\t\t\tgl.bindAttribLocation(program, locations ? locations[i] : i, attributes[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgl.linkProgram(program);\r\n\t\tgl.validateProgram(program);\r\n\t\t// Check the link status\r\n\t\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\t\tif (!linked) {\r\n\t\t\t// something went wrong with the link\r\n\t\t\tContext.lastError = gl.getProgramInfoLog(program);\r\n\t\t\tLogger.error(`Error in program linking: ${Context.lastError}`);\r\n\t\t\tgl.deleteProgram(program);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tgl.useProgram(program);\r\n\t\treturn program;\r\n\t}\r\n\r\n\tstatic createVertexBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram): ContextVertexBuffers {\r\n\t\tconst vertexBuffers: ContextVertexBuffers = new ContextVertexBuffers();\r\n\t\tconst texcoordIndex: number = gl.getAttribLocation(program, 'a_texcoord');\r\n\t\tvertexBuffers.texcoord = gl.createBuffer();\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.texcoord);\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\r\n\t\tgl.enableVertexAttribArray(texcoordIndex);\r\n\t\tgl.vertexAttribPointer(texcoordIndex, 2, gl.FLOAT, false, 0, 0);\r\n\t\tconst positionIndex: number = gl.getAttribLocation(program, 'a_position');\r\n\t\tvertexBuffers.position = gl.createBuffer();\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.position);\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\r\n\t\tgl.enableVertexAttribArray(positionIndex);\r\n\t\tgl.vertexAttribPointer(positionIndex, 2, gl.FLOAT, false, 0, 0);\r\n\t\treturn vertexBuffers;\r\n\t}\r\n}\r\n","export class NumberMap<T> { [key: number]: T; };\r\nexport class StringMap<T> { [key: string]: T; };\r\n\r\nexport default class IterableStringMap<T> {\r\n\r\n\tvalues: StringMap<T> = new StringMap<T>();\r\n\r\n\thas(key: string) {\r\n\t\treturn key in this.values;\r\n\t\t// return this.values.hasOwnProperty(key);\r\n\t}\r\n\r\n\tset(key: string, item: T) {\r\n\t\tthis.values[key] = item;\r\n\t}\r\n\r\n\tget(key: string): T {\r\n\t\treturn this.values[key];\r\n\t}\r\n\r\n\tforEach(callbackfn: Function) {\r\n\t\tlet i = 0;\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tcallbackfn(this.values[key], i, this.values);\r\n\t\t\ti++;\r\n\t\t});\r\n\t}\r\n\r\n\treduce(callbackfn: Function, initialValue?: any) {\r\n\t\tlet previous = initialValue, i = 0;\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tprevious = callbackfn(previous, this.values[key], i, this.values);\r\n\t\t\ti++;\r\n\t\t});\r\n\t\treturn previous;\r\n\t}\r\n\r\n}\r\n","import { DefaultWebGL2BufferFragment, DefaultWebGLBufferFragment } from '../context/chunks';\r\nimport Context from '../context/context';\r\nimport IterableStringMap from '../core/iterable';\r\nimport FlatGeometry from '../geometry/flat-geometry';\r\nimport Geometry from '../geometry/geometry';\r\n\r\nexport enum BufferFloatType {\r\n\tFLOAT = 0,\r\n\tHALF_FLOAT,\r\n}\r\n\r\nexport class Buffer {\r\n\r\n\ttexture: WebGLTexture;\r\n\tbuffer: WebGLFramebuffer;\r\n\tBW: number;\r\n\tBH: number;\r\n\tindex: number;\r\n\r\n\tstatic type: BufferFloatType = BufferFloatType.HALF_FLOAT;\r\n\r\n\tstatic getFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number | null {\r\n\t\tlet extension: any;\r\n\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\textension = gl.getExtension('EXT_color_buffer_float');\r\n\t\t\tif (extension) {\r\n\t\t\t\treturn gl.FLOAT;\r\n\t\t\t}\r\n\t\t}\r\n\t\textension = gl.getExtension('OES_texture_float');\r\n\t\tif (extension) {\r\n\t\t\treturn gl.FLOAT;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getHalfFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number | null {\r\n\t\tlet extension: any;\r\n\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\textension = gl.getExtension('EXT_color_buffer_half_float') || gl.getExtension('EXT_color_buffer_float');\r\n\t\t\tif (extension) {\r\n\t\t\t\treturn (gl as WebGL2RenderingContext).HALF_FLOAT;\r\n\t\t\t}\r\n\t\t}\r\n\t\textension = gl.getExtension('OES_texture_half_float');\r\n\t\tif (extension) {\r\n\t\t\treturn extension.HALF_FLOAT_OES || null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getInternalFormat(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\treturn (Context.isWebGl2(gl) ? (gl as WebGL2RenderingContext).RGBA16F : gl.RGBA);\r\n\t}\r\n\r\n\tstatic getType(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\tlet type: number;\r\n\t\tif (Buffer.type === BufferFloatType.HALF_FLOAT) {\r\n\t\t\ttype = Buffer.getHalfFloatType(gl);\r\n\t\t\tif (type) {\r\n\t\t\t\treturn type;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.FLOAT;\r\n\t\t\t\treturn Buffer.getType(gl);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttype = Buffer.getFloatType(gl);\r\n\t\t\tif (type) {\r\n\t\t\t\treturn type;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.HALF_FLOAT;\r\n\t\t\t\treturn Buffer.getType(gl);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number): WebGLTexture {\r\n\t\tconst internalFormat = Buffer.getInternalFormat(gl);\r\n\t\tconst format = gl.RGBA;\r\n\t\tconst type = Buffer.getType(gl);\r\n\t\tconst texture = gl.createTexture();\r\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, BW, BH, 0, format, type, null);\r\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\tif (Buffer.type === BufferFloatType.FLOAT) {\r\n\t\t\t\tBuffer.type = BufferFloatType.HALF_FLOAT;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.FLOAT;\r\n\t\t\t}\r\n\t\t\treturn Buffer.getTexture(gl, BW, BH, index);\r\n\t\t}\r\n\t\t// console.log('getTexture', 'internalFormat', internalFormat === (gl as WebGL2RenderingContext).RGBA16F, 'format', format === gl.RGBA, 'type', type === (gl as WebGL2RenderingContext).HALF_FLOAT, 'status', status === gl.FRAMEBUFFER_COMPLETE);\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tconstructor(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number) {\r\n\t\tconst buffer = gl.createFramebuffer();\r\n\t\tconst texture = Buffer.getTexture(gl, BW, BH, index);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\tthis.texture = texture;\r\n\t\tthis.buffer = buffer;\r\n\t\tthis.BW = BW;\r\n\t\tthis.BH = BH;\r\n\t\tthis.index = index;\r\n\t}\r\n\r\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\tif (BW !== this.BW || BH !== this.BH) {\r\n\t\t\tconst buffer = this.buffer;\r\n\t\t\tconst texture = this.texture;\r\n\t\t\tconst index = this.index;\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\r\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\t\tconst minW = Math.min(BW, this.BW);\r\n\t\t\tconst minH = Math.min(BH, this.BH);\r\n\t\t\tlet pixels: Float32Array;\r\n\t\t\tlet type = Buffer.getType(gl);\r\n\t\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\tpixels = new Float32Array(minW * minH * 4);\r\n\t\t\t\tgl.readPixels(0, 0, minW, minH, gl.RGBA, type, pixels);\r\n\t\t\t}\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\tconst newIndex = index + 1; // temporary index\r\n\t\t\tconst newTexture = Buffer.getTexture(gl, BW, BH, newIndex);\r\n\t\t\ttype = Buffer.getType(gl);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\t\tif (pixels) {\r\n\t\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, type, pixels);\r\n\t\t\t}\r\n\t\t\tconst newBuffer = gl.createFramebuffer();\r\n\t\t\t/*\r\n\t\t\tif (!newBuffer) {\r\n\t\t\t\tLogger.error('Failed to create the frame buffer object');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\tgl.deleteTexture(texture);\r\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\r\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, newTexture);\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.texture = newTexture;\r\n\t\t\tthis.buffer = newBuffer;\r\n\t\t\tthis.BW = BW;\r\n\t\t\tthis.BH = BH;\r\n\t\t\t// console.log('resize', newBuffer);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class IOBuffer {\r\n\r\n\tprogram: WebGLProgram;\r\n\tgeometry: Geometry;\r\n\tinput: Buffer;\r\n\toutput: Buffer;\r\n\tindex: number;\r\n\tkey: string;\r\n\tvertexString: string;\r\n\tfragmentString: string;\r\n\tBW: number;\r\n\tBH: number;\r\n\tisValid: boolean = false;\r\n\r\n\tconstructor(index: number, key: string, vertexString: string, fragmentString: string) {\r\n\t\tthis.index = index;\r\n\t\tthis.key = key;\r\n\t\tthis.vertexString = vertexString;\r\n\t\tthis.fragmentString = fragmentString;\r\n\t\tthis.geometry = new FlatGeometry();\r\n\t}\r\n\r\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tconst vertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\r\n\t\tlet fragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER, 1);\r\n\t\tif (!fragmentShader) {\r\n\t\t\tfragmentShader = Context.createShader(gl, Context.isWebGl2(gl) ? DefaultWebGL2BufferFragment : DefaultWebGLBufferFragment, gl.FRAGMENT_SHADER);\r\n\t\t\tthis.isValid = false;\r\n\t\t} else {\r\n\t\t\tthis.isValid = true;\r\n\t\t}\r\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]);\r\n\t\tif (!program) {\r\n\t\t\tthis.isValid = false;\r\n\t\t\tgl.deleteShader(vertexShader);\r\n\t\t\tgl.deleteShader(fragmentShader);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.geometry.create(gl, program);\r\n\t\tgl.deleteShader(vertexShader);\r\n\t\tgl.deleteShader(fragmentShader);\r\n\t\tconst input = new Buffer(gl, BW, BH, this.index + 0);\r\n\t\tconst output = new Buffer(gl, BW, BH, this.index + 2);\r\n\t\tthis.program = program;\r\n\t\tthis.input = input;\r\n\t\tthis.output = output;\r\n\t\t// console.log(geometry.position.length / 3, geometry.size);\r\n\t\t// console.log(gl.getProgramInfoLog(program));\r\n\t\t// Context.lastError = gl.getProgramInfoLog(program);\r\n\t\t// Logger.warn(`Error in program linking: ${Context.lastError}`);\r\n\t}\r\n\r\n\trender(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tgl.useProgram(this.program);\r\n\t\t// gl.activeTexture(gl.TEXTURE0);\r\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.input.texture);\r\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.output.buffer);\r\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.output.texture);\r\n\t\t// console.log(this.output.texture);\r\n\t\t// console.log('binding', gl.getParameter(gl.FRAMEBUFFER_BINDING));\r\n\t\t// gl.enable(gl.DEPTH_TEST); // Enable depth testing\r\n\t\t// gl.depthFunc(gl.LEQUAL); // Near things obscure far things\r\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\r\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t// Clear the canvas before we start drawing on it.\r\n\t\t\tgl.clearColor(0, 0, 0, 1);  // black\r\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\t}\r\n\t\t// this.geometry.createAttributes_(gl, this.program);\r\n\t\t// this.geometry.bindAttributes_(gl, this.program);\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t// console.log(this.geometry.size);\r\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t// console.log(BW, BH);\r\n\t\t// console.log(gl.getProgramInfoLog(this.program));\r\n\t\t// swap\r\n\t\tconst input = this.input;\r\n\t\t// const output = this.output;\r\n\t\tthis.input = this.output;\r\n\t\tthis.output = input;\r\n\t\t// console.log('swap');\r\n\t}\r\n\r\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tgl.useProgram(this.program);\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tthis.input.resize(gl, BW, BH);\r\n\t\tthis.output.resize(gl, BW, BH);\r\n\t}\r\n\r\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\r\n\t\tgl.deleteProgram(this.program);\r\n\t\tthis.program = null;\r\n\t\tthis.input = null;\r\n\t\tthis.output = null;\r\n\t}\r\n}\r\n\r\nexport default class Buffers extends IterableStringMap<IOBuffer> {\r\n\r\n\tget count(): number {\r\n\t\treturn Object.keys(this.values).length * 4;\r\n\t}\r\n\r\n\tstatic getBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string, vertexString: string): Buffers {\r\n\t\tconst buffers: Buffers = new Buffers();\r\n\t\tlet count = 0;\r\n\t\tif (fragmentString) {\r\n\t\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\r\n\t\t\t}\r\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm;\r\n\t\t\tlet matches;\r\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\r\n\t\t\t\tconst i = matches[3] || matches[4];\r\n\t\t\t\tconst key = 'u_buffer' + i;\r\n\t\t\t\tconst bufferFragmentString = Context.isWebGl2(gl) ? `#version 300 es\r\n#define BUFFER_${i}\r\n${fragmentString}` : `#define BUFFER_${i}\r\n${fragmentString}`;\r\n\t\t\t\tconst buffer = new IOBuffer(count, key, vertexString, bufferFragmentString);\r\n\t\t\t\tbuffer.create(gl, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\t\t\t\tif (buffer.program) {\r\n\t\t\t\t\tbuffers.set(key, buffer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow (`buffer error ${key}`);\r\n\t\t\t\t}\r\n\t\t\t\tcount += 4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buffers;\r\n\t}\r\n}\r\n","export interface IGeometry {\r\n\tpositions: number[];\r\n\tcolors: number[];\r\n\tnormals: number[];\r\n\ttexcoords: number[];\r\n}\r\n\r\nexport default class Geometry implements IGeometry {\r\n\r\n\tpositions: number[];\r\n\tcolors: number[];\r\n\tnormals: number[];\r\n\ttexcoords: number[];\r\n\r\n\tpositionBuffer: WebGLBuffer;\r\n\tcolorBuffer: WebGLBuffer;\r\n\tnormalBuffer: WebGLBuffer;\r\n\ttexcoordBuffer: WebGLBuffer;\r\n\r\n\tpositionLocation: number;\r\n\tcolorLocation: number;\r\n\tnormalLocation: number;\r\n\ttexcoordLocation: number;\r\n\r\n\tsize: number;\r\n\r\n\tconstructor(options?: IGeometry) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t\tif (this.positions) {\r\n\t\t\t\tthis.size = this.positions.length / 3;\r\n\t\t\t}\r\n\t\t\t// this.positions = Geometry.fromIndices(options.indices, options.positions, 3);\r\n\t\t\t// this.normals = Geometry.fromIndices(options.indices, options.normals, 3);\r\n\t\t\t// this.texcoords = Geometry.fromIndices(options.indices, options.texcoords, 2);\r\n\t\t\t// this.colors = Geometry.fromIndices(options.indices, options.colors, 4);\r\n\t\t}\r\n\t}\r\n\r\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tthis.createData_();\r\n\t\tthis.createAttributes_(gl, program);\r\n\t}\r\n\r\n\tcreateBufferData_(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, array: BufferSource) {\r\n\t\tconst buffer = gl.createBuffer();\r\n\t\tgl.bindBuffer(type, buffer);\r\n\t\tgl.bufferData(type, array, gl.STATIC_DRAW);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tcreateAttribLocation_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram, name: string, size: number, type: number) {\r\n\t\tconst location: number = gl.getAttribLocation(program, name);\r\n\t\tgl.enableVertexAttribArray(location);\r\n\t\tgl.vertexAttribPointer(location, size, type, false, 0, 0);\r\n\t\treturn location;\r\n\t}\r\n\r\n\tcreateAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tif (this.positions) {\r\n\t\t\tthis.positionBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions));\r\n\t\t\tthis.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\tthis.texcoordBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.texcoords));\r\n\t\t\tthis.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\tthis.normalBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.normals));\r\n\t\t\tthis.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colorBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.colors));\r\n\t\t\tthis.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t}\r\n\t\t// console.log('positionLocation', this.positionLocation);\r\n\t\t// console.log('texcoordLocation', this.texcoordLocation);\r\n\t\t// console.log('normalLocation', this.normalLocation);\r\n\t\t// console.log('colorLocation', this.colorLocation);\r\n\t}\r\n\r\n\tattachAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tlet attribLocation: number;\r\n\t\tif (this.positions) {\r\n\t\t\t// this.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_position');\r\n\t\t\tgl.enableVertexAttribArray(attribLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n\t\t\tgl.vertexAttribPointer(attribLocation, this.positions.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t\t// console.log('positionLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\t// this.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_texcoord');\r\n\t\t\tgl.enableVertexAttribArray(this.texcoordLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.texcoordLocation, this.texcoords.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t\t// console.log('texcoordLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\t// this.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_normal');\r\n\t\t\tgl.enableVertexAttribArray(this.normalLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.normalLocation, this.normals.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t\t// console.log('normalLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\t// this.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_color');\r\n\t\t\tgl.enableVertexAttribArray(this.colorLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.colorLocation, this.colors.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t\t// console.log('colorLocation', attribLocation);\r\n\t\t}\r\n\t}\r\n\r\n\tbindAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tif (this.positions) {\r\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createData_() {\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.texcoords = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.size = 0;\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\tstatic fromIndices(indices: number[], array: number[], size: number): number[] {\r\n\t\tconst buffer: number[] = [];\r\n\t\tindices.forEach(i => {\r\n\t\t\tbuffer.push.apply(buffer, array.slice(i * size, i * size + size));\r\n\t\t});\r\n\t\treturn buffer;\r\n\t}\r\n\r\n}\r\n","import Geometry from './geometry';\r\n\r\nexport default class FlatGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tthis.size = 6;\r\n\t\tthis.positions = [\r\n\t\t\t-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0,\r\n\t\t\t-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\r\n\t\t];\r\n\t\tthis.texcoords = [\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.normals = [\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.colors = [\r\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t];\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n}\r\n","export default class Vector2 {\r\n\r\n\tisVector2: boolean = true;\r\n\tx: number;\r\n\ty: number;\r\n\r\n\tconstructor(x: number = 0, y: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tcopy(v: Vector2): Vector2 {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tnormalize(): Vector2 {\r\n\t\treturn this.divideScalar(this.length() || 1);\r\n\t}\r\n\r\n\tdivideScalar(scalar: number): Vector2 {\r\n\t\treturn this.multiplyScalar(1 / scalar);\r\n\t}\r\n\r\n\tmultiplyScalar(scalar: number): Vector2 {\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubVectors(a: Vector2, b: Vector2): Vector2 {\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddVectors(a: Vector2, b: Vector2): Vector2 {\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n\r\n","export default class Vector3 {\r\n\r\n\tisVector3: boolean = true;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\r\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\r\n\tcopy(v: Vector3): Vector3 {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t}\r\n\r\n\tnormalize(): Vector3 {\r\n\t\treturn this.divideScalar(this.length() || 1);\r\n\t}\r\n\r\n\r\n\tdivideScalar(scalar: number): Vector3 {\r\n\t\treturn this.multiplyScalar(1 / scalar);\r\n\t}\r\n\r\n\tmultiplyScalar(scalar: number): Vector3 {\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcrossVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/*\r\n\tset(x, y, z) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetScalar(scalar) {\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetX(x) {\r\n\t\tthis.x = x;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetY(y) {\r\n\t\tthis.y = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZ(z) {\r\n\t\tthis.z = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetComponent(index, value) {\r\n\t\tswitch (index) {\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetComponent(index) {\r\n\t\tswitch (index) {\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Vector3(this.x, this.y, this.z);\r\n\t}\r\n\r\n\tadd(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.addVectors(v, w);\r\n\t\t}\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(s) {\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScaledVector(v, s) {\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.subVectors(v, w);\r\n\t\t}\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubScalar(s) {\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\tmultiply(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.multiplyVectors(v, w);\r\n\t\t}\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultiplyVectors(a:Vector3, b:Vector3):Vector3 {\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyMatrix3(m) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\r\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\r\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyNormalMatrix(m) {\r\n\t\treturn this.applyMatrix3(m).normalize();\r\n\t}\r\n\r\n\tapplyMatrix4(m) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyQuaternion(q) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\t\t// calculate quat * vector\r\n\t\tvar ix = qw * x + qy * z - qz * y;\r\n\t\tvar iy = qw * y + qz * x - qx * z;\r\n\t\tvar iz = qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\t// calculate result * inverse quat\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tproject(camera) {\r\n\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\r\n\t}\r\n\r\n\tunproject(camera) {\r\n\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\r\n\t}\r\n\r\n\ttransformDirection(m) {\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\r\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\r\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdivide(v) {\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(v) {\r\n\t\tthis.x = Math.min(this.x, v.x);\r\n\t\tthis.y = Math.min(this.y, v.y);\r\n\t\tthis.z = Math.min(this.z, v.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(v) {\r\n\t\tthis.x = Math.max(this.x, v.x);\r\n\t\tthis.y = Math.max(this.y, v.y);\r\n\t\tthis.z = Math.max(this.z, v.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min, max) {\r\n\t\t// assumes min < max, componentwise\r\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclampScalar(minVal, maxVal) {\r\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclampLength(min, max) {\r\n\t\tvar length = this.length();\r\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t}\r\n\r\n\tfloor() {\r\n\t\tthis.x = Math.floor(this.x);\r\n\t\tthis.y = Math.floor(this.y);\r\n\t\tthis.z = Math.floor(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tceil() {\r\n\t\tthis.x = Math.ceil(this.x);\r\n\t\tthis.y = Math.ceil(this.y);\r\n\t\tthis.z = Math.ceil(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tround() {\r\n\t\tthis.x = Math.round(this.x);\r\n\t\tthis.y = Math.round(this.y);\r\n\t\tthis.z = Math.round(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\troundToZero() {\r\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\tthis.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate() {\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(v) {\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\tlengthSq() {\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n\t}\r\n\r\n\tsetLength(length) {\r\n\t\treturn this.normalize().multiplyScalar(length);\r\n\t}\r\n\r\n\tlerp(v, alpha) {\r\n\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerpVectors(v1, v2, alpha) {\r\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\r\n\t}\r\n\r\n\tcross(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.crossVectors(v, w);\r\n\t\t}\r\n\t\treturn this.crossVectors(this, v);\r\n\t}\r\n\r\n\tprojectOnVector(v) {\r\n\t\tvar denominator = v.lengthSq();\r\n\t\tif (denominator === 0) return this.set(0, 0, 0);\r\n\t\tvar scalar = v.dot(this) / denominator;\r\n\t\treturn this.copy(v).multiplyScalar(scalar);\r\n\t}\r\n\r\n\tprojectOnPlane(planeNormal) {\r\n\t\tconst v = new Vector3();\r\n\t\tv.copy(this).projectOnVector(planeNormal);\r\n\t\treturn this.sub(v);\r\n\t}\r\n\r\n\treflect(normal) {\r\n\t\tconst v = new Vector3();\r\n\t\treturn this.sub(v.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n\t}\r\n\r\n\tangleTo(v) {\r\n\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\r\n\t\tif (denominator === 0) return Math.PI / 2;\r\n\t\tvar theta = this.dot(v) / denominator;\r\n\t\t// clamp, to handle numerical problems\r\n\t\treturn Math.acos(MathUtils.clamp(theta, - 1, 1));\r\n\t}\r\n\r\n\tdistanceTo(v) {\r\n\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t}\r\n\r\n\tdistanceToSquared(v) {\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tmanhattanDistanceTo(v) {\r\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\r\n\t}\r\n\r\n\tsetFromSpherical(s) {\r\n\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\r\n\t}\r\n\r\n\tsetFromSphericalCoords(radius, phi, theta) {\r\n\t\tvar sinPhiRadius = Math.sin(phi) * radius;\r\n\t\tthis.x = sinPhiRadius * Math.sin(theta);\r\n\t\tthis.y = Math.cos(phi) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos(theta);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromCylindrical(c) {\r\n\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\r\n\t}\r\n\r\n\tsetFromCylindricalCoords(radius, theta, y) {\r\n\t\tthis.x = radius * Math.sin(theta);\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos(theta);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixPosition(m) {\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[12];\r\n\t\tthis.y = e[13];\r\n\t\tthis.z = e[14];\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixScale(m) {\r\n\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\r\n\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\r\n\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixColumn(m, index) {\r\n\t\treturn this.fromArray(m.elements, index * 4);\r\n\t}\r\n\r\n\tsetFromMatrix3Column(m, index) {\r\n\t\treturn this.fromArray(m.elements, index * 3);\r\n\t}\r\n\r\n\tequals(v) {\r\n\t\treturn ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\r\n\t}\r\n\r\n\tfromArray(array, offset) {\r\n\t\tif (offset === undefined) offset = 0;\r\n\t\tthis.x = array[offset];\r\n\t\tthis.y = array[offset + 1];\r\n\t\tthis.z = array[offset + 2];\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttoArray(array, offset) {\r\n\t\tif (array === undefined) array = [];\r\n\t\tif (offset === undefined) offset = 0;\r\n\t\tarray[offset] = this.x;\r\n\t\tarray[offset + 1] = this.y;\r\n\t\tarray[offset + 2] = this.z;\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfromBufferAttribute(attribute, index) {\r\n\t\tthis.x = attribute.getX(index);\r\n\t\tthis.y = attribute.getY(index);\r\n\t\tthis.z = attribute.getZ(index);\r\n\t\treturn this;\r\n\t}\r\n\r\n\trandom() {\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\treturn this;\r\n\t}\r\n\t*/\r\n\r\n}\r\n\r\n","\r\nimport Vector2 from '../math/vector2';\r\nimport Vector3 from '../math/vector3';\r\n\r\nconst PI = Math.PI;\r\nconst RAD = PI / 180;\r\n\r\nexport default class OrbitCamera extends Vector3 {\r\n\r\n\ttheta: number;\r\n\tphi: number;\r\n\tradius: number;\r\n\tposition: Vector3 = new Vector3();\r\n\tvalue: Float32Array = new Float32Array([0, 0, 0]);\r\n\tmouse: Vector2 = null;\r\n\tdirty: boolean = false;\r\n\r\n\tconstructor(theta?: number, phi?: number, radius?: number) {\r\n\t\tsuper();\r\n\t\tthis.theta = (theta || 0) * RAD;\r\n\t\tthis.phi = (phi || 0) * RAD;\r\n\t\tthis.radius = radius || 6.0;\r\n\t\t// this.update();\r\n\t}\r\n\r\n\tdown(x: number, y: number) {\r\n\t\tthis.mouse = new Vector2(x, y);\r\n\t}\r\n\r\n\tmove(x: number, y: number) {\r\n\t\tconst mouse = this.mouse;\r\n\t\tif (mouse && (mouse.x !== x || mouse.y !== y)) {\r\n\t\t\tconst theta = (x - mouse.x) * 180 * RAD;\r\n\t\t\tconst phi = (y - mouse.y) * 180 * RAD;\r\n\t\t\tmouse.x = x;\r\n\t\t\tmouse.y = y;\r\n\t\t\tthis.theta += theta;\r\n\t\t\tthis.phi = Math.max(-60 * RAD, Math.min(60 * RAD, this.phi + phi));\r\n\t\t\t// this.update();\r\n\t\t}\r\n\t}\r\n\r\n\tup() {\r\n\t\tthis.mouse = null;\r\n\t}\r\n\r\n\twheel(d: number) {\r\n\t\tthis.radius = Math.max(4.0, Math.min(10.0, this.radius + d * 0.02));\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3) {\r\n\t\tconst radius = vector.length();\r\n\t\tconst theta = Math.acos(vector.y / radius); //theta\r\n\t\tconst phi = Math.atan(vector.x / vector.z); //phi\r\n\t\treturn new OrbitCamera(theta, phi, radius);\r\n\t}\r\n\r\n\tstatic toArray(camera: OrbitCamera): number[] {\r\n        const spr = Math.sin(camera.phi) * camera.radius;\r\n        const x = spr * Math.sin(camera.theta);\r\n        const y = Math.cos(camera.phi) * camera.radius;\r\n        const z = spr * Math.cos(camera.theta);\r\n        return [x, y, z];\r\n    }\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","// import 'promise-polyfill';\r\nimport Common from '../core/common';\r\nimport IterableStringMap from '../core/iterable';\r\nimport Subscriber from '../core/subscriber';\r\nimport Logger from '../logger/logger';\r\n\r\nexport const TextureImageExtensions = ['jpg', 'jpeg', 'png'];\r\nexport const TextureVideoExtensions = ['ogv', 'webm', 'mp4'];\r\nexport const TextureExtensions = TextureImageExtensions.concat(TextureVideoExtensions);\r\n\r\nexport enum TextureSourceType {\r\n\tData = 0,\r\n\tElement = 1,\r\n\tUrl = 2,\r\n}\r\n\r\nexport enum TextureFilteringType {\r\n\tMipMap = 'mipmap',\r\n\tLinear = 'linear',\r\n\tNearest = 'nearest',\r\n}\r\n\r\nexport interface ITextureData {\r\n\tdata: Uint8Array;\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface ITextureOptions {\r\n\turl?: string;\r\n\telement?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element;\r\n\tdata?: Uint8Array;\r\n\twidth?: number;\r\n\theight?: number;\r\n\tfiltering?: TextureFilteringType;\r\n\trepeat?: boolean;\r\n\tUNPACK_FLIP_Y_WEBGL?: boolean;\r\n\tUNPACK_PREMULTIPLY_ALPHA_WEBGL?: number;\r\n\tTEXTURE_WRAP_S?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\r\n\tTEXTURE_WRAP_T?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\r\n}\r\n\r\nexport interface ITextureInput {\r\n\tkey: string;\r\n\turl: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData;\r\n\toptions?: ITextureOptions;\r\n}\r\n\r\nexport function isTextureData(object: any): object is ITextureData {\r\n\treturn 'data' in object && 'width' in object && 'height' in object;\r\n}\r\n\r\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\r\nexport class Texture extends Subscriber {\r\n\r\n\tkey: string;\r\n\tindex: number;\r\n\toptions: ITextureOptions;\r\n\tworkpath: string;\r\n\twidth: number;\r\n\theight: number;\r\n\r\n\ttexture: WebGLTexture;\r\n\tsource: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | Uint8Array;\r\n\tsourceType: TextureSourceType;\r\n\tfiltering: TextureFilteringType;\r\n\turl: string;\r\n\tvalid: boolean = false;\r\n\tdirty: boolean = false;\r\n\tanimated: boolean = false;\r\n\tpowerOf2: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\tkey: string,\r\n\t\tindex: number,\r\n\t\toptions: ITextureOptions = { filtering: TextureFilteringType.Linear },\r\n\t\tworkpath?: string,\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.key = key;\r\n\t\tthis.index = index;\r\n\t\tthis.options = options;\r\n\t\tthis.workpath = workpath;\r\n\t\tthis.create(gl);\r\n\t}\r\n\r\n\tstatic isPowerOf2(value: number): boolean {\r\n\t\treturn (value & (value - 1)) === 0;\r\n\t}\r\n\r\n\tstatic isSafari(): boolean {\r\n\t\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\tstatic isTextureUrl(text: string): boolean {\r\n\t\treturn text && (/\\.(jpg|jpeg|png|ogv|webm|mp4)$/i).test(text.split('?')[0]);\r\n\t}\r\n\r\n\tstatic isTexture(\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t): boolean {\r\n\t\tconst options = Texture.getTextureOptions(urlElementOrData);\r\n\t\treturn options !== undefined;\r\n\t}\r\n\r\n\tstatic getMaxTextureSize(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\t};\r\n\r\n\tstatic getTextureOptions(\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t): ITextureOptions {\r\n\t\tif (typeof urlElementOrData === 'string' && urlElementOrData !== '') {\r\n\t\t\tif (Texture.isTextureUrl(urlElementOrData)) {\r\n\t\t\t\toptions.url = urlElementOrData;\r\n\t\t\t\tif (urlElementOrData.indexOf('?') !== -1) {\r\n\t\t\t\t\toptions = urlElementOrData.split('?')[1].split('&').reduce(function (prev: ITextureOptions, curr) {\r\n\t\t\t\t\t\tconst params = curr.split('=');\r\n\t\t\t\t\t\tconst key = decodeURIComponent(params[0]);\r\n\t\t\t\t\t\tconst value = decodeURIComponent(params[1]);\r\n\t\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\t\tcase 'filtering':\r\n\t\t\t\t\t\t\t\tprev[key] = value as TextureFilteringType;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'repeat':\r\n\t\t\t\t\t\t\tcase 'UNPACK_FLIP_Y_WEBGL':\r\n\t\t\t\t\t\t\t\tprev[key] = Boolean(value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'UNPACK_PREMULTIPLY_ALPHA_WEBGL':\r\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_S':\r\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_T':\r\n\t\t\t\t\t\t\t\tprev[key] = Number(value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t}, options);\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t}\r\n\t\t\tif (document) {\r\n\t\t\t\turlElementOrData = document.querySelector(urlElementOrData);\r\n\t\t\t\t// Logger.log(urlElementOrData);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (urlElementOrData instanceof HTMLCanvasElement || urlElementOrData instanceof HTMLImageElement || urlElementOrData instanceof HTMLVideoElement) {\r\n\t\t\toptions.element = urlElementOrData;\r\n\t\t\treturn options;\r\n\t\t} else if (isTextureData(urlElementOrData)) {\r\n\t\t\toptions.data = urlElementOrData.data;\r\n\t\t\toptions.width = urlElementOrData.width;\r\n\t\t\toptions.height = urlElementOrData.height;\r\n\t\t\treturn options;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tcreate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext\r\n\t): void {\r\n\t\tthis.texture = gl.createTexture();\r\n\t\tif (this.texture) {\r\n\t\t\tthis.valid = true;\r\n\t\t}\r\n\t\t// Default to a 1-pixel black texture so we can safely render while we wait for an image to load\r\n\t\t// See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\r\n\t\t// [255, 255, 255, 255]\r\n\t\tthis.setData(gl, 1, 1, new Uint8Array([0, 0, 0, 0]), this.options);\r\n\t\t// this.bindTexture();\r\n\t\t// this.load(options);\r\n\t}\r\n\r\n\tload(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tthis.options = options;\r\n\t\tif (typeof options.url === 'string') {\r\n\t\t\tif (this.url === undefined || options.url !== this.url) {\r\n\t\t\t\treturn this.setUrl(gl, options.url, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.resolve(this);\r\n\t\t\t}\r\n\t\t} else if (options.element) {\r\n\t\t\treturn this.setElement(gl, options.element, options);\r\n\t\t} else if (options.data && options.width && options.height) {\r\n\t\t\treturn this.setData(gl, options.width, options.height, options.data, options);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(this);\r\n\t\t}\r\n\t}\r\n\r\n\tsetUrl(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\turl: string,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn Promise.reject(this);\r\n\t\t}\r\n\t\tthis.url = url; // save URL reference (will be overwritten when element is loaded below)\r\n\t\tthis.source = url;\r\n\t\tthis.sourceType = TextureSourceType.Url;\r\n\t\tthis.options = Object.assign(this.options, options);\r\n\t\tconst ext = url.split('?')[0].split('.').pop().toLowerCase();\r\n\t\tconst isVideo = TextureVideoExtensions.indexOf(ext) !== -1;\r\n\t\tconst src = Common.getResource(url, this.workpath);\r\n\t\tlet element: HTMLVideoElement | HTMLImageElement;\r\n\t\tlet promise: Promise<Texture>;\r\n\t\tif (isVideo) {\r\n\t\t\tLogger.log('GlslCanvas.setUrl video', src);\r\n\t\t\telement = document.createElement('video'); // new HTMLVideoElement();\r\n\t\t\telement.setAttribute('preload', 'auto');\r\n\t\t\t// element.setAttribute('autoplay', 'true');\r\n\t\t\telement.setAttribute('loop', 'true');\r\n\t\t\telement.setAttribute('muted', 'true');\r\n\t\t\telement.setAttribute('playsinline', 'true');\r\n\t\t\t// element.autoplay = true;\r\n\t\t\telement.loop = true;\r\n\t\t\telement.muted = true;\r\n\t\t\t/*\r\n\t\t\tif (!(Texture.isSafari() && /(?<!http|https):\\//.test(url))) {\r\n\t\t\t\telement.crossOrigin = 'anonymous';\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tpromise = this.setElement(gl, element, options);\r\n\t\t\telement.src = src;\r\n\t\t\telement.addEventListener('canplay', () => {\r\n\t\t\t\t(element as HTMLVideoElement).play();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tLogger.log('GlslCanvas.setUrl image', src);\r\n\t\t\telement = document.createElement('img'); // new HTMLImageElement();\r\n\t\t\tpromise = this.setElement(gl, element, options);\r\n\t\t\tif (!(Texture.isSafari() && url.slice(0, 5) === 'data:')) {\r\n\t\t\t\telement.crossOrigin = 'anonymous';\r\n\t\t\t}\r\n\t\t\telement.src = src;\r\n\t\t}\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tsetElement(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\telement: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\toptions = this.options = Object.assign(this.options, options);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst originalElement = element;\r\n\t\t\t// a string element is interpeted as a CSS selector\r\n\t\t\tif (typeof element === 'string') {\r\n\t\t\t\telement = document.querySelector(element);\r\n\t\t\t}\r\n\t\t\tif (element instanceof HTMLCanvasElement ||\r\n\t\t\t\telement instanceof HTMLImageElement ||\r\n\t\t\t\telement instanceof HTMLVideoElement) {\r\n\t\t\t\tthis.source = element;\r\n\t\t\t\tthis.sourceType = TextureSourceType.Element;\r\n\t\t\t\tif (element instanceof HTMLVideoElement) {\r\n\t\t\t\t\tconst video = element as HTMLVideoElement;\r\n\t\t\t\t\tvideo.addEventListener('loadeddata', (event) => {\r\n\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\t\tresolve(this);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvideo.addEventListener('error', (error) => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvideo.load();\r\n\t\t\t\t} else if (element instanceof HTMLImageElement) {\r\n\t\t\t\t\telement.addEventListener('load', () => {\r\n\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\t\tresolve(this);\r\n\t\t\t\t\t});\r\n\t\t\t\t\telement.addEventListener('error', (error) => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\tresolve(this);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet message = `the 'element' parameter (\\`element: ${JSON.stringify(originalElement)}\\`) must be a CSS selector string, or a <canvas>, <image> or <video> object`;\r\n\t\t\t\tLogger.log(`Texture '${this.key}': ${message}`, options);\r\n\t\t\t\treject(message);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetData(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tdata: Uint8Array,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.options = Object.assign(this.options, options);\r\n\t\tthis.source = data;\r\n\t\tthis.sourceType = TextureSourceType.Data;\r\n\t\tthis.update(gl, options);\r\n\t\tthis.setFiltering(gl, options);\r\n\t\treturn Promise.resolve(this);\r\n\t}\r\n\r\n\t// Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\r\n\tupdate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions\r\n\t): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgl.activeTexture(gl.TEXTURE0 + this.index);\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? 0 : 1));\r\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || 0);\r\n\t\tif (this.sourceType === TextureSourceType.Element) {\r\n\t\t\tif (this.source instanceof HTMLImageElement && this.source.naturalWidth && this.source.naturalHeight) {\r\n\t\t\t\tthis.width = this.source.naturalWidth;\r\n\t\t\t\tthis.height = this.source.naturalHeight;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t} else if (this.source instanceof HTMLVideoElement && this.source.videoWidth && this.source.videoHeight) {\r\n\t\t\t\tthis.width = this.source.videoWidth;\r\n\t\t\t\tthis.height = this.source.videoHeight;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t} else if (this.source instanceof HTMLCanvasElement) {\r\n\t\t\t\tthis.width = this.source.width;\r\n\t\t\t\tthis.height = this.source.height;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t}\r\n\t\t} else if (this.sourceType === TextureSourceType.Data) {\r\n\t\t\tconst imageBuffer: ArrayBufferView = this.source as ArrayBufferView;\r\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageBuffer);\r\n\t\t}\r\n\t\tthis.trigger('loaded', this);\r\n\t}\r\n\r\n\ttryUpdate(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\tlet dirty = false;\r\n\t\tif (this.animated) {\r\n\t\t\tdirty = true;\r\n\t\t\tthis.update(gl, this.options);\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\r\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgl.deleteTexture(this.texture);\r\n\t\tthis.texture = null;\r\n\t\tdelete this.source;\r\n\t\tthis.source = null;\r\n\t\tthis.valid = false;\r\n\t}\r\n\r\n\tsetFiltering(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions\r\n\t): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst powerOf2 = Texture.isPowerOf2(this.width) && Texture.isPowerOf2(this.height);\r\n\t\tlet filtering = options.filtering || TextureFilteringType.MipMap;\r\n\t\tlet wrapS = options.TEXTURE_WRAP_S || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\r\n\t\tlet wrapT = options.TEXTURE_WRAP_T || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\r\n\t\tif (!powerOf2) {\r\n\t\t\tfiltering = filtering === TextureFilteringType.MipMap ? TextureFilteringType.Linear : filtering;\r\n\t\t\twrapS = wrapT = gl.CLAMP_TO_EDGE;\r\n\t\t\tif (options.repeat || options.TEXTURE_WRAP_S || options.TEXTURE_WRAP_T) {\r\n\t\t\t\tLogger.warn(`GlslCanvas: cannot repeat texture ${options.url} cause is not power of 2.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.powerOf2 = powerOf2;\r\n\t\tthis.filtering = filtering;\r\n\t\t// this.bindTexture();\r\n\t\t// WebGL has strict requirements on non-power-of-2 textures:\r\n\t\t// No mipmaps and must clamp to edge\r\n\t\t// For power-of-2 textures, the following presets are available:\r\n\t\t// mipmap: linear blend from nearest mip\r\n\t\t// linear: linear blend from original image (no mips)\r\n\t\t// nearest: nearest pixel from original image (no mips, 'blocky' look)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n\t\tif (this.filtering === TextureFilteringType.MipMap) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\r\n\t\t} else if (this.filtering === TextureFilteringType.Nearest) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t} else if (this.filtering === TextureFilteringType.Linear) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class Textures extends IterableStringMap<Texture> {\r\n\r\n\tcount: number = 0;\r\n\tdirty: boolean = false;\r\n\tanimated: boolean = false;\r\n\r\n\tclean() {\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tthis.values[key].dirty = false;\r\n\t\t});\r\n\t\tthis.dirty = false;\r\n\t}\r\n\r\n\tcreateOrUpdate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\tindex: number = 0,\r\n\t\toptions: ITextureOptions = {},\r\n\t\tworkpath: string,\r\n\t): Promise<Texture> {\r\n\t\tlet texture;\r\n\t\tconst textureOptions = Texture.getTextureOptions(urlElementOrData, options);\r\n\t\ttexture = this.get(key);\r\n\t\tif (!texture) {\r\n\t\t\ttexture = new Texture(gl, key, index + this.count, textureOptions, workpath);\r\n\t\t\tthis.count++;\r\n\t\t\tthis.set(key, texture);\r\n\t\t}\r\n\t\tif (textureOptions !== undefined) {\r\n\t\t\treturn texture.load(gl, textureOptions).then(\r\n\t\t\t\t(texture) => {\r\n\t\t\t\t\tif (texture.source instanceof HTMLVideoElement) {\r\n\t\t\t\t\t\tconst video = texture.source as HTMLVideoElement;\r\n\t\t\t\t\t\t// Logger.log('video', video);\r\n\t\t\t\t\t\tvideo.addEventListener('play', () => {\r\n\t\t\t\t\t\t\t// Logger.log('play', texture.key);\r\n\t\t\t\t\t\t\ttexture.animated = true;\r\n\t\t\t\t\t\t\tthis.animated = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvideo.addEventListener('pause', () => {\r\n\t\t\t\t\t\t\t// Logger.log('pause', texture.key);\r\n\t\t\t\t\t\t\ttexture.animated = false;\r\n\t\t\t\t\t\t\tthis.animated = this.reduce((flag: boolean, texture: Texture) => {\r\n\t\t\t\t\t\t\t\treturn flag || texture.animated;\r\n\t\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvideo.addEventListener('seeked', () => {\r\n\t\t\t\t\t\t\t// Logger.log('seeked');\r\n\t\t\t\t\t\t\ttexture.update(gl, texture.options);\r\n\t\t\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// Logger.log('video');\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\tvideo.addEventListener('canplaythrough', () => {\r\n\t\t\t\t\t\t\t// !!!\r\n\t\t\t\t\t\t\tthis.intervalID = setInterval(() => {\r\n\t\t\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\t\t}, 15);\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\r\n\t\t\t\t\t\t\tvideo.currentTime = 0;\r\n\t\t\t\t\t\t\tvideo.play();\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn texture;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve(texture);\r\n\t\t}\r\n\t}\r\n}\r\n","export default class CanvasTimer {\r\n\r\n\tstart: number;\r\n\tprevious: number;\r\n\tdelay: number = 0.0;\r\n\tcurrent: number = 0.0;\r\n\tdelta: number = 0.0;\r\n\tpaused: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.start = this.previous = this.now();\r\n\t}\r\n\r\n\tnow() {\r\n\t\treturn performance.now();\r\n\t}\r\n\r\n\tplay() {\r\n\t\tif (this.previous) {\r\n\t\t\tconst now = this.now();\r\n\t\t\tthis.delay += (now - this.previous);\r\n\t\t\tthis.previous = now;\r\n\t\t}\r\n\t\t// Logger.log(this.delay);\r\n\t\tthis.paused = false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t}\r\n\r\n\tnext(): CanvasTimer {\r\n\t\tconst now = this.now();\r\n\t\tthis.delta = now - this.previous;\r\n\t\tthis.current = now - this.start - this.delay;\r\n\t\tthis.previous = now;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import Logger from '../logger/logger';\r\n\r\nexport class Listener {\r\n\tevent: string;\r\n\tcallback: Function;\r\n\r\n\tconstructor(\r\n\t\tevent: string,\r\n\t\tcallback: Function\r\n\t) {\r\n\t\tthis.event = event;\r\n\t\tthis.callback = callback;\r\n\t}\r\n}\r\n\r\nexport default class Subscriber {\r\n\tprivate listeners: Set<Listener> = new Set<Listener>();\r\n\r\n\tlogListeners() {\r\n\t\tthis.listeners.forEach(x => Logger.log(x));\r\n\t}\r\n\r\n\tsubscribe(listener: Listener) {\r\n\t\tthis.listeners.add(listener);\r\n\t}\r\n\r\n\tunsubscribe(listener: Listener) {\r\n\t\tthis.listeners.delete(listener);\r\n\t}\r\n\r\n\tunsubscribeAll() {\r\n\t\tthis.listeners.clear();\r\n\t}\r\n\r\n\ton(event: string, callback: Function) {\r\n\t\tthis.listeners.add(new Listener(event, callback));\r\n\t\treturn this;\r\n\t}\r\n\r\n\toff(event: string, callback?: Function) {\r\n\t\tif (callback) {\r\n\t\t\tthis.listeners.delete(new Listener(event, callback));\r\n\t\t} else {\r\n\t\t\tthis.listeners.forEach(x => {\r\n\t\t\t\tif (x.event === event) {\r\n\t\t\t\t\tthis.listeners.delete(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttrigger(event: string, ...data: any[]) {\r\n\t\tthis.listeners.forEach(x => {\r\n\t\t\tif (x.event === event && typeof x.callback === 'function') {\r\n\t\t\t\tx.callback(...data);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import Geometry from './geometry';\r\n\r\nexport default class BoxGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tthis.size = 36;\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = [\r\n\t\t\t// Front face\r\n\t\t\t-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\r\n\t\t\t// Back face\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0,\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\r\n\t\t\t// Top face\r\n\t\t\t-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\r\n\t\t\t// Bottom face\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,\r\n\t\t\t// Right face\r\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0,\r\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,\r\n\t\t\t// Left face\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0,\r\n\t\t];\r\n\t\tthis.texcoords = [\r\n\t\t\t// Front\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Back\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Top\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Bottom\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Right\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Left\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.normals = [\r\n\t\t\t// Front\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t// Back\r\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n\t\t\t// Top\r\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n\t\t\t// Bottom\r\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n\t\t\t// Right\r\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n\t\t\t// Left\r\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n\t\t];\r\n\t\t// Now set up the colors for the faces. We'll use solid colors\r\n\t\t// for each face.\r\n\t\tconst faceColors = [\r\n\t\t\t[1.0, 1.0, 1.0, 1.0],    // Front face: white\r\n\t\t\t[1.0, 0.0, 0.0, 1.0],    // Back face: red\r\n\t\t\t[0.0, 1.0, 0.0, 1.0],    // Top face: green\r\n\t\t\t[0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\r\n\t\t\t[1.0, 1.0, 0.0, 1.0],    // Right face: yellow\r\n\t\t\t[1.0, 0.0, 1.0, 1.0],    // Left face: purple\r\n\t\t];\r\n\t\t// Convert the array of colors into a table for all the vertices.\r\n\t\tlet colors: number[] = [];\r\n\t\tfor (var j = 0; j < faceColors.length; ++j) {\r\n\t\t\tconst c = faceColors[j];\r\n\t\t\t// Repeat each color four times for the four vertices of the face\r\n\t\t\tcolors = colors.concat(c, c, c, c, c, c);\r\n\t\t}\r\n\t\tthis.colors = colors;\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n}\r\n","import Vector3 from '../math/vector3';\r\nimport Geometry from './geometry';\r\n\r\nexport default class SphereGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tconst radius = 1.4;\r\n\t\tconst widthDivisions = 80;\r\n\t\tconst heightDivisions = 60;\r\n\t\tconst phiStart = 0;\r\n\t\tconst phiLength = Math.PI * 2;\r\n\t\tconst thetaStart = 0;\r\n\t\tconst thetaLength = Math.PI;\r\n\t\tconst p = new Vector3();\r\n\t\tconst n = new Vector3();\r\n\t\t// buffers\r\n\t\tconst indices = [];\r\n\t\tconst positions = [];\r\n\t\tconst normals = [];\r\n\t\tconst texcoords = [];\r\n\t\tconst colors = [];\r\n\t\t//\r\n\t\tlet thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n\t\tlet ix, iy;\r\n\t\tlet index = 0;\r\n\t\tlet grid = [];\r\n\t\t// generate positions, normals and uvs\r\n\t\tfor (iy = 0; iy <= heightDivisions; iy++) {\r\n\t\t\tlet positionRow = [];\r\n\t\t\tlet v = iy / heightDivisions;\r\n\t\t\t// special case for the poles\r\n\t\t\tlet uOffset = 0;\r\n\t\t\tif (iy == 0 && thetaStart == 0) {\r\n\t\t\t\tuOffset = 0.5 / widthDivisions;\r\n\t\t\t} else if (iy == heightDivisions && thetaEnd == Math.PI) {\r\n\t\t\t\tuOffset = -0.5 / widthDivisions;\r\n\t\t\t}\r\n\t\t\tfor (ix = 0; ix <= widthDivisions; ix++) {\r\n\t\t\t\tlet u = ix / widthDivisions;\r\n\t\t\t\t// position\r\n\t\t\t\tp.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\tp.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n\t\t\t\tp.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\tpositions.push(p.x, p.y, p.z);\r\n\t\t\t\t// normal\r\n\t\t\t\tn.copy(p).normalize();\r\n\t\t\t\tnormals.push(n.x, n.y, n.z);\r\n\t\t\t\t// uv\r\n\t\t\t\tconst uvx = (u + uOffset);\r\n\t\t\t\tconst uvy = (1 - v);\r\n\t\t\t\ttexcoords.push(uvx, uvy);\r\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\r\n\t\t\t\tpositionRow.push(index++);\r\n\t\t\t}\r\n\t\t\tgrid.push(positionRow);\r\n\t\t}\r\n\t\t// indices\r\n\t\tfor (iy = 0; iy < heightDivisions; iy++) {\r\n\t\t\tfor (ix = 0; ix < widthDivisions; ix++) {\r\n\t\t\t\tconst a = grid[iy][ix + 1];\r\n\t\t\t\tconst b = grid[iy][ix];\r\n\t\t\t\tconst c = grid[iy + 1][ix];\r\n\t\t\t\tconst d = grid[iy + 1][ix + 1];\r\n\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n\t\t\t\tif (iy !== heightDivisions - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// build geometry\r\n\t\tthis.size = indices.length;\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\r\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\r\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\r\n\t\t// Now set up the colors for the faces. We'll use solid colors\r\n\t\t// for each face.\r\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\r\n\t\t// this.unrapUvw(this.positions);\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\t/*\r\n\tunrapUvw(positions: number[]): void {\r\n\t\tconst texcoords: number[] = this.texcoords = [];\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\r\n\t\t\tv.normalize();\r\n\t\t\tconst pitch = Math.asin(-v.y);\r\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\r\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\r\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\r\n\t\t\ttexcoords.push(tx, ty);\r\n\t\t}\r\n\t}\r\n\t*/\r\n\r\n}\r\n","import Vector3 from '../math/vector3';\r\nimport Geometry from './geometry';\r\n\r\nexport default class TorusGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tconst radius: number = 1;\r\n\t\tconst tube: number = 0.25;\r\n\t\tconst tubularDivisions: number = 200;\r\n\t\tconst radialDivisions: number = 40;\r\n\t\tconst p: number = 2;\r\n\t\tconst q: number = 3;\r\n\t\tconst indices: number[] = [];\r\n\t\tconst positions: number[] = [];\r\n\t\tconst normals: number[] = [];\r\n\t\tconst texcoords: number[] = [];\r\n\t\tconst colors: number[] = [];\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst p1 = new Vector3();\r\n\t\tconst p2 = new Vector3();\r\n\t\tconst B = new Vector3();\r\n\t\tconst T = new Vector3();\r\n\t\tconst N = new Vector3();\r\n\t\tfor (let i: number = 0; i <= tubularDivisions; ++i) {\r\n\t\t\tconst u = i / tubularDivisions * p * Math.PI * 2;\r\n\t\t\tthis.calculatePositionOnCurve(u, p, q, radius, p1);\r\n\t\t\tthis.calculatePositionOnCurve(u + 0.01, p, q, radius, p2);\r\n\t\t\tT.subVectors(p2, p1);\r\n\t\t\tN.addVectors(p2, p1);\r\n\t\t\tB.crossVectors(T, N);\r\n\t\t\tN.crossVectors(B, T);\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\t\t\tfor (let j: number = 0; j <= radialDivisions; ++j) {\r\n\t\t\t\tconst v: number = j / radialDivisions * Math.PI * 2;\r\n\t\t\t\tconst cx: number = - tube * Math.cos(v);\r\n\t\t\t\tconst cy: number = tube * Math.sin(v);\r\n\t\t\t\tvertex.x = p1.x + (cx * N.x + cy * B.x);\r\n\t\t\t\tvertex.y = p1.y + (cx * N.y + cy * B.y);\r\n\t\t\t\tvertex.z = p1.z + (cx * N.z + cy * B.z);\r\n\t\t\t\tpositions.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t\tnormal.subVectors(vertex, p1).normalize();\r\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\r\n\t\t\t\ttexcoords.push(i / tubularDivisions * 2.0 * Math.round(q));\r\n\t\t\t\ttexcoords.push(j / radialDivisions);\r\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let j: number = 1; j <= tubularDivisions; j++) {\r\n\t\t\tfor (let i: number = 1; i <= radialDivisions; i++) {\r\n\t\t\t\tconst a: number = (radialDivisions + 1) * (j - 1) + (i - 1);\r\n\t\t\t\tconst b: number = (radialDivisions + 1) * j + (i - 1);\r\n\t\t\t\tconst c: number = (radialDivisions + 1) * j + i;\r\n\t\t\t\tconst d: number = (radialDivisions + 1) * (j - 1) + i;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.size = indices.length;\r\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\r\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\r\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\r\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\tprotected calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3): void {\r\n\t\tconst cu: number = Math.cos(u);\r\n\t\tconst su: number = Math.sin(u);\r\n\t\tconst quOverP: number = q / p * u;\r\n\t\tconst cs: number = Math.cos(quOverP);\r\n\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\r\n\t\tposition.y = radius * (2 + cs) * su * 0.5;\r\n\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\r\n\t}\r\n\r\n}\r\n","import Common from '../core/common';\r\nimport Geometry, { IGeometry } from '../geometry/geometry';\r\nimport Vector3 from '../math/vector3';\r\n\r\nconst COLORS = [\r\n\t[1, 1, 1],\r\n\t[1, 0, 0],\r\n\t[0, 1, 0],\r\n\t[0, 0, 1],\r\n\t[1, 1, 0],\r\n\t[0, 1, 1],\r\n];\r\n\r\nlet CI: number = 0;\r\n\r\nexport default class ObjLoader {\r\n\r\n\tload(url: string): Promise<Geometry> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tCommon.fetch(url)\r\n\t\t\t\t// .then((response) => response.text())\r\n\t\t\t\t.then((text) => {\r\n\t\t\t\t\t// console.log(text);\r\n\t\t\t\t\tconst data = this.parse(text);\r\n\t\t\t\t\tif (data.positions.length) {\r\n\t\t\t\t\t\tconst geometry = new Geometry(data as IGeometry);\r\n\t\t\t\t\t\tresolve(geometry);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject(`ObjLoader error: empty positions ${url}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, error => {\r\n\t\t\t\t\tconsole.log('ObjLoader error:', error, url);\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tparseIndices(faceIndices: number[][], k: number, l: number, source: number[][], output: number[], name: string) {\r\n\t\tlet i = 0;\r\n\t\twhile (i <= faceIndices.length - 3) {\r\n\t\t\tlet a, b, c;\r\n\t\t\tif (i === 0) {\r\n\t\t\t\ta = i;\r\n\t\t\t\tb = i + 1;\r\n\t\t\t\tc = i + 2;\r\n\t\t\t} else {\r\n\t\t\t\ta = i - 1;\r\n\t\t\t\tb = i + 1;\r\n\t\t\t\tc = i + 2;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\tconst indices = [a, b, c];\r\n\t\t\tfor (let j = 0; j < indices.length; j++) {\r\n\t\t\t\tconst index = faceIndices[indices[j]][k];\r\n\t\t\t\tlet values;\r\n\t\t\t\tif (index && index !== NaN) {\r\n\t\t\t\t\tvalues = source[index - 1];\r\n\t\t\t\t\tif (values) {\r\n\t\t\t\t\t\tvalues = values.slice(0, l);\r\n\t\t\t\t\t\toutput.push.apply(output, values);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// console.log('error', name, source.length, index - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalues = new Array(l).fill(0);\r\n\t\t\t\t\toutput.push.apply(output, values);\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseFaces(F: number[][][], V: number[][], VN: number[][], VT: number[][], positions: number[], normals: number[], texcoords: number[], colors: number[]) {\r\n\t\tconst si: number = positions.length;\r\n\t\tF.forEach(faceIndices => {\r\n\t\t\t// console.log(faceIndices);\r\n\t\t\tthis.parseIndices(faceIndices, 0, 3, V, positions, 'positions');\r\n\t\t\tthis.parseIndices(faceIndices, 2, 3, VN, normals, 'normals');\r\n\t\t\tthis.parseIndices(faceIndices, 1, 2, VT, texcoords, 'texcoords');\r\n\t\t});\r\n\t\tconst vl: number = positions.length - si;\r\n\t\tif (vl > 0) {\r\n\t\t\t// console.log(faceIndices.length - 2);\r\n\t\t\tconst c = new Array(vl / 3).fill(0);\r\n\t\t\tc.forEach(() => {\r\n\t\t\t\tconst rgb = COLORS[CI % COLORS.length];\r\n\t\t\t\tcolors.push(rgb[0], rgb[1], rgb[2], 1.0);\r\n\t\t\t});\r\n\t\t\tCI++;\r\n\t\t\t// console.log(positions.length, normals.length, texcoords.length, colors.length, positions.length / 3 * 2 === texcoords.length, positions.length / 3 * 4 === colors.length);\r\n\t\t}\r\n\t}\r\n\r\n\tparse(text: string): IGeometry {\r\n\t\tlet positions: number[] = [], normals: number[] = [], texcoords: number[] = [], colors: number[] = [];\r\n\t\tCI = 0;\r\n\t\tlet V: number[][] = [], VN: number[][] = [], VT: number[][] = [], F: number[][][] = [];\r\n\t\tif (text.indexOf('\\r\\n') !== - 1) {\r\n\t\t\ttext = text.replace(/\\r\\n/g, '\\n');\r\n\t\t}\r\n\t\t/*\r\n\t\tif (text.indexOf('\\\\\\n') !== - 1) {\r\n\t\t\ttext = text.replace(/\\\\\\n/g, '');\r\n\t\t}\r\n\t\t*/\r\n\t\ttext = text.replace(/  /g, ' ');\r\n\t\tconst lines = text.split('\\n');\r\n\t\tlines.forEach((line, i) => {\r\n\t\t\tif (line.indexOf('v ') === 0) {\r\n\t\t\t\tif (F.length) {\r\n\t\t\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\r\n\t\t\t\t\tF = [];\r\n\t\t\t\t\t// V = [];\r\n\t\t\t\t\t// VN = [];\r\n\t\t\t\t\t// VT = [];\r\n\t\t\t\t}\r\n\t\t\t\t// v  0.0012 -0.0055 0.0090\r\n\t\t\t\tconst a = line.replace('v', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tV.push(v);\r\n\t\t\t} else if (line.indexOf('vn ') === 0) {\r\n\t\t\t\t// vn 0.0128 0.9896 0.1431\r\n\t\t\t\tconst a = line.replace('vn', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tconst n = new Vector3(v[0], v[1], v[2]).normalize();\r\n\t\t\t\tVN.push([n.x, n.y, n.z]);\r\n\t\t\t} else if (line.indexOf('vt ') === 0) {\r\n\t\t\t\t// vt 0.5955 0.0054 0.0000\r\n\t\t\t\tconst a = line.replace('vt', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tVT.push(v);\r\n\t\t\t} else if (line.indexOf('f ') === 0) {\r\n\t\t\t\t// f 1//1 2//2 3//3 4//4\r\n\t\t\t\tconst a = line.replace('f', '').trim().split(' ');\r\n\t\t\t\tconst f = a.map((x: string) => {\r\n\t\t\t\t\tconst indices = x.split('/').map(y => parseInt(y));\r\n\t\t\t\t\tif (indices.length === 2) {\r\n\t\t\t\t\t\tindices.push(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn indices;\r\n\t\t\t\t});\r\n\t\t\t\tF[F.length] = f;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (F.length) {\r\n\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\r\n\t\t}\r\n\t\tconst boundingBox = { min: new Vector3(Number.POSITIVE_INFINITY), max: new Vector3(Number.NEGATIVE_INFINITY) };\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tboundingBox.min.x = Math.min(boundingBox.min.x, positions[i]);\r\n\t\t\tboundingBox.min.y = Math.min(boundingBox.min.y, positions[i + 1]);\r\n\t\t\tboundingBox.min.z = Math.min(boundingBox.min.z, positions[i + 2]);\r\n\t\t\tboundingBox.max.x = Math.max(boundingBox.max.x, positions[i]);\r\n\t\t\tboundingBox.max.y = Math.max(boundingBox.max.y, positions[i + 1]);\r\n\t\t\tboundingBox.max.z = Math.max(boundingBox.max.z, positions[i + 2]);\r\n\t\t}\r\n\t\tconst centerX = true, centerY = true, centerZ = true;\r\n\t\tconst dx = -(boundingBox.min.x + boundingBox.max.x) / 2;\r\n\t\tconst dy = -(boundingBox.min.y + boundingBox.max.y) / 2;\r\n\t\tconst dz = -(boundingBox.min.z + boundingBox.max.z) / 2;\r\n\t\t// console.log(dx, dy, dz);\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tpositions[i] += centerX ? dx : 0;\r\n\t\t\tpositions[i + 1] += centerY ? dy : 0;\r\n\t\t\tpositions[i + 2] += centerZ ? dz : 0;\r\n\t\t}\r\n\t\tconst radius = positions.reduce((p: number, c: number) => {\r\n\t\t\treturn Math.max(p, c);\r\n\t\t}, 0);\r\n\t\tpositions.forEach((x: number, i: number) => positions[i] = x / radius * 2.0);\r\n\t\tif (!normals.length) {\r\n\t\t\tnormals = positions.slice();\r\n\t\t}\r\n\t\tif (!texcoords.length) {\r\n\t\t\ttexcoords = this.unrapUvw(positions);\r\n\t\t}\r\n\t\t/*\r\n\t\t// console.log(positions.length, normals.length, texcoords.length, colors.length,\r\n\t\t//\tpositions.length / 3 * 2 === texcoords.length,\r\n\t\t//\tpositions.length / 3 * 4 === colors.length);\r\n\t\t*/\r\n\t\treturn {\r\n\t\t\tpositions, normals, texcoords, colors\r\n\t\t};\r\n\t}\r\n\r\n\tunrapUvw(positions: number[]): number[] {\r\n\t\tconst texcoords: number[] = [];\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\r\n\t\t\tv.normalize();\r\n\t\t\tconst pitch = Math.asin(-v.y);\r\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\r\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\r\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\r\n\t\t\ttexcoords.push(tx, ty);\r\n\t\t}\r\n\t\treturn texcoords;\r\n\t}\r\n}\r\n","\r\nimport IterableStringMap from '../core/iterable';\r\nimport Logger from '../logger/logger';\r\nimport { Texture } from '../textures/textures';\r\n\r\nexport enum UniformMethod {\r\n\tUnknown = 0,\r\n\tUniform1i = 'uniform1i', // (intUniformLoc,   v);                 // for int\r\n\t// Uniform1i  = 'uniform1i', // (boolUniformLoc,   v);                // for bool\r\n\t// Uniform1i  = 'uniform1i', // (sampler2DUniformLoc,   v);           // for sampler2D\r\n\t// Uniform1i  = 'uniform1i', // (samplerCubeUniformLoc,   v);         // for samplerCube\r\n\tUniform2i = 'uniform2i', // (ivec2UniformLoc, v0, v1);            // for ivec2\r\n\tUniform3i = 'uniform3i', // (ivec3UniformLoc, v0, v1, v2);        // for ivec3\r\n\tUniform4i = 'uniform4i', // (ivec4UniformLoc, v0, v1, v2, v4);    // for ivec4\r\n\tUniform1f = 'uniform1f', // (floatUniformLoc, v);                 // for float\r\n\tUniform2f = 'uniform2f', // (vec2UniformLoc,  v0, v1);            // for vec2\r\n\tUniform3f = 'uniform3f', // (vec3UniformLoc,  v0, v1, v2);        // for vec3\r\n\tUniform4f = 'uniform4f', // (vec4UniformLoc,  v0, v1, v2, v4);    // for vec4\r\n\t//\r\n\tUniform1iv = 'uniform1iv', // (intUniformLoc, [v]);                 // for int or int array\r\n\t// Uniform1iv = 'uniform1iv', // (boolUniformLoc, [v]);                // for bool or bool array\r\n\t// Uniform1iv = 'uniform1iv', // (sampler2DUniformLoc, [v]);           // for sampler2D or sampler2D array\r\n\t// Uniform1iv = 'uniform1iv', // (samplerCubeUniformLoc, [v]);         // for samplerCube or samplerCube array\r\n\tUniform2iv = 'uniform2iv', // (ivec2UniformLoc, [v0, v1]);          // for ivec2 or ivec2 array\r\n\tUniform3iv = 'uniform3iv', // (ivec3UniformLoc, [v0, v1, v2]);      // for ivec3 or ivec3 array\r\n\tUniform4iv = 'uniform4iv', // (ivec4UniformLoc, [v0, v1, v2, v4]);  // for ivec4 or ivec4 array\r\n\t//\r\n\tUniform1fv = 'uniform1fv', // (floatUniformLoc, [v]);               // for float or float array\r\n\tUniform2fv = 'uniform2fv', // (vec2UniformLoc,  [v0, v1]);          // for vec2 or vec2 array\r\n\tUniform3fv = 'uniform3fv', // (vec3UniformLoc,  [v0, v1, v2]);      // for vec3 or vec3 array\r\n\tUniform4fv = 'uniform4fv', // (vec4UniformLoc,  [v0, v1, v2, v4]);  // for vec4 or vec4 array\r\n\t//\r\n\tUniformMatrix2fv = 'uniformMatrix2fv', // (mat2UniformLoc, false, [  4x element array ])  // for mat2 or mat2 array\r\n\tUniformMatrix3fv = 'uniformMatrix3fv', // (mat3UniformLoc, false, [  9x element array ])  // for mat3 or mat3 array\r\n\tUniformMatrix4fv = 'uniformMatrix4fv', // (mat4UniformLoc, false, [ 16x element array ])  // for mat4 or mat4 array\r\n}\r\n\r\nexport enum UniformType {\r\n\tUnknown = 0,\r\n\tFloat,\r\n\tInt,\r\n\tBool,\r\n\tSampler2D,\r\n\tSamplerCube,\r\n\tMatrix2fv,\r\n\tMatrix3fv,\r\n\tMatrix4fv,\r\n}\r\n\r\nexport const METHODS_INT = [UniformMethod.Uniform1i, UniformMethod.Uniform2i, UniformMethod.Uniform3i, UniformMethod.Uniform4i];\r\nexport const METHODS_FLOAT = [UniformMethod.Uniform1f, UniformMethod.Uniform2f, UniformMethod.Uniform3f, UniformMethod.Uniform4f];\r\nexport const METHODS_INTV = [UniformMethod.Uniform1iv, UniformMethod.Uniform2iv, UniformMethod.Uniform3iv, UniformMethod.Uniform4iv];\r\nexport const METHODS_FLOATV = [UniformMethod.Uniform1fv, UniformMethod.Uniform2fv, UniformMethod.Uniform3fv, UniformMethod.Uniform4fv];\r\n\r\nexport interface IUniformOption { [key: string]: any[]; }\r\n\r\nexport class Uniform {\r\n\tmethod: UniformMethod;\r\n\ttype: UniformType;\r\n\tkey: string;\r\n\tvalues: any[];\r\n\tlocation?: WebGLUniformLocation;\r\n\tdirty?: boolean = true;\r\n\tapply?: Function;\r\n\r\n\tconstructor(options?: Uniform) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t\tswitch (this.method) {\r\n\t\t\tcase UniformMethod.UniformMatrix2fv:\r\n\t\t\tcase UniformMethod.UniformMatrix3fv:\r\n\t\t\tcase UniformMethod.UniformMatrix4fv:\r\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\r\n\t\t\t\t\tif (this.dirty) {\r\n\t\t\t\t\t\tgl.useProgram(program);\r\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\r\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\r\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location, false].concat(this.values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\r\n\t\t\t\t\tif (this.dirty) {\r\n\t\t\t\t\t\tgl.useProgram(program);\r\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\r\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\r\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport class UniformTexture extends Uniform {\r\n\r\n\ttexture: Texture;\r\n\r\n\tconstructor(options?: Uniform) {\r\n\t\tsuper(options);\r\n\t}\r\n\r\n}\r\n\r\nexport default class Uniforms extends IterableStringMap<Uniform> {\r\n\r\n\tdirty: boolean = false;\r\n\r\n\tstatic isArrayOfInteger(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && Number.isInteger(value);\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfNumber(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && typeof value === 'number';\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfBoolean(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && typeof value === 'boolean';\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfTexture(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && Texture.isTexture(value);\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfSampler2D(array: Uniform[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: Uniform) => {\r\n\t\t\treturn flag && value.type === UniformType.Sampler2D;\r\n\t\t}, true);\r\n\t}\r\n\r\n\tprivate static getType_(\r\n\t\tvalues: any[],\r\n\t): UniformType {\r\n\t\tlet type = UniformType.Unknown;\r\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\r\n\t\tconst subject = isVector ? values[0] : values;\r\n\t\tif (Uniforms.isArrayOfNumber(subject)) {\r\n\t\t\ttype = UniformType.Float;\r\n\t\t} else if (Uniforms.isArrayOfBoolean(subject)) {\r\n\t\t\ttype = UniformType.Bool;\r\n\t\t} else if (Uniforms.isArrayOfTexture(subject)) {\r\n\t\t\ttype = UniformType.Sampler2D;\r\n\t\t}\r\n\t\treturn type;\r\n\t}\r\n\r\n\tprivate static getMethod_(\r\n\t\ttype: UniformType,\r\n\t\tvalues: any[],\r\n\t): UniformMethod {\r\n\t\tlet method = UniformMethod.Unknown;\r\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\r\n\t\tconst subject = isVector ? values[0] : values;\r\n\t\tconst length = subject.length;\r\n\t\tconst i = length - 1;\r\n\t\tswitch (type) {\r\n\t\t\tcase UniformType.Float:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = i < METHODS_FLOATV.length ? METHODS_FLOATV[i] : UniformMethod.Unknown;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = i < METHODS_FLOAT.length ? METHODS_FLOAT[i] : UniformMethod.Uniform1fv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase UniformType.Int:\r\n\t\t\tcase UniformType.Bool:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = i < METHODS_INTV.length ? METHODS_INTV[i] : UniformMethod.Unknown;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = i < METHODS_INT.length ? METHODS_INT[i] : UniformMethod.Uniform1iv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase UniformType.Sampler2D:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = UniformMethod.Uniform1iv;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = length === 1 ? UniformMethod.Uniform1i : UniformMethod.Uniform1iv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn method;\r\n\t}\r\n\r\n\tstatic parseUniform(\r\n\t\tkey: string,\r\n\t\tvalues: any[],\r\n\t\ttype: UniformType = null\r\n\t): Uniform | Uniform[] {\r\n\t\tlet uniform: Uniform;\r\n\t\ttype = type || Uniforms.getType_(values);\r\n\t\tconst method = Uniforms.getMethod_(type, values);\r\n\t\tif (type !== UniformType.Unknown && method !== UniformMethod.Unknown) {\r\n\t\t\t// Logger.log('Uniforms.parseUniform', key, UniformType[type], method, values);\r\n\t\t\tif (type === UniformType.Sampler2D && method === UniformMethod.Uniform1iv) {\r\n\t\t\t\treturn values[0].map((texture: any, index: number) => {\r\n\t\t\t\t\treturn new Uniform({\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\tkey: `${key}[${index}]`, // `${key.split('[')[0]}[${index}]`,\r\n\t\t\t\t\t\tvalues: [texture]\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tuniform = new Uniform({\r\n\t\t\t\t\tmethod: method,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tvalues: values\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tLogger.error('Uniforms.parseUniform.Unknown', key, values);\r\n\t\t}\r\n\t\t// return this.parseUniform__bak(key, values);\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tcreate(method: UniformMethod, type: UniformType, key: string, values: any[]): Uniform {\r\n\t\tconst uniform = new Uniform({\r\n\t\t\tmethod: method,\r\n\t\t\ttype: type,\r\n\t\t\tkey: key,\r\n\t\t\tvalues: values,\r\n\t\t});\r\n\t\tthis.set(key, uniform);\r\n\t\tthis.dirty = true;\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tcreateTexture(key: string, index: number): UniformTexture {\r\n\t\tlet uniform;\r\n\t\tif (key.indexOf(']') !== -1) {\r\n\t\t\tuniform = new UniformTexture({\r\n\t\t\t\tmethod: UniformMethod.Uniform1iv,\r\n\t\t\t\ttype: UniformType.Sampler2D,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalues: [[index]],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tuniform = new UniformTexture({\r\n\t\t\t\tmethod: UniformMethod.Uniform1i,\r\n\t\t\t\ttype: UniformType.Sampler2D,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalues: [index],\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.set(key, uniform);\r\n\t\tthis.dirty = true;\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tupdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\r\n\t\tconst uniform = this.get(key);\r\n\t\tif (uniform) {\r\n\t\t\t// !!! consider performance\r\n\t\t\t// && (uniform.method !== method || uniform.type !== type || Uniforms.isDifferent(uniform.values, values))) {\r\n\t\t\tuniform.method = method;\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.values = values;\r\n\t\t\tuniform.dirty = true;\r\n\t\t\tthis.dirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateOrUpdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\r\n\t\tif (this.has(key)) {\r\n\t\t\tthis.update(method, type, key, values);\r\n\t\t} else {\r\n\t\t\tthis.create(method, type, key, values);\r\n\t\t}\r\n\t}\r\n\r\n\tapply(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tgl.useProgram(program);\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\t// if (typeof this.values[key].apply === 'function') {\r\n\t\t\tthis.values[key].apply(gl, program);\r\n\t\t\t// }\r\n\t\t});\r\n\t\t// this.forEach(uniform => uniform.apply(gl, program));\r\n\t}\r\n\r\n\tclean() {\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tthis.values[key].dirty = false;\r\n\t\t});\r\n\t\tthis.dirty = false;\r\n\t}\r\n\r\n\t/*\r\n\t// slow\r\n\tstatic isDifferent(a: any, b: any): boolean {\r\n        return JSON.stringify(a) !== JSON.stringify(b);\r\n    }\r\n\t*/\r\n\r\n\tstatic isDifferent(a: any[], b: any[]) {\r\n\t\treturn a.length !== b.length || a.reduce((f: boolean, v: any, i: number) => {\r\n\t\t\treturn f || v !== b[i];\r\n\t\t}, false);\r\n\t}\r\n\r\n}\r\n","import { mat4 } from 'gl-matrix';\r\nimport Buffers, { IOBuffer } from '../buffers/buffers';\r\nimport OrbitCamera from '../camera/orbit-camera';\r\nimport CanvasTimer from '../canvas/canvas-timer';\r\nimport { ContextMode, ContextVertexBuffers } from '../context/context';\r\nimport Common from '../core/common';\r\nimport Subscriber from '../core/subscriber';\r\nimport BoxGeometry from '../geometry/box-geometry';\r\nimport FlatGeometry from '../geometry/flat-geometry';\r\nimport Geometry from '../geometry/geometry';\r\nimport SphereGeometry from '../geometry/sphere-geometry';\r\nimport TorusGeometry from '../geometry/torus-geometry';\r\nimport ObjLoader from '../loaders/obj-loader';\r\nimport Logger from '../logger/logger';\r\nimport Vector2 from '../math/vector2';\r\nimport Textures, { ITextureInput } from '../textures/textures';\r\nimport Uniforms, { UniformMethod, UniformType } from '../uniforms/uniforms';\r\n\r\nexport default class Renderer extends Subscriber {\r\n\r\n\tgl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\tprogram: WebGLProgram;\r\n\ttimer: CanvasTimer;\r\n\tuniforms: Uniforms = new Uniforms();\r\n\tbuffers: Buffers = new Buffers();\r\n\ttextures: Textures = new Textures();\r\n\ttextureList: ITextureInput[] = [];\r\n\r\n\tW: number = 0;\r\n\tH: number = 0;\r\n\tmouse: Vector2 = new Vector2();\r\n\tradians: number = 0;\r\n\tdirty: boolean = true;\r\n\tanimated: boolean = false;\r\n\tdrawFunc_: (deltaTime: number) => void;\r\n\r\n\tvertexString: string;\r\n\tfragmentString: string;\r\n\r\n\tcamera: OrbitCamera = new OrbitCamera();\r\n\tgeometry: Geometry;\r\n\r\n\tvertexBuffers: ContextVertexBuffers;\r\n\r\n\tprojectionMatrix: mat4;\r\n\tmodelViewMatrix: mat4;\r\n\tnormalMatrix: mat4;\r\n\r\n\tmode: ContextMode;\r\n\tmesh: string;\r\n\tdefaultMesh: string;\r\n\tdoubleSided: boolean;\r\n\tcache: { [key: string]: Geometry } = {};\r\n\tworkpath: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.drawFunc_ = this.drawArrays_;\r\n\t}\r\n\r\n\tprotected render(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tif (!gl) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tthis.update_();\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tbuffer.geometry.attachAttributes_(gl, buffer.program);\r\n\t\t\t// uniforms.get('u_resolution').values = [1024, 1024];\r\n\t\t\tuniforms.apply(gl, buffer.program);\r\n\t\t\t/*\r\n\t\t\t// console.log('uniforms');\r\n\t\t\tObject.keys(uniforms.values).forEach((key) => {\r\n\t\t\t\tif (key.indexOf('u_buff') === 0) {\r\n\t\t\t\t\t// console.log(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t\tbuffer.render(gl, BW, BH);\r\n\t\t});\r\n\t\t// uniforms.get('u_resolution').values = [BW, BH];\r\n\t\tthis.geometry.attachAttributes_(gl, this.program);\r\n\t\tuniforms.apply(gl, this.program);\r\n\t\t// gl.viewport(0, 0, BW, BH);\r\n\t\tthis.drawFunc_(this.timer.delta);\r\n\t\tuniforms.clean();\r\n\t\tthis.textures.clean();\r\n\t\tthis.dirty = false;\r\n\t\tthis.trigger('render', this);\r\n\t}\r\n\r\n\tprotected drawArrays_(deltaTime: number) {\r\n\t\tconst gl = this.gl;\r\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t// Clear\r\n\t\tgl.viewport(0, 0, this.W, this.H);\r\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\t\tgl.clearDepth(1.0);\r\n\t\t// Clear the canvas before we start drawing on it.\r\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\tgl.enable(gl.DEPTH_TEST);\r\n\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\tgl.enable(gl.CULL_FACE);\r\n\t\tif (this.doubleSided && this.mode !== ContextMode.Flat) {\r\n\t\t\t// back\r\n\t\t\t// gl.frontFace(gl.CW);\r\n\t\t\tgl.cullFace(gl.FRONT);\r\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t\t// front\r\n\t\t\tgl.enable(gl.BLEND);\r\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t}\r\n\t\t// gl.frontFace(gl.CCW);\r\n\t\tgl.cullFace(gl.BACK);\r\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t// gl.drawElements(gl.TRIANGLES, this.geometry.size, gl.UNSIGNED_SHORT, 0);\r\n\t}\r\n\r\n\tprotected create_(): void {\r\n\t\tthis.createGeometry_();\r\n\t\tthis.createUniforms_();\r\n\t}\r\n\r\n\tprotected createGeometry_() {\r\n\t\t// console.log('Geometry', Geometry);\r\n\t\t// console.log('FlatGeometry', FlatGeometry);\r\n\t\t// console.log('BoxGeometry', BoxGeometry);\r\n\t\tthis.parseGeometry_();\r\n\t\tthis.setMode(this.mode);\r\n\t}\r\n\r\n\tprotected parseGeometry_() {\r\n\t\tconst regexp = /^attribute\\s+vec4\\s+a_position\\s*;\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]+)/gm;\r\n\t\tconst match = regexp.exec(this.vertexString);\r\n\t\tif (match && match.length > 1) {\r\n\t\t\tthis.mesh = match[1];\r\n\t\t} else {\r\n\t\t\tthis.mesh = this.defaultMesh;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createUniforms_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tconst fragmentString = this.fragmentString;\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tconst timer = this.timer = new CanvasTimer();\r\n\t\tconst hasDelta = (fragmentString.match(/u_delta/g) || []).length > 1;\r\n\t\tconst hasTime = (fragmentString.match(/u_time/g) || []).length > 1;\r\n\t\tconst hasDate = (fragmentString.match(/u_date/g) || []).length > 1;\r\n\t\tconst hasMouse = (fragmentString.match(/u_mouse/g) || []).length > 1;\r\n\t\tconst hasCamera = (fragmentString.match(/u_camera/g) || []).length > 1;\r\n\t\t// this.animated = hasTime || hasDate || hasMouse;\r\n\t\tthis.animated = true; // !!!\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\r\n\t\tif (hasDelta) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\r\n\t\t\tthis.updateUniformDelta_ = this.updateUniformDelta__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformDelta_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasTime) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\r\n\t\t\tthis.updateUniformTime_ = this.updateUniformTime__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformTime_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasDate) {\r\n\t\t\tconst date = new Date();\r\n\t\t\tuniforms.create(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\r\n\t\t\tthis.updateUniformDate_ = this.updateUniformDate__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformDate_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasMouse) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [0, 0]);\r\n\t\t\tthis.updateUniformMouse_ = this.updateUniformMouse__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformMouse_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasCamera) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_camera', [0, 0, 0]);\r\n\t\t\tthis.updateUniformCamera_ = this.updateUniformCamera__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformCamera_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\t// if (this.mode !== ContextMode.Flat) {\r\n\t\tthis.projectionMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.projectionMatrix as number[]);\r\n\t\tthis.modelViewMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.modelViewMatrix as number[]);\r\n\t\tthis.normalMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.normalMatrix as number[]);\r\n\t\t// }\r\n\t}\r\n\r\n\tprotected update_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tif (!this.timer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timer = this.timer.next();\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\r\n\t\tthis.updateUniformDelta_(timer);\r\n\t\tthis.updateUniformTime_(timer);\r\n\t\tthis.updateUniformDate_();\r\n\t\tthis.updateUniformMouse_();\r\n\t\tthis.updateUniformCamera_();\r\n\t\tthis.updateUniformMesh_();\r\n\t}\r\n\r\n\tupdateUniformNoop_(): void {};\r\n\tupdateUniformDelta_: (timer:CanvasTimer) => void;\r\n\tupdateUniformTime_: (timer:CanvasTimer) => void;\r\n\tupdateUniformDate_: () => void;\r\n\tupdateUniformMouse_: () => void;\r\n\tupdateUniformCamera_: () => void;\r\n\tupdateUniformMesh_: () => void;\r\n\r\n\tprotected updateUniformDelta__(timer:CanvasTimer):void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\r\n\t};\r\n\tprotected updateUniformTime__(timer:CanvasTimer):void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\r\n\t};\r\n\tprotected updateUniformDate__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst date = new Date();\r\n\t\tuniforms.update(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\r\n\t};\r\n\tprotected updateUniformMouse__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst mouse = this.mouse;\r\n\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [mouse.x, mouse.y]);\r\n\t\t/*\r\n\t\tconst rect = this.rect;\r\n\t\tif (mouse.x >= rect.left && mouse.x <= rect.right &&\r\n\t\t\tmouse.y >= rect.top && mouse.y <= rect.bottom) {\r\n\t\t\tconst MX = (mouse.x - rect.left) * this.devicePixelRatio;\r\n\t\t\tconst MY = (this.canvas.height - (mouse.y - rect.top) * this.devicePixelRatio);\r\n\t\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [MX, MY]);\r\n\t\t}\r\n\t\t*/\r\n\t};\r\n\tprotected updateUniformCamera__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst array = OrbitCamera.toArray(this.camera);\r\n\t\tuniforms.update(UniformMethod.Uniform3f, UniformType.Float, 'u_camera', array);\r\n\t};\r\n\tprotected updateUniformMesh__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.updateProjectionMatrix_() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.updateModelViewMatrix_(this.timer.delta) as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.updateNormalMatrix_(this.modelViewMatrix) as number[]);\r\n\t};\r\n\tprotected updateUniformFlat__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', mat4.create() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', mat4.create() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', mat4.create() as number[]);\r\n\t}\r\n\r\n\tprotected updateProjectionMatrix_(): mat4 {\r\n\t\tconst gl = this.gl;\r\n\t\tconst fieldOfView = 45 * Math.PI / 180;\r\n\t\tconst aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\t\tconst zNear = 0.1;\r\n\t\tconst zFar = 100.0;\r\n\t\tmat4.perspective(this.projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\t\treturn this.projectionMatrix;\r\n\t}\r\n\r\n\tprotected updateModelViewMatrix_(deltaTime: number): mat4 {\r\n\t\tconst camera = this.camera;\r\n\t\tlet modelViewMatrix = this.modelViewMatrix;\r\n\t\tmodelViewMatrix = mat4.identity(modelViewMatrix);\r\n\t\tmat4.translate(modelViewMatrix, modelViewMatrix, [0.0, 0.0, -camera.radius]); // amount to translate\r\n\t\tmat4.rotate(modelViewMatrix, modelViewMatrix, camera.theta + this.radians, [0, 1, 0]); // axis to rotate around (Y)\r\n\t\tmat4.rotate(modelViewMatrix, modelViewMatrix, camera.phi, [1, 0, 0]); // axis to rotate around (X)\r\n\t\tif (!camera.mouse) {\r\n\t\t\tcamera.theta += (0 - camera.theta) / 20;\r\n\t\t\tcamera.phi += (0 - camera.phi) / 20;\r\n\t\t\tthis.radians += deltaTime * 0.0005;\r\n\t\t}\r\n\t\treturn modelViewMatrix;\r\n\t}\r\n\r\n\tprotected updateNormalMatrix_(modelViewMatrix: mat4): mat4 {\r\n\t\t// this.normalMatrix = mat4.create();\r\n\t\tlet normalMatrix = this.normalMatrix;\r\n\t\tnormalMatrix = mat4.identity(normalMatrix);\r\n\t\tmat4.invert(normalMatrix, modelViewMatrix);\r\n\t\tmat4.transpose(normalMatrix, normalMatrix);\r\n\t\treturn normalMatrix;\r\n\t}\r\n\r\n\tpublic setMode(mode: ContextMode) {\r\n\t\tlet geometry: Geometry;\r\n\t\tif (mode === ContextMode.Mesh) {\r\n\t\t\tgeometry = this.cache[this.mesh];\r\n\t\t\tif (geometry) {\r\n\t\t\t\tthis.geometry = geometry;\r\n\t\t\t\tthis.mode = ContextMode.Mesh;\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet loader: ObjLoader;\r\n\t\tswitch (mode) {\r\n\t\t\tcase ContextMode.Flat:\r\n\t\t\t\tgeometry = new FlatGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformNoop_;\r\n\t\t\t\tthis.updateUniformFlat__();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Box:\r\n\t\t\t\tgeometry = new BoxGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Sphere:\r\n\t\t\t\tgeometry = new SphereGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Torus:\r\n\t\t\t\tgeometry = new TorusGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Mesh:\r\n\t\t\t\tgeometry = new FlatGeometry();\r\n\t\t\t\tif (this.mesh) {\r\n\t\t\t\t\tloader = new ObjLoader();\r\n\t\t\t\t\tloader.load(Common.getResource(this.mesh, this.workpath)).then(geometry => {\r\n\t\t\t\t\t\tgeometry.createAttributes_(this.gl, this.program);\r\n\t\t\t\t\t\tconst cache: { [key: string]: Geometry } = {};\r\n\t\t\t\t\t\tcache[this.mesh] = geometry;\r\n\t\t\t\t\t\tthis.cache = cache;\r\n\t\t\t\t\t\tthis.geometry = geometry;\r\n\t\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t\t}, error => {\r\n\t\t\t\t\t\tLogger.warn('GlslCanvas', error);\r\n\t\t\t\t\t\tthis.mode = ContextMode.Flat;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmode = ContextMode.Flat;\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tgeometry.create(this.gl, this.program);\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.mode = mode;\r\n\t\tthis.dirty = true;\r\n\t}\r\n\r\n\tpublic setMesh(mesh: string) {\r\n\t\tthis.mesh = mesh;\r\n\t}\r\n}\r\n","import 'promise-polyfill';\r\nimport Buffers, { IOBuffer } from '../buffers/buffers';\r\nimport Context, { ContextMode } from '../context/context';\r\nimport Common from '../core/common';\r\nimport Logger from '../logger/logger';\r\nimport Vector2 from '../math/vector2';\r\nimport Renderer from '../renderer/renderer';\r\nimport Textures, { ITextureData, ITextureOptions, Texture } from '../textures/textures';\r\nimport Uniforms, { IUniformOption, Uniform, UniformMethod, UniformType } from '../uniforms/uniforms';\r\n\r\nexport interface ICanvasOptions extends WebGLContextAttributes {\r\n\tvertexString?: string;\r\n\tfragmentString?: string;\r\n\tbackgroundColor?: string;\r\n\tworkpath?: string;\r\n\tonError?: Function;\r\n\textensions?: string[];\r\n\tmode?: ContextMode;\r\n\tmesh?: string;\r\n\tdoubleSided?: boolean;\r\n}\r\n\r\nexport default class Canvas extends Renderer {\r\n\r\n\toptions: ICanvasOptions;\r\n\tcanvas: HTMLCanvasElement;\r\n\trect: ClientRect | DOMRect;\r\n\twidth: number;\r\n\theight: number;\r\n\tdevicePixelRatio: number;\r\n\tvalid: boolean = false;\r\n\tvisible: boolean = false;\r\n\tcontrols: boolean = false;\r\n\trafId: number;\r\n\tvertexPath: string = '';\r\n\tfragmentPath: string = '';\r\n\r\n\tstatic items: Canvas[] = [];\r\n\r\n\tconstructor(\r\n\t\tcanvas: HTMLCanvasElement,\r\n\t\toptions: ICanvasOptions = {\r\n\t\t\t// alpha: true,\r\n\t\t\t// antialias: true,\r\n\t\t\t// premultipliedAlpha: true\r\n\t\t}\r\n\t) {\r\n\t\tsuper();\r\n\t\tif (!canvas) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.options = options;\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.rect = canvas.getBoundingClientRect();\r\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\r\n\t\tthis.mode = options.mode || ContextMode.Flat;\r\n\t\tthis.mesh = options.mesh || undefined;\r\n\t\tthis.doubleSided = options.doubleSided || false;\r\n\t\tthis.defaultMesh = this.mesh;\r\n\t\tthis.workpath = options.workpath;\r\n\t\tcanvas.style.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\r\n\t\tthis.getShaders_().then((_) => {\r\n\t\t\tthis.load().then(_ => {\r\n\t\t\t\tif (!this.program) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.addListeners_();\r\n\t\t\t\tthis.onLoop();\r\n\t\t\t});\r\n\t\t}, (error) => {\r\n\t\t\tLogger.error('GlslCanvas.getShaders_.error', error);\r\n\t\t});\r\n\t\tCanvas.items.push(this);\r\n\t}\r\n\r\n\tprivate getShaders_(): Promise<string[]> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.vertexString = this.options.vertexString || this.vertexString;\r\n\t\t\tthis.fragmentString = this.options.fragmentString || this.fragmentString;\r\n\t\t\tconst canvas = this.canvas;\r\n\t\t\tconst urls: any = {};\r\n\t\t\tif (canvas.hasAttribute('data-vertex-url')) {\r\n\t\t\t\turls.vertex = canvas.getAttribute('data-vertex-url');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-fragment-url')) {\r\n\t\t\t\turls.fragment = canvas.getAttribute('data-fragment-url');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-vertex')) {\r\n\t\t\t\tthis.vertexString = canvas.getAttribute('data-vertex');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-fragment')) {\r\n\t\t\t\tthis.fragmentString = canvas.getAttribute('data-fragment');\r\n\t\t\t}\r\n\t\t\tif (Object.keys(urls).length) {\r\n\t\t\t\tPromise.all(Object.keys(urls).map((key) => {\r\n\t\t\t\t\tconst url = Common.getResource(urls[key], this.workpath);\r\n\t\t\t\t\treturn Common.fetch(url)\r\n\t\t\t\t\t\t// .then((response) => response.text())\r\n\t\t\t\t\t\t.then((body) => {\r\n\t\t\t\t\t\t\tconst path = Common.dirname(urls[key]);\r\n\t\t\t\t\t\t\tif (key === 'vertex') {\r\n\t\t\t\t\t\t\t\tthis.vertexPath = path;\r\n\t\t\t\t\t\t\t\treturn this.vertexString = body;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.fragmentPath = path;\r\n\t\t\t\t\t\t\t\treturn this.fragmentString = body;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})).then(_ => {\r\n\t\t\t\t\tresolve([this.vertexString, this.fragmentString]);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve([this.vertexString, this.fragmentString]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate addListeners_(): void {\r\n\t\t/*\r\n\t\tconst resize = (e: Event) => {\r\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t\t\tthis.trigger('resize', e);\r\n\t\t};\r\n\t\t*/\r\n\t\tthis.onScroll = this.onScroll.bind(this);\r\n\t\tthis.onWheel = this.onWheel.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onMove = this.onMove.bind(this);\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\r\n\t\tthis.onMouseOver = this.onMouseOver.bind(this);\r\n\t\tthis.onMouseOut = this.onMouseOut.bind(this);\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\r\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\r\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\r\n\t\tthis.onLoop = this.onLoop.bind(this);\r\n\t\t// window.addEventListener('resize', this.onResize);\r\n\t\twindow.addEventListener('scroll', this.onScroll);\r\n\t\tdocument.addEventListener('mousemove', this.onMouseMove, false);\r\n\t\tdocument.addEventListener('touchmove', this.onTouchMove);\r\n\t\tthis.addCanvasListeners_();\r\n\t}\r\n\r\n\tprivate addCanvasListeners_() {\r\n\t\tthis.controls = this.canvas.hasAttribute('controls');\r\n\t\tthis.canvas.addEventListener('wheel', this.onWheel);\r\n\t\tthis.canvas.addEventListener('click', this.onClick);\r\n\t\tthis.canvas.addEventListener('mousedown', this.onMouseDown);\r\n\t\tthis.canvas.addEventListener('touchstart', this.onTouchStart);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.addEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.addEventListener('mouseout', this.onMouseOut);\r\n\t\t\tif (!this.canvas.hasAttribute('data-autoplay')) {\r\n\t\t\t\tthis.pause();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeCanvasListeners_() {\r\n\t\tthis.canvas.removeEventListener('wheel', this.onWheel);\r\n\t\tthis.canvas.removeEventListener('click', this.onClick);\r\n\t\tthis.canvas.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tthis.canvas.removeEventListener('mouseup', this.onMouseUp);\r\n\t\tthis.canvas.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tthis.canvas.removeEventListener('touchend', this.onTouchEnd);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeListeners_() {\r\n\t\twindow.cancelAnimationFrame(this.rafId);\r\n\t\t// window.removeEventListener('resize', this.onResize);\r\n\t\twindow.removeEventListener('scroll', this.onScroll);\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t\tthis.removeCanvasListeners_();\r\n\t}\r\n\r\n\tprivate onScroll(_: Event) {\r\n\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t}\r\n\r\n\tprivate onWheel(e: WheelEvent) {\r\n\t\tthis.camera.wheel(e.deltaY);\r\n\t\tthis.dirty = this.mode !== ContextMode.Flat;\r\n\t\tthis.trigger('wheel', e);\r\n\t}\r\n\r\n\tprivate onClick(e: MouseEvent) {\r\n\t\tif (this.controls) {\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t\tthis.trigger('click', e);\r\n\t}\r\n\r\n\tprivate onDown(mx: number, my: number) {\r\n\t\tconst rect = this.rect;\r\n\t\tmx = (mx - rect.left);\r\n\t\tmy = (rect.height - (my - rect.top));\r\n\t\tconst x = mx * this.devicePixelRatio;\r\n\t\tconst y = my * this.devicePixelRatio;\r\n\t\tthis.mouse.x = x;\r\n\t\tthis.mouse.y = y;\r\n\t\tconst min = Math.min(rect.width, rect.height);\r\n\t\tthis.camera.down(mx / min, my / min);\r\n\t\tthis.trigger('down', this.mouse);\r\n\t}\r\n\r\n\tprivate onMove(mx: number, my: number) {\r\n\t\tconst rect = this.rect;\r\n\t\tmx = (mx - rect.left);\r\n\t\tmy = (rect.height - (my - rect.top));\r\n\t\tconst x = mx * this.devicePixelRatio;\r\n\t\tconst y = my * this.devicePixelRatio;\r\n\t\tif (x !== this.mouse.x ||\r\n\t\t\ty !== this.mouse.y) {\r\n\t\t\tthis.mouse.x = x;\r\n\t\t\tthis.mouse.y = y;\r\n\t\t\tconst min = Math.min(rect.width, rect.height);\r\n\t\t\tthis.camera.move(mx / min, my / min);\r\n\t\t\tthis.dirty = this.mode !== ContextMode.Flat && this.camera.mouse !== null;\r\n\t\t\tthis.trigger('move', this.mouse);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onUp(e: Event) {\r\n\t\tthis.camera.up();\r\n\t\tif (this.controls) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.trigger('out', e);\r\n\t}\r\n\r\n\tprivate onMouseDown(e: MouseEvent) {\r\n\t\tthis.onDown(e.clientX, e.clientY);\r\n\t\tdocument.addEventListener('mouseup', this.onMouseUp);\r\n\t\tdocument.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t}\r\n\r\n\tprivate onMouseMove(e: MouseEvent) {\r\n\t\tthis.onMove(e.clientX, e.clientY);\r\n\t}\r\n\r\n\tprivate onMouseUp(e: MouseEvent) {\r\n\t\tthis.onUp(e);\r\n\t}\r\n\r\n\tprivate onMouseOver(e: MouseEvent) {\r\n\t\tthis.play();\r\n\t\tthis.trigger('over', e);\r\n\t}\r\n\r\n\tprivate onMouseOut(e: MouseEvent) {\r\n\t\tthis.pause();\r\n\t\tthis.trigger('out', e);\r\n\t}\r\n\r\n\tprivate onTouchStart(e: TouchEvent) {\r\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\r\n\t\t\tp = p || new Vector2();\r\n\t\t\tp.x += touch.clientX;\r\n\t\t\tp.y += touch.clientY;\r\n\t\t\treturn p;\r\n\t\t}, null);\r\n\t\tif (touch) {\r\n\t\t\tthis.onDown(touch.x / e.touches.length, touch.y / e.touches.length);\r\n\t\t}\r\n\t\tif (this.controls) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t\tthis.trigger('over', e);\r\n\t\tdocument.addEventListener('touchend', this.onTouchEnd);\r\n\t\tdocument.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTouchMove(e: TouchEvent) {\r\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\r\n\t\t\tp = p || new Vector2();\r\n\t\t\tp.x += touch.clientX;\r\n\t\t\tp.y += touch.clientY;\r\n\t\t\treturn p;\r\n\t\t}, null);\r\n\t\tif (touch) {\r\n\t\t\tthis.onMove(touch.x / e.touches.length, touch.y / e.touches.length);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTouchEnd(e: TouchEvent) {\r\n\t\tthis.onUp(e);\r\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd);\r\n\t}\r\n\r\n\tprivate onLoop(_?: number) {\r\n\t\tthis.checkRender();\r\n\t\tthis.rafId = window.requestAnimationFrame(this.onLoop);\r\n\t}\r\n\r\n\tprivate setUniform_(\r\n\t\tkey: string,\r\n\t\tvalues: any[],\r\n\t\toptions: ITextureOptions = {},\r\n\t\ttype: UniformType = null\r\n\t): void {\r\n\t\tconst uniform: Uniform | Uniform[] = Uniforms.parseUniform(key, values, type);\r\n\t\tif (Array.isArray(uniform)) {\r\n\t\t\tif (Uniforms.isArrayOfSampler2D(uniform)) {\r\n\t\t\t\tuniform.forEach((x) => this.loadTexture(x.key, x.values[0], options));\r\n\t\t\t} else {\r\n\t\t\t\tuniform.forEach((x) => this.uniforms.set(x.key, x.values[0]));\r\n\t\t\t}\r\n\t\t} else if (uniform) {\r\n\t\t\tswitch (uniform.type) {\r\n\t\t\t\tcase UniformType.Sampler2D:\r\n\t\t\t\t\tthis.loadTexture(key, values[0], options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.uniforms.set(key, uniform);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isVisible_(): boolean {\r\n\t\tconst rect = this.rect;\r\n\t\treturn (rect.top + rect.height) > 0 && rect.top < (window.innerHeight || document.documentElement.clientHeight);\r\n\t}\r\n\r\n\tprivate isAnimated_(): boolean {\r\n\t\treturn (this.animated || this.textures.animated || this.mode !== ContextMode.Flat) && !this.timer.paused;\r\n\t}\r\n\r\n\tprivate isDirty_(): boolean {\r\n\t\treturn this.dirty || this.uniforms.dirty || this.textures.dirty;\r\n\t}\r\n\r\n\t// check size change at start of requestFrame\r\n\tprivate sizeDidChanged_(): boolean {\r\n\t\tconst gl = this.gl;\r\n\t\tconst CW = Math.ceil(this.canvas.clientWidth),\r\n\t\t\tCH = Math.ceil(this.canvas.clientHeight);\r\n\t\tif (this.width !== CW ||\r\n\t\t\tthis.height !== CH) {\r\n\t\t\tthis.width = CW;\r\n\t\t\tthis.height = CH;\r\n\t\t\t// Lookup the size the browser is displaying the canvas in CSS pixels\r\n\t\t\t// and compute a size needed to make our drawingbuffer match it in\r\n\t\t\t// device pixels.\r\n\t\t\tconst W = Math.ceil(CW * this.devicePixelRatio);\r\n\t\t\tconst H = Math.ceil(CH * this.devicePixelRatio);\r\n\t\t\tthis.W = W;\r\n\t\t\tthis.H = H;\r\n\t\t\tthis.canvas.width = W;\r\n\t\t\tthis.canvas.height = H;\r\n\t\t\t/*\r\n\t\t\tif (gl.canvas.width !== W ||\r\n\t\t\t\tgl.canvas.height !== H) {\r\n\t\t\t\tgl.canvas.width = W;\r\n\t\t\t\tgl.canvas.height = H;\r\n\t\t\t\t// Set the viewport to match\r\n\t\t\t\t// gl.viewport(0, 0, W, H);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\t\tbuffer.resize(gl, W, H);\r\n\t\t\t});\r\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t\t\tthis.trigger('resize');\r\n\t\t\t// gl.useProgram(this.program);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseTextures_(fragmentString: string): boolean {\r\n\t\tconst regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]*)|\\s*)/gm;\r\n\t\tlet matches;\r\n\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\r\n\t\t\tconst key = matches[1];\r\n\t\t\tconst url = matches[3];\r\n\t\t\tif (Texture.isTextureUrl(url)) {\r\n\t\t\t\tthis.textureList.push({ key, url });\r\n\t\t\t} else if (!this.buffers.has(key)) {\r\n\t\t\t\t// create empty texture\r\n\t\t\t\tthis.textureList.push({ key, url: null });\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.canvas.hasAttribute('data-textures')) {\r\n\t\t\tconst urls = this.canvas.getAttribute('data-textures').split(',');\r\n\t\t\turls.forEach((url: string, i: number) => {\r\n\t\t\t\tconst key = 'u_texture' + i;\r\n\t\t\t\tthis.textureList.push({ key, url });\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this.textureList.length > 0;\r\n\t}\r\n\r\n\tload(\r\n\t\tfragmentString?: string,\r\n\t\tvertexString?: string\r\n\t): Promise<boolean> {\r\n\t\tconst fragmentVertexString: string = Context.getFragmentVertex(this.gl, fragmentString || this.fragmentString);\r\n\t\treturn Promise.all([\r\n\t\t\tContext.getIncludes(fragmentString || this.fragmentString, this.fragmentPath === '' ? this.workpath : this.fragmentPath),\r\n\t\t\tContext.getIncludes(fragmentVertexString || vertexString || this.vertexString, this.vertexPath === '' ? this.workpath : this.vertexPath)\r\n\t\t]).then(array => {\r\n\t\t\tthis.fragmentString = array[0];\r\n\t\t\tthis.vertexString = array[1];\r\n\t\t\treturn this.createContext_();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate getContext_(): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tconst vertexString = this.vertexString;\r\n\t\tconst fragmentString = this.fragmentString;\r\n\t\tthis.vertexString = Context.getVertex(vertexString, fragmentString, this.mode);\r\n\t\tthis.fragmentString = Context.getFragment(vertexString, fragmentString, this.mode);\r\n\t\tif (Context.versionDiffers(this.gl, vertexString, fragmentString)) {\r\n\t\t\tthis.destroyContext_();\r\n\t\t\tthis.swapCanvas_();\r\n\t\t\tthis.uniforms = new Uniforms();\r\n\t\t\tthis.buffers = new Buffers();\r\n\t\t\tthis.textures = new Textures();\r\n\t\t\tthis.textureList = [];\r\n\t\t}\r\n\t\tif (!this.gl) {\r\n\t\t\tconst gl = Context.tryInferContext(vertexString, fragmentString, this.canvas, this.options, this.options.extensions, this.options.onError);\r\n\t\t\tif (!gl) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.gl = gl;\r\n\t\t}\r\n\t\treturn this.gl;\r\n\t}\r\n\r\n\tprivate createContext_(): boolean {\r\n\t\tconst gl = this.getContext_();\r\n\t\tif (!gl) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet vertexShader, fragmentShader;\r\n\t\ttry {\r\n\t\t\tContext.inferPrecision(this.fragmentString);\r\n\t\t\tvertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\r\n\t\t\tfragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER);\r\n\t\t\t// If Fragment shader fails load a empty one to sign the error\r\n\t\t\tif (!fragmentShader) {\r\n\t\t\t\tconst defaultFragment = Context.getFragment(null, null, this.mode);\r\n\t\t\t\tfragmentShader = Context.createShader(gl, defaultFragment, gl.FRAGMENT_SHADER);\r\n\t\t\t\tthis.valid = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.valid = true;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// !!!\r\n\t\t\t// console.error(e);\r\n\t\t\tthis.trigger('error', e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Create and use program\r\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\r\n\t\tif (!program) {\r\n\t\t\tthis.trigger('error', Context.lastError);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// console.log(this.vertexString, this.fragmentString, program);\r\n\t\t// Delete shaders\r\n\t\t// gl.detachShader(program, vertexShader);\r\n\t\t// gl.detachShader(program, fragmentShader);\r\n\t\tgl.deleteShader(vertexShader);\r\n\t\tgl.deleteShader(fragmentShader);\r\n\t\tthis.program = program;\r\n\t\tif (this.valid) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.buffers = Buffers.getBuffers(gl, this.fragmentString, Context.getBufferVertex(gl));\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// console.error('load', e);\r\n\t\t\t\tthis.valid = false;\r\n\t\t\t\tthis.trigger('error', e);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.create_();\r\n\t\t\tif (this.animated) {\r\n\t\t\t\tthis.canvas.classList.add('animated');\r\n\t\t\t} else {\r\n\t\t\t\tthis.canvas.classList.remove('animated');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Trigger event\r\n\t\tthis.trigger('load', this);\r\n\t\treturn this.valid;\r\n\t}\r\n\r\n\tprotected create_(): void {\r\n\t\tthis.parseMode_();\r\n\t\tthis.parseMesh_();\r\n\t\tsuper.create_();\r\n\t\tthis.createBuffers_();\r\n\t\tthis.createTextures_();\r\n\t}\r\n\r\n\tprotected parseMode_() {\r\n\t\tif (this.canvas.hasAttribute('data-mode')) {\r\n\t\t\tconst data = this.canvas.getAttribute('data-mode');\r\n\t\t\tif (['flat', 'box', 'sphere', 'torus', 'mesh'].indexOf(data) !== -1) {\r\n\t\t\t\tthis.mode = data as ContextMode;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected parseMesh_() {\r\n\t\tif (this.canvas.hasAttribute('data-mesh')) {\r\n\t\t\tconst data = this.canvas.getAttribute('data-mesh');\r\n\t\t\tif (data.indexOf('.obj') !== -1) {\r\n\t\t\t\tthis.mesh = this.defaultMesh = data;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createBuffers_() {\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected createTextures_() {\r\n\t\tconst hasTextures = this.parseTextures_(this.fragmentString);\r\n\t\tif (hasTextures) {\r\n\t\t\tthis.textureList.filter(x => x.url).forEach(x => {\r\n\t\t\t\tthis.setTexture(x.key, x.url, x.options);\r\n\t\t\t});\r\n\t\t\tthis.textureList = [];\r\n\t\t}\r\n\t}\r\n\r\n\tprotected update_(): void {\r\n\t\tsuper.update_();\r\n\t\tthis.updateBuffers_();\r\n\t\tthis.updateTextures_();\r\n\t}\r\n\r\n\tprotected updateBuffers_(): void {\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected updateTextures_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tObject.keys(this.textures.values).forEach((key) => {\r\n\t\t\tconst texture: Texture = this.textures.values[key];\r\n\t\t\ttexture.tryUpdate(gl);\r\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, texture.key, [texture.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate destroyContext_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tgl.useProgram(null);\r\n\t\tif (this.program) {\r\n\t\t\tgl.deleteProgram(this.program);\r\n\t\t}\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tbuffer.destroy(gl);\r\n\t\t});\r\n\t\tObject.keys(this.textures.values).forEach((key) => {\r\n\t\t\tconst texture: Texture = this.textures.values[key];\r\n\t\t\ttexture.destroy(gl);\r\n\t\t});\r\n\t\tthis.buffers = null;\r\n\t\tthis.textures = null;\r\n\t\tthis.uniforms = null;\r\n\t\tthis.program = null;\r\n\t\tthis.gl = null;\r\n\t}\r\n\r\n\tprivate swapCanvas_(): void {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst canvas_ = canvas.cloneNode() as HTMLCanvasElement;\r\n\t\tcanvas.parentNode.replaceChild(canvas_, canvas);\r\n\t\tthis.canvas = canvas_;\r\n\t\tthis.addCanvasListeners_();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis.removeListeners_();\r\n\t\tthis.destroyContext_();\r\n\t\tthis.animated = false;\r\n\t\tthis.valid = false;\r\n\t\tconst index = Canvas.items.indexOf(this);\r\n\t\tif (index !== -1) {\r\n\t\t\tCanvas.items.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tloadTexture(\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t) {\r\n\t\tif (this.valid) {\r\n\t\t\t// Logger.log('GlslCanvas.loadTexture', key, urlElementOrData);\r\n\t\t\tthis.textures.createOrUpdate(this.gl, key, urlElementOrData, this.buffers.count, options, this.options.workpath).then(\r\n\t\t\t\ttexture => {\r\n\t\t\t\t\tconst index = texture.index;\r\n\t\t\t\t\tconst uniform = this.uniforms.createTexture(key, index);\r\n\t\t\t\t\tuniform.texture = texture;\r\n\t\t\t\t\tconst keyResolution = key.indexOf('[') !== -1 ? key.replace('[', 'Resolution[') : key + 'Resolution';\r\n\t\t\t\t\t// const uniformResolution = ;\r\n\t\t\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, keyResolution, [texture.width, texture.height]);\r\n\t\t\t\t\t// Logger.log('loadTexture', key, url, index, texture.width, texture.height);\r\n\t\t\t\t\treturn texture;\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tconst message = Array.isArray(error.path) ? error.path.map((x: any) => x.error ? x.error.message : '').join(', ') : error.message;\r\n\t\t\t\t\tLogger.error('GlslCanvas.loadTexture.error', key, urlElementOrData, message);\r\n\t\t\t\t\tthis.trigger('textureError', { key, urlElementOrData, message });\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.textureList.push({ key, url: urlElementOrData, options });\r\n\t\t}\r\n\t}\r\n\r\n\tsetTexture(\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t): void {\r\n\t\treturn this.setUniform_(key, [urlElementOrData], options);\r\n\t}\r\n\r\n\tsetUniform(key: string, ...values: any[]): void {\r\n\t\treturn this.setUniform_(key, values);\r\n\t}\r\n\r\n\tsetUniformOfInt(key: string, values: any[]): void {\r\n\t\treturn this.setUniform_(key, values, null, UniformType.Int);\r\n\t}\r\n\r\n\tsetUniforms(values: IUniformOption): void {\r\n\t\tObject.keys(values).forEach((key) => {\r\n\t\t\tthis.setUniform(key, values[key]);\r\n\t\t});\r\n\t}\r\n\r\n\tpause(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tthis.timer.pause();\r\n\t\t\tthis.canvas.classList.add('paused');\r\n\t\t\tthis.trigger('pause');\r\n\t\t}\r\n\t}\r\n\r\n\tplay(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tthis.timer.play();\r\n\t\t\tthis.canvas.classList.remove('paused');\r\n\t\t\tthis.trigger('play');\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tif (this.timer.paused) {\r\n\t\t\t\tthis.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.pause();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcheckRender(): void {\r\n\t\tif (this.isVisible_() && (this.sizeDidChanged_() || this.isDirty_() || this.isAnimated_())) {\r\n\t\t\tthis.render();\r\n\t\t\tthis.canvas.classList.add('playing');\r\n\t\t} else {\r\n\t\t\tthis.canvas.classList.remove('playing');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\ttest(\r\n\t\tfragmentString?: string,\r\n\t\tvertexString?: string\r\n\t): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst vertex = this.vertexString;\r\n\t\t\tconst fragment = this.fragmentString;\r\n\t\t\tconst paused = this.timer.paused;\r\n\t\t\t// Thanks to @thespite for the help here\r\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\r\n\t\t\tconst extension = this.gl.getExtension('EXT_disjoint_timer_query');\r\n\t\t\tconst query = extension.createQueryEXT();\r\n\t\t\tlet wasValid = this.valid;\r\n\t\t\tif (fragmentString || vertexString) {\r\n\t\t\t\tthis.load(fragmentString, vertexString);\r\n\t\t\t\twasValid = this.valid;\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t\tthis.timer.paused = true;\r\n\t\t\textension.beginQueryEXT(extension.TIME_ELAPSED_EXT, query);\r\n\t\t\tthis.render();\r\n\t\t\textension.endQueryEXT(extension.TIME_ELAPSED_EXT);\r\n\t\t\tconst waitForTest = () => {\r\n\t\t\t\tthis.render();\r\n\t\t\t\tconst available = extension.getQueryObjectEXT(query, extension.QUERY_RESULT_AVAILABLE_EXT);\r\n\t\t\t\tconst disjoint = this.gl.getParameter(extension.GPU_DISJOINT_EXT);\r\n\t\t\t\tif (available && !disjoint) {\r\n\t\t\t\t\tconst result = {\r\n\t\t\t\t\t\twasValid: wasValid,\r\n\t\t\t\t\t\tfragment: fragmentString || this.fragmentString,\r\n\t\t\t\t\t\tvertex: vertexString || this.vertexString,\r\n\t\t\t\t\t\ttimeElapsedMs: extension.getQueryObjectEXT(query, extension.QUERY_RESULT_EXT) / 1000000.0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.timer.paused = paused;\r\n\t\t\t\t\tif (fragmentString || vertexString) {\r\n\t\t\t\t\t\tthis.load(fragment, vertex);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.requestAnimationFrame(waitForTest);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twaitForTest();\r\n\t\t});\r\n\t}\r\n\t*/\r\n\r\n}\r\n\r\n","export { Buffer, BufferFloatType, default as Buffers, IOBuffer } from './buffers/buffers';\r\nexport { default as OrbitCamera } from './camera/orbit-camera';\r\nexport { default as Canvas, ICanvasOptions } from './canvas/canvas';\r\nexport { default as CanvasTimer } from './canvas/canvas-timer';\r\nexport { DefaultWebGL2BufferFragment, DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferFragment, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './context/chunks';\r\nexport { ContextError, ContextVersion, ContextVertexBuffers, default as Context } from './context/context';\r\nexport { default as Common } from './core/common';\r\nexport { default as IterableStringMap } from './core/iterable';\r\nexport { default as Subscriber, Listener } from './core/subscriber';\r\nexport { default as BoxGeometry } from './geometry/box-geometry';\r\nexport { default as FlatGeometry } from './geometry/flat-geometry';\r\nexport { default as Geometry } from './geometry/geometry';\r\nexport { default as SphereGeometry } from './geometry/sphere-geometry';\r\nexport { default as TorusGeometry } from './geometry/torus-geometry';\r\nexport { default as ObjLoader } from './loaders/obj-loader';\r\nexport { default as Logger } from './logger/logger';\r\nexport { default as Vector2 } from './math/vector2';\r\nexport { default as Vector3 } from './math/vector3';\r\nexport { default as Renderer } from './renderer/renderer';\r\nexport { default as Textures, isTextureData, ITextureData, ITextureInput, ITextureOptions, Texture, TextureExtensions, TextureFilteringType, TextureImageExtensions, TextureSourceType, TextureVideoExtensions } from './textures/textures';\r\nexport { default as Uniforms, IUniformOption, METHODS_FLOAT, METHODS_FLOATV, METHODS_INT, METHODS_INTV, Uniform, UniformMethod, UniformTexture, UniformType } from './uniforms/uniforms';\r\n\r\nimport Canvas, { ICanvasOptions } from './canvas/canvas';\r\n\r\nexport function of(canvas: HTMLCanvasElement, options?: ICanvasOptions): Canvas {\r\n\treturn Canvas.items.find(x => x.canvas === canvas) || new Canvas(canvas, options);\r\n}\r\n\r\nexport function loadAll(): Canvas[] {\r\n\tconst canvases: HTMLCanvasElement[] = <HTMLCanvasElement[]>[].slice.call(document.getElementsByClassName('glsl-canvas')).filter((x: HTMLElement) => x instanceof HTMLCanvasElement);\r\n\treturn canvases.map(x => of(x));\r\n}\r\n\r\nif (typeof window === 'object') {\r\n\tdocument.addEventListener('DOMContentLoaded', () => {\r\n\t\tloadAll();\r\n\t});\r\n}\r\n"]}