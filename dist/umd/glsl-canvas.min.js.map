{"version":3,"sources":["src/glsl.ts","../../src/context/chunks.ts","../../node_modules/promise-polyfill/src/index.js","../../node_modules/promise-polyfill/src/finally.js","../../src/logger/logger.ts","../../src/core/common.ts","../../src/context/context.ts","../../src/buffers/buffers.ts","../../src/core/iterable.ts","../../src/geometry/geometry.ts","../../src/geometry/flat-geometry.ts","../../src/math/vector2.ts","../../src/math/vector3.ts","../../src/camera/orbit-camera.ts","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../src/textures/textures.ts","../../src/canvas/canvas-timer.ts","../../src/core/subscriber.ts","../../src/geometry/box-geometry.ts","../../src/geometry/sphere-geometry.ts","../../src/geometry/torus-geometry.ts","../../src/loaders/obj-loader.ts","../../src/uniforms/uniforms.ts","../../src/renderer/renderer.ts","../../src/canvas/canvas.ts","../../src/glsl.ts"],"names":["global","factory","exports","module","define","amd","self","glsl","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","_assertThisInitialized","ReferenceError","DefaultWebGLVertexAttributes_","DefaultWebGLFragmentAttributes_","DefaultWebGL2VertexAttributes_","DefaultWebGL2FragmentAttributes_","DefaultWebGLUniform_","DefaultWebGLFlatVertex_","DefaultWebGLMeshVertex_","DefaultWebGLMeshVertex","DefaultWebGL2MeshVertex","DefaultWebGLFlatFragment","DefaultWebGL2FlatFragment","DefaultWebGLMeshFragment","DefaultWebGL2MeshFragment","DefaultWebGLBufferVertex","DefaultWebGL2BufferVertex","DefaultWebGLBufferFragment","DefaultWebGL2BufferFragment","setTimeoutFunc","setTimeout","isArray","x","Boolean","noop","Promise","fn","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","reject","promise","resolve","push","newValue","then","finale","thisArg","apply","arguments","_unhandledRejectionFn","len","Handler","done","value","reason","ex","prom","callback","all","arr","args","Array","slice","call","remaining","res","val","race","setImmediate","err","console","warn","LoggerLevel","Common","fetch","url","xhr","XMLHttpRequest","onload","response","responseText","onerror","error","log","Error","ontimeout","onabort","open","send","ContextVersion","ContextPrecision","ContextMode","Logger","_console","enabled","level","Log","_console2","Warn","_console3","ContextError","ContextDefault","webgl","flat","vertex","fragment","mesh","webgl2","ContextVertexBuffers","Context","getContext_","canvas","options","names","context","getContext","getContext2_","getFragmentVertex","gl","fragmentString","vertexString","isWebGl2","replace","exec","getIncludes","input","match","regex","promises","index","chunks","join","isWebGl","WebGLRenderingContext","window","WebGL2RenderingContext","inferVersion","source","indexOf","WebGl2","WebGl","inferPrecision","precision","versionDiffers","currentVersion","getBufferVertex","getVertex","mode","Flat","version","getFragment","tryInferContext","attributes","extensions","errorCallback","handleError","errorCode","html","container","parentNode","innerHTML","BrowserSupport","inferContext","supportedExtensions","getSupportedExtensions","forEach","getExtension","Other","tryGetContext","createShader","type","offset","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","locations","program","attachShader","bindAttribLocation","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","createVertexBuffers","vertexBuffers","texcoordIndex","getAttribLocation","texcoord","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionIndex","position","MediumP","BufferFloatType","StringMap","IterableStringMap","values","_proto","has","hasOwnProperty","set","item","get","callbackfn","reduce","initialValue","previous","Geometry","assign","positions","size","createData_","createAttributes_","createBufferData_","array","buffer","createAttribLocation_","name","location","positionBuffer","positionLocation","texcoords","texcoordBuffer","texcoordLocation","normals","normalBuffer","normalLocation","colors","colorBuffer","colorLocation","attachAttributes_","attribLocation","bindAttributes_","fromIndices","indices","FlatGeometry","_Geometry","Buffer","BW","BH","createFramebuffer","texture","getTexture","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","getFloatType","floatType","extension","extensionName","HALF_FLOAT","HALF_FLOAT_OES","createTexture","activeTexture","TEXTURE0","bindTexture","texImage2D","RGBA16F","RGBA","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","resize","bindFramebuffer","pixels","status","minW","Math","min","minH","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","deleteTexture","IOBuffer","isValid","geometry","_proto2","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","output","render","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","drawArrays","TRIANGLES","destroy","Buffers","_IterableStringMap","Constructor","protoProps","staticProps","getBuffers","buffers","count","matches","regexp","bufferFragmentString","drawingBufferWidth","drawingBufferHeight","keys","Vector2","y","isVector2","copy","v","sqrt","normalize","divideScalar","scalar","multiplyScalar","subVectors","a","b","addVectors","Vector3","z","isVector3","crossVectors","ax","ay","az","bx","by","bz","RAD","PI","OrbitCamera","theta","phi","radius","_this","_Vector","mouse","dirty","down","move","max","up","wheel","d","fromVector","vector","acos","atan","ARRAY_TYPE","out","glMatrix.ARRAY_TYPE","identity","rotate","rad","axis","s","c","t","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","b00","b01","b02","b10","b11","b12","b20","b21","b22","hypot","sin","cos","TextureSourceType","TextureFilteringType","CanvasTimer","delay","current","delta","paused","start","now","performance","play","pause","next","Listener","event","Subscriber","listeners","Set","logListeners","subscribe","listener","add","unsubscribe","delete","unsubscribeAll","on","off","trigger","_len","data","BoxGeometry","faceColors","j","concat","SphereGeometry","ix","iy","phiLength","thetaLength","p","n","thetaEnd","grid","positionRow","uOffset","u","uvx","uvy","heightDivisions","TorusGeometry","normal","p1","p2","B","T","N","calculatePositionOnCurve","cx","cy","round","q","cu","su","quOverP","cs","COLORS","CI","ObjLoader","load","text","parse","parseIndices","faceIndices","k","l","NaN","parseFaces","F","V","VN","VT","_this2","si","vl","fill","rgb","_this3","split","line","trim","map","parseFloat","f","parseInt","boundingBox","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","dx","dy","dz","unrapUvw","pitch","asin","yaw","atan2","tx","ty","TextureImageExtensions","TextureVideoExtensions","TextureExtensions","isTextureData","object","UniformMethod","UniformType","Texture","_Subscriber","workpath","filtering","Linear","valid","animated","powerOf2","isPowerOf2","isSafari","test","navigator","userAgent","isTextureUrl","isTexture","urlElementOrData","getTextureOptions","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","prev","curr","params","decodeURIComponent","document","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","element","width","height","setData","Uint8Array","setUrl","setElement","sourceType","Url","src","String","ext","pop","toLowerCase","createElement","setAttribute","loop","muted","addEventListener","crossOrigin","originalElement","Element","video","update","setFiltering","message","JSON","stringify","Data","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","naturalWidth","naturalHeight","UNSIGNED_BYTE","videoWidth","videoHeight","imageBuffer","tryUpdate","MipMap","wrapS","repeat","REPEAT","wrapT","LINEAR_MIPMAP_LINEAR","LINEAR","generateMipmap","Nearest","Textures","clean","createOrUpdate","_this4","textureOptions","flag","METHODS_INT","Uniform1i","Uniform2i","Uniform3i","Uniform4i","METHODS_FLOAT","Uniform1f","Uniform2f","Uniform3f","Uniform4f","METHODS_INTV","Uniform1iv","Uniform2iv","Uniform3iv","Uniform4iv","METHODS_FLOATV","Uniform1fv","Uniform2fv","Uniform3fv","Uniform4fv","Uniform","method","UniformMatrix2fv","UniformMatrix3fv","UniformMatrix4fv","getUniformLocation","UniformTexture","_Uniform","Uniforms","isArrayOfInteger","isInteger","isArrayOfNumber","isArrayOfBoolean","isArrayOfTexture","isArrayOfSampler2D","Sampler2D","getType_","Unknown","subject","Float","Bool","getMethod_","isVector","Int","parseUniform","uniform","isDifferent","Renderer","uniforms","textures","textureList","W","H","radians","camera","cache","drawFunc_","drawArrays_","update_","timer","deltaTime","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","doubleSided","cullFace","FRONT","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","BACK","create_","createGeometry_","createUniforms_","parseGeometry_","setMode","defaultMesh","hasDelta","hasTime","hasDate","hasMouse","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","projectionMatrix","mat4","modelViewMatrix","normalMatrix","updateUniforms_","updateProjectionMatrix_","updateModelViewMatrix_","updateNormalMatrix_","fieldOfView","aspect","fovy","near","far","nf","tan","Infinity","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","det","Mesh","Box","Sphere","Torus","getResource","setMesh","Canvas","_Renderer","visible","controls","rect","getBoundingClientRect","devicePixelRatio","style","backgroundColor","getShaders_","success","addListeners_","onLoop","items","urls","hasAttribute","getAttribute","body","onScroll","bind","onWheel","onClick","onMove","onMouseDown","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onTouchMove","onTouchEnd","onTouchStart","addCanvasListeners_","removeCanvasListeners_","removeEventListener","removeListeners_","cancelAnimationFrame","rafId","deltaY","toggle","onDown","mx","my","left","top","onUp","clientX","clientY","touch","touches","time","checkRender","requestAnimationFrame","setUniform_","loadTexture","isVisible_","innerHeight","documentElement","clientHeight","isAnimated_","isDirty_","sizeDidChanged_","CW","ceil","clientWidth","CH","parseTextures_","_this5","fragmentVertexString","createContext_","destroyContext_","swapCanvas_","onError","defaultFragment","classList","remove","parseMode_","parseMesh_","createBuffers_","createTextures_","_this6","filter","setTexture","updateBuffers_","updateTextures_","canvas_","cloneNode","replaceChild","splice","_this7","keyResolution","path","setUniform","setUniformOfInt","setUniforms","of","find","loadAll","getElementsByClassName"],"mappings":"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","file":"dist/umd/glsl-canvas.min.js","sourcesContent":[null,"\nexport const DefaultWebGLVertexAttributes_ = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec4 a_position;\nattribute vec4 a_normal;\nattribute vec2 a_texcoord;\nattribute vec4 a_color;\n\nvarying vec4 v_position;\nvarying vec4 v_normal;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\n`;\n\nexport const DefaultWebGLFragmentAttributes_ = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec4 v_position;\nvarying vec4 v_normal;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\n`;\n\nexport const DefaultWebGL2VertexAttributes_ = `#version 300 es\n\nprecision mediump float;\n\nin vec4 a_position;\nin vec4 a_normal;\nin vec2 a_texcoord;\nin vec4 a_color;\n\nout vec4 v_position;\nout vec4 v_normal;\nout vec2 v_texcoord;\nout vec4 v_color;\n`;\n\nexport const DefaultWebGL2FragmentAttributes_ = `#version 300 es\n\nprecision mediump float;\n\nin vec4 v_position;\nin vec4 v_normal;\nin vec2 v_texcoord;\nin vec4 v_color;\n\nout vec4 outColor;\n`;\n\nexport const DefaultWebGLUniform_ = `\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_modelViewMatrix;\nuniform mat4 u_normalMatrix;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n`;\n\nexport const DefaultWebGL2Uniform_ = DefaultWebGLUniform_;\n\nexport const DefaultWebGLFlatVertex_ = `\nvoid main() {\n\tv_position = a_position;\n\tv_normal = a_normal;\n\tv_texcoord = a_texcoord;\n\tv_color = a_color;\n\tgl_Position = a_position;\n}\n`;\n\nexport const DefaultWebGLMeshVertex_ = `\nvoid main(void) {\n\tv_position = u_projectionMatrix * u_modelViewMatrix * a_position;\n\tv_normal = u_normalMatrix * a_normal;\n\tv_texcoord = a_texcoord;\n\tv_color = a_color;\n\tgl_Position = v_position;\n}\n`;\n\nexport const DefaultWebGLFlatFragment_ = `\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGL2FlatFragment_ = `\nvoid main() {\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= u_resolution.x / u_resolution.y;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * st.y,\n\t\tabs(cos(u_time * 0.2)) * st.y,\n\t\tabs(sin(u_time)) * st.y\n\t);\n\toutColor = vec4(color, 1.0);\n}\n`;\n\nexport const DefaultWebGLMeshFragment_ = `\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\n\tgl_FragColor = vec4(v_color.rgb * color * light, 1.0);\n}\n`;\n\nexport const DefaultWebGL2MeshFragment_ = `\nvoid main() {\n\tvec2 uv = v_texcoord;\n\tvec3 color = vec3(\n\t\tabs(cos(u_time * 0.1)) * uv.y,\n\t\tabs(cos(u_time * 0.2)) * uv.y,\n\t\tabs(sin(u_time)) * uv.y\n\t);\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\n\toutColor = vec4(v_color.rgb * color * light, 1.0);\n}\n`;\n\nexport const DefaultWebGLBufferFragment_ = `\nvoid main(){\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}`;\n\nexport const DefaultWebGL2BufferFragment_ = `\nvoid main() {\n\toutColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n`;\n\n//\nexport const DefaultWebGLMeshVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\nexport const DefaultWebGL2MeshVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\nexport const DefaultWebGLFlatFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatFragment_;\nexport const DefaultWebGL2FlatFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2FlatFragment_;\nexport const DefaultWebGLMeshFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshFragment_;\nexport const DefaultWebGL2MeshFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2MeshFragment_;\n//\nexport const DefaultWebGLBufferVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\nexport const DefaultWebGL2BufferVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\nexport const DefaultWebGLBufferFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLBufferFragment_;\nexport const DefaultWebGL2BufferFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2BufferFragment_;\n//\n\n","import promiseFinally from './finally';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = promiseFinally;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n","/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nexport default finallyConstructor;\n","export enum LoggerLevel {\n\tNone = 0,\n\tError = 1,\n\tWarn = 2,\n\tLog = 3,\n}\n\nexport default class Logger {\n\n\tstatic level: LoggerLevel = LoggerLevel.Warn;\n\n\tstatic enabled: boolean = true;\n\n\tstatic log(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Log) {\n\t\t\tconsole.log(...datas);\n\t\t}\n\t}\n\n\tstatic warn(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Warn) {\n\t\t\tconsole.warn(...datas);\n\t\t}\n\t}\n\n\tstatic error(...datas: any[]) {\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Error) {\n\t\t\tconsole.error(...datas);\n\t\t}\n\t}\n\n}\n","import 'promise-polyfill';\n\nexport default class Common {\n\tstatic fetch(url: string): Promise<string> {\n\t\t// console.log('Common.fetch', url);\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\n\t\t\txhr.onload = function () {\n\t\t\t\tresolve(xhr.response || xhr.responseText);\n\t\t\t};\n\t\t\txhr.onerror = function (error) {\n\t\t\t\tconsole.log('Common.error', error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.ontimeout = function (error) {\n\t\t\t\t// console.log(error);\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\n\t\t\t};\n\t\t\txhr.onabort = function () {\n\t\t\t\treject(new Error('Aborted'));\n\t\t\t};\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.send(null);\n\t\t})\n\t}\n}\n","import Common from '../core/common';\nimport Logger from '../logger/logger';\nimport { DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './chunks';\n\nexport enum ContextVersion {\n\tWebGl = 'webgl',\n\tWebGl2 = 'webgl2',\n}\n\nexport enum ContextPrecision {\n\tLowP = 'lowp',\n\tMediumP = 'mediump',\n\tHighP = 'highp',\n}\n\nexport enum ContextMode {\n\tFlat = 'flat',\n\tBox = 'box',\n\tSphere = 'sphere',\n\tTorus = 'torus',\n\tMesh = 'mesh',\n}\n\nexport const ContextDefault = {\n\t'webgl': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLFlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGLMeshVertex,\n\t\t\tfragment: DefaultWebGLMeshFragment,\n\t\t}\n\t},\n\t'webgl2': {\n\t\t'flat': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2FlatFragment,\n\t\t},\n\t\t'mesh': {\n\t\t\tvertex: DefaultWebGL2MeshVertex,\n\t\t\tfragment: DefaultWebGL2MeshFragment,\n\t\t}\n\t}\n};\n\nexport enum ContextError {\n\tBrowserSupport = 1,\n\tOther = 2,\n}\n\nexport class ContextVertexBuffers {\n\ttexcoord: WebGLBuffer;\n\tposition: WebGLBuffer;\n}\n\nexport default class Context {\n\n\tstatic precision: ContextPrecision = ContextPrecision.MediumP;\n\tstatic lastError: string = '';\n\n\tstatic getContext_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext {\n\t\tconst names = ['webgl', 'experimental-webgl'];\n\t\tlet context = null;\n\t\tfor (let i = 0; i < names.length; ++i) {\n\t\t\ttry {\n\t\t\t\tcontext = canvas.getContext(names[i], options) as WebGLRenderingContext;\n\t\t\t} catch (e) {\n\t\t\t\tif (context) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getContext2_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGL2RenderingContext {\n\t\tlet context = null;\n\t\ttry {\n\t\t\tcontext = canvas.getContext('webgl2', options) as WebGL2RenderingContext;\n\t\t} catch (e) {\n\t\t\t// console.error('GlslCanvas.Context.getContext2_.error', e);\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic getFragmentVertex(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string): string {\n\t\tlet vertexString;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*VERTEX)(?:\\s*\\))|(?:#ifdef)(?:\\s*VERTEX)(?:\\s*))/gm;\n\t\t\tconst matches = regexp.exec(fragmentString);\n\t\t\tif (matches !== null) {\n\t\t\t\tvertexString = Context.isWebGl2(gl) ? `#version 300 es\n#define VERTEX\n${fragmentString}` : `#define VERTEX\n${fragmentString}`;\n\t\t\t}\n\t\t}\n\t\t// console.log('vertexString', vertexString);\n\t\treturn vertexString;\n\t}\n\n\tstatic getIncludes(input: string | undefined): Promise<string | undefined> {\n\t\tif (input === undefined) {\n\t\t\treturn Promise.resolve(input);\n\t\t}\n\t\tconst regex = /#include\\s*['|\"](.*.glsl)['|\"]/gm;\n\t\tconst promises = [];\n\t\tlet i = 0;\n\t\tlet match;\n\t\twhile ((match = regex.exec(input)) !== null) {\n\t\t\tpromises.push(Promise.resolve(input.slice(i, match.index)));\n\t\t\ti = match.index + match[0].length;\n\t\t\tpromises.push(Common.fetch(match[1]));\n\t\t}\n\t\tpromises.push(Promise.resolve(input.slice(i)));\n\t\treturn Promise.all(promises).then(chunks => {\n\t\t\treturn chunks.join('');\n\t\t});\n\t}\n\n\tstatic isWebGl(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\treturn context instanceof WebGLRenderingContext;\n\t}\n\n\tstatic isWebGl2(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\t// console.log(context);\n\t\t// return context !== undefined && typeof (context as any).bindBufferRange === 'function';\n\t\treturn (window as any).WebGL2RenderingContext && context instanceof WebGL2RenderingContext;\n\t}\n\n\tstatic inferVersion(vertexString?: string, fragmentString?: string): ContextVersion {\n\t\tconst source: string = vertexString || fragmentString;\n\t\tif (source) {\n\t\t\treturn source.indexOf('#version 300 es') === 0 ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t} else {\n\t\t\treturn ContextVersion.WebGl;\n\t\t}\n\t}\n\n\tstatic inferPrecision(fragmentString: string): ContextPrecision {\n\t\tconst precision: RegExpMatchArray = fragmentString.match(/precision\\s+(.+)\\s+float/);\n\t\tif (precision && precision.length > 1) {\n\t\t\tContext.precision = precision[1] as ContextPrecision;\n\t\t}\n\t\t// console.log('precision', Context.precision);\n\t\treturn Context.precision;\n\t}\n\n\tstatic versionDiffers(gl: WebGLRenderingContext | WebGL2RenderingContext, vertexString?: string, fragmentString?: string): boolean {\n\t\tif (gl) {\n\t\t\tconst currentVersion = this.isWebGl2(gl) ? ContextVersion.WebGl2 : ContextVersion.WebGl;\n\t\t\tconst newVersion = Context.inferVersion(vertexString, fragmentString);\n\t\t\treturn newVersion !== currentVersion;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic getBufferVertex(gl: WebGLRenderingContext | WebGL2RenderingContext): string {\n\t\treturn this.isWebGl2(gl) ? DefaultWebGL2BufferVertex : DefaultWebGLBufferVertex;\n\t}\n\n\tstatic getVertex(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\n\t\tif (vertexString) {\n\t\t\treturn vertexString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].vertex;\n\t\t}\n\t}\n\n\tstatic getFragment(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\n\t\tif (fragmentString) {\n\t\t\treturn fragmentString;\n\t\t} else {\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].fragment;\n\t\t}\n\t}\n\n\tstatic tryInferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, extensions: string[] = [], errorCallback: Function): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext | WebGL2RenderingContext = Context.inferContext(vertexString, fragmentString, canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tif (!(this.isWebGl2(context)) && extensions.indexOf('OES_standard_derivatives') === -1) {\n\t\t\t\textensions.push('OES_standard_derivatives');\n\t\t\t}\n\t\t\tconst supportedExtensions = context.getSupportedExtensions();\n\t\t\textensions.forEach(key => {\n\t\t\t\tif (supportedExtensions.indexOf(key) !== -1) {\n\t\t\t\t\tcontext.getExtension(key);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.warn(`GlslCanvas ${key} not supported`);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// context.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic tryGetContext(canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, errorCallback: Function): WebGLRenderingContext {\n\t\tfunction handleError(errorCode: number, html: string) {\n\t\t\tif (typeof errorCallback === 'function') {\n\t\t\t\terrorCallback(errorCode);\n\t\t\t} else {\n\t\t\t\tconst container = canvas.parentNode;\n\t\t\t\tif (container) {\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!WebGLRenderingContext) {\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\n\t\t\treturn null;\n\t\t}\n\t\tconst context: WebGLRenderingContext = Context.getContext_(canvas, attributes);\n\t\tif (!context) {\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\n\t\t} else {\n\t\t\tcontext.getExtension('OES_standard_derivatives');\n\t\t}\n\t\treturn context;\n\t}\n\n\tstatic inferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\n\t\treturn version === ContextVersion.WebGl2 ? this.getContext2_(canvas, options) : this.getContext_(canvas, options);\n\t}\n\n\tstatic createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, source: string, type: number, offset: number = 0): WebGLShader {\n\t\tconst shader = gl.createShader(type);\n\t\tsource = source.replace(/precision\\s+(.+)\\s+float/, `precision ${Context.precision} float`);\n\t\tgl.shaderSource(shader, source);\n\t\tgl.compileShader(shader);\n\t\tconst compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tif (!compiled) {\n\t\t\t// Something went wrong during compilation; get the error\n\t\t\tContext.lastError = gl.getShaderInfoLog(shader);\n\t\t\t// console.log('lastError', Context.lastError);\n\t\t\tLogger.error(`*** Error compiling shader: ${Context.lastError}`);\n\t\t\t// main.trigger('error', {\n\t\t\tgl.deleteShader(shader);\n\t\t\tthrow ({\n\t\t\t\tshader: shader,\n\t\t\t\tsource: source,\n\t\t\t\ttype: type,\n\t\t\t\terror: Context.lastError,\n\t\t\t\toffset: offset\n\t\t\t});\n\t\t}\n\t\treturn shader;\n\t}\n\n\tstatic createProgram(gl: WebGLRenderingContext | WebGL2RenderingContext, shaders: WebGLShader[], attributes?: any[], locations?: number[]): WebGLProgram {\n\t\tconst program = gl.createProgram();\n\t\tfor (let i = 0; i < shaders.length; ++i) {\n\t\t\tgl.attachShader(program, shaders[i]);\n\t\t}\n\t\tif (attributes && locations) {\n\t\t\tfor (let i = 0; i < attributes.length; ++i) {\n\t\t\t\tgl.bindAttribLocation(program, locations ? locations[i] : i, attributes[i]);\n\t\t\t}\n\t\t}\n\t\tgl.linkProgram(program);\n\t\tgl.validateProgram(program);\n\t\t// Check the link status\n\t\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\t\tif (!linked) {\n\t\t\t// something went wrong with the link\n\t\t\tContext.lastError = gl.getProgramInfoLog(program);\n\t\t\tLogger.error(`Error in program linking: ${Context.lastError}`);\n\t\t\tgl.deleteProgram(program);\n\t\t\treturn null;\n\t\t}\n\t\tgl.useProgram(program);\n\t\treturn program;\n\t}\n\n\tstatic createVertexBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram): ContextVertexBuffers {\n\t\tconst vertexBuffers: ContextVertexBuffers = new ContextVertexBuffers();\n\t\tconst texcoordIndex: number = gl.getAttribLocation(program, 'a_texcoord');\n\t\tvertexBuffers.texcoord = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.texcoord);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(texcoordIndex);\n\t\tgl.vertexAttribPointer(texcoordIndex, 2, gl.FLOAT, false, 0, 0);\n\t\tconst positionIndex: number = gl.getAttribLocation(program, 'a_position');\n\t\tvertexBuffers.position = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.position);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n\t\tgl.enableVertexAttribArray(positionIndex);\n\t\tgl.vertexAttribPointer(positionIndex, 2, gl.FLOAT, false, 0, 0);\n\t\treturn vertexBuffers;\n\t}\n\n}\n","import { DefaultWebGL2BufferFragment, DefaultWebGLBufferFragment } from '../context/chunks';\nimport Context from '../context/context';\nimport IterableStringMap from '../core/iterable';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\n\nexport enum BufferFloatType {\n\tFLOAT = 0,\n\tHALF_FLOAT,\n}\n\nexport class Buffer {\n\n\tstatic floatType: BufferFloatType = BufferFloatType.HALF_FLOAT;\n\ttexture: WebGLTexture;\n\tbuffer: WebGLFramebuffer;\n\tBW: number;\n\tBH: number;\n\tindex: number;\n\n\tconstructor(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number) {\n\t\t// BW = BH = 1024;\n\t\tconst buffer = gl.createFramebuffer();\n\t\tconst texture = this.getTexture(gl, BW, BH, index);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tthis.texture = texture;\n\t\tthis.buffer = buffer;\n\t\tthis.BW = BW;\n\t\tthis.BH = BH;\n\t\tthis.index = index;\n\t}\n\n\tgetFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\tlet floatType: number, extension;\n\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_float' : 'OES_texture_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = gl.FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t} else {\n\t\t\tconst extensionName = Context.isWebGl2(gl) ? 'EXT_color_buffer_half_float' : 'OES_texture_half_float';\n\t\t\textension = gl.getExtension(extensionName);\n\t\t\tif (extension) {\n\t\t\t\tfloatType = extension.HALF_FLOAT_OES;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t\treturn this.getFloatType(gl);\n\t\t\t}\n\t\t}\n\t\treturn floatType;\n\t}\n\n\tgetTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number): WebGLTexture {\n\t\t// BW = BH = 1024;\n\t\tconst floatType = this.getFloatType(gl);\n\t\tconst texture = gl.createTexture();\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, (Context.isWebGl2(gl) ? (gl as WebGL2RenderingContext).RGBA16F : gl.RGBA), BW, BH, 0, gl.RGBA, floatType, null);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tif (Buffer.floatType === BufferFloatType.FLOAT) {\n\t\t\t\tBuffer.floatType = BufferFloatType.HALF_FLOAT;\n\t\t\t} else {\n\t\t\t\tBuffer.floatType = BufferFloatType.FLOAT;\n\t\t\t}\n\t\t\treturn this.getTexture(gl, BW, BH, index);\n\t\t}\n\t\treturn texture;\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tif (BW !== this.BW || BH !== this.BH) {\n\t\t\tconst buffer = this.buffer;\n\t\t\tconst texture = this.texture;\n\t\t\tconst index = this.index;\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t\tconst minW = Math.min(BW, this.BW);\n\t\t\tconst minH = Math.min(BH, this.BH);\n\t\t\tlet pixels: Float32Array;\n\t\t\tlet floatType = this.getFloatType(gl);\n\t\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tpixels = new Float32Array(minW * minH * 4);\n\t\t\t\tgl.readPixels(0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tconst newIndex = index + 1; // temporary index\n\t\t\tconst newTexture = this.getTexture(gl, BW, BH, newIndex);\n\t\t\tfloatType = this.getFloatType(gl);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tif (pixels) {\n\t\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, floatType, pixels);\n\t\t\t}\n\t\t\tconst newBuffer = gl.createFramebuffer();\n\t\t\t/*\n\t\t\tif (!newBuffer) {\n\t\t\t\tLogger.error('Failed to create the frame buffer object');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t*/\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\tgl.deleteTexture(texture);\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, newTexture);\n\t\t\tthis.index = index;\n\t\t\tthis.texture = newTexture;\n\t\t\tthis.buffer = newBuffer;\n\t\t\tthis.BW = BW;\n\t\t\tthis.BH = BH;\n\t\t}\n\t}\n\n}\n\nexport class IOBuffer {\n\n\tprogram: WebGLProgram;\n\tgeometry: Geometry;\n\tinput: Buffer;\n\toutput: Buffer;\n\tindex: number;\n\tkey: string;\n\tvertexString: string;\n\tfragmentString: string;\n\tBW: number;\n\tBH: number;\n\tisValid: boolean = false;\n\n\tconstructor(index: number, key: string, vertexString: string, fragmentString: string) {\n\t\tthis.index = index;\n\t\tthis.key = key;\n\t\tthis.vertexString = vertexString;\n\t\tthis.fragmentString = fragmentString;\n\t\tthis.geometry = new FlatGeometry();\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tconst vertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\tlet fragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER, 1);\n\t\tif (!fragmentShader) {\n\t\t\tfragmentShader = Context.createShader(gl, Context.isWebGl2(gl) ? DefaultWebGL2BufferFragment : DefaultWebGLBufferFragment, gl.FRAGMENT_SHADER);\n\t\t\tthis.isValid = false;\n\t\t} else {\n\t\t\tthis.isValid = true;\n\t\t}\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]);\n\t\tif (!program) {\n\t\t\tthis.isValid = false;\n\t\t\tgl.deleteShader(vertexShader);\n\t\t\tgl.deleteShader(fragmentShader);\n\t\t\treturn;\n\t\t}\n\t\tthis.geometry.create(gl, program);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tconst input = new Buffer(gl, BW, BH, this.index + 0);\n\t\tconst output = new Buffer(gl, BW, BH, this.index + 2);\n\t\tthis.program = program;\n\t\tthis.input = input;\n\t\tthis.output = output;\n\t\t// console.log(geometry.position.length / 3, geometry.size);\n\t\t// console.log(gl.getProgramInfoLog(program));\n\t\t// Context.lastError = gl.getProgramInfoLog(program);\n\t\t// Logger.warn(`Error in program linking: ${Context.lastError}`);\n\t}\n\n\trender(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tgl.useProgram(this.program);\n\t\t// gl.activeTexture(gl.TEXTURE0);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.input.texture);\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.output.buffer);\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.output.texture);\n\t\t// console.log(this.output.texture);\n\t\t// console.log('binding', gl.getParameter(gl.FRAMEBUFFER_BINDING));\n\t\t// gl.enable(gl.DEPTH_TEST); // Enable depth testing\n\t\t// gl.depthFunc(gl.LEQUAL); // Near things obscure far things\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t// Clear the canvas before we start drawing on it.\n\t\t\tgl.clearColor(0, 0, 0, 1);  // black\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\t}\n\t\t// this.geometry.createAttributes_(gl, this.program);\n\t\t// this.geometry.bindAttributes_(gl, this.program);\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// console.log(this.geometry.size);\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// console.log(BW, BH);\n\t\t// console.log(gl.getProgramInfoLog(this.program));\n\t\t// swap\n\t\tconst input = this.input;\n\t\t// const output = this.output;\n\t\tthis.input = this.output;\n\t\tthis.output = input;\n\t\t// console.log('swap');\n\t}\n\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\n\t\t// BW = BH = 1024;\n\t\tgl.useProgram(this.program);\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tthis.input.resize(gl, BW, BH);\n\t\tthis.output.resize(gl, BW, BH);\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n\t\tgl.deleteProgram(this.program);\n\t\tthis.program = null;\n\t\tthis.input = null;\n\t\tthis.output = null;\n\t}\n\n}\n\nexport default class Buffers extends IterableStringMap<IOBuffer> {\n\n\tget count(): number {\n\t\treturn Object.keys(this.values).length * 4;\n\t}\n\n\tstatic getBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string, vertexString: string): Buffers {\n\t\tconst buffers: Buffers = new Buffers();\n\t\tlet count = 0;\n\t\tif (fragmentString) {\n\t\t\tif (Context.isWebGl2(gl)) {\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\n\t\t\t}\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm;\n\t\t\tlet matches;\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\t\tconst i = matches[3] || matches[4];\n\t\t\t\tconst key = 'u_buffer' + i;\n\t\t\t\tconst bufferFragmentString = Context.isWebGl2(gl) ? `#version 300 es\n#define BUFFER_${i}\n${fragmentString}` : `#define BUFFER_${i}\n${fragmentString}`;\n\t\t\t\tconst buffer = new IOBuffer(count, key, vertexString, bufferFragmentString);\n\t\t\t\tbuffer.create(gl, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\tif (buffer.program) {\n\t\t\t\t\tbuffers.set(key, buffer);\n\t\t\t\t} else {\n\t\t\t\t\tthrow (`buffer error ${key}`);\n\t\t\t\t}\n\t\t\t\tcount += 4;\n\t\t\t}\n\t\t}\n\t\treturn buffers;\n\t}\n\n}\n","export class NumberMap<T> { [key: number]: T; };\nexport class StringMap<T> { [key: string]: T; };\n\nexport default class IterableStringMap<T> {\n\n\tvalues: StringMap<T> = new StringMap<T>();\n\n\thas(key: string) {\n\t\treturn this.values.hasOwnProperty(key);\n\t}\n\n\tset(key: string, item: T) {\n\t\tthis.values[key] = item;\n\t}\n\n\tget(key: string): T {\n\t\treturn this.values[key];\n\t}\n\n\tforEach(callbackfn: Function) {\n\t\tlet i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tcallbackfn(this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t}\n\n\treduce(callbackfn: Function, initialValue?: any) {\n\t\tlet previous = initialValue, i = 0;\n\t\tfor (const key in this.values) {\n\t\t\tprevious = callbackfn(previous, this.values[key], i, this.values);\n\t\t\ti++;\n\t\t}\n\t\treturn previous;\n\t}\n\n}\n","export interface IGeometry {\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n}\n\nexport default class Geometry implements IGeometry {\n\n\tpositions: number[];\n\tcolors: number[];\n\tnormals: number[];\n\ttexcoords: number[];\n\n\tpositionBuffer: WebGLBuffer;\n\tcolorBuffer: WebGLBuffer;\n\tnormalBuffer: WebGLBuffer;\n\ttexcoordBuffer: WebGLBuffer;\n\n\tpositionLocation: number;\n\tcolorLocation: number;\n\tnormalLocation: number;\n\ttexcoordLocation: number;\n\n\tsize: number;\n\n\tconstructor(options?: IGeometry) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (this.positions) {\n\t\t\t\tthis.size = this.positions.length / 3;\n\t\t\t}\n\t\t\t// this.positions = Geometry.fromIndices(options.indices, options.positions, 3);\n\t\t\t// this.normals = Geometry.fromIndices(options.indices, options.normals, 3);\n\t\t\t// this.texcoords = Geometry.fromIndices(options.indices, options.texcoords, 2);\n\t\t\t// this.colors = Geometry.fromIndices(options.indices, options.colors, 4);\n\t\t}\n\t}\n\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tthis.createData_();\n\t\tthis.createAttributes_(gl, program);\n\t}\n\n\tcreateBufferData_(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, array: BufferSource) {\n\t\tconst buffer = gl.createBuffer();\n\t\tgl.bindBuffer(type, buffer);\n\t\tgl.bufferData(type, array, gl.STATIC_DRAW);\n\t\treturn buffer;\n\t}\n\n\tcreateAttribLocation_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram, name: string, size: number, type: number) {\n\t\tconst location: number = gl.getAttribLocation(program, name);\n\t\tgl.enableVertexAttribArray(location);\n\t\tgl.vertexAttribPointer(location, size, type, false, 0, 0);\n\t\treturn location;\n\t}\n\n\tcreateAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tthis.positionBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions));\n\t\t\tthis.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tthis.texcoordBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.texcoords));\n\t\t\tthis.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tthis.normalBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.normals));\n\t\t\tthis.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tthis.colorBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.colors));\n\t\t\tthis.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t\t// console.log('positionLocation', this.positionLocation);\n\t\t// console.log('texcoordLocation', this.texcoordLocation);\n\t\t// console.log('normalLocation', this.normalLocation);\n\t\t// console.log('colorLocation', this.colorLocation);\n\t}\n\n\tattachAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tlet attribLocation: number;\n\t\tif (this.positions) {\n\t\t\t// this.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_position');\n\t\t\tgl.enableVertexAttribArray(attribLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\t\t\tgl.vertexAttribPointer(attribLocation, this.positions.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t\t// console.log('positionLocation', attribLocation);\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\t// this.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_texcoord');\n\t\t\tgl.enableVertexAttribArray(this.texcoordLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\t\t\tgl.vertexAttribPointer(this.texcoordLocation, this.texcoords.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t\t// console.log('texcoordLocation', attribLocation);\n\t\t}\n\t\tif (this.normals) {\n\t\t\t// this.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_normal');\n\t\t\tgl.enableVertexAttribArray(this.normalLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n\t\t\tgl.vertexAttribPointer(this.normalLocation, this.normals.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t\t// console.log('normalLocation', attribLocation);\n\t\t}\n\t\tif (this.colors) {\n\t\t\t// this.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_color');\n\t\t\tgl.enableVertexAttribArray(this.colorLocation);\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n\t\t\tgl.vertexAttribPointer(this.colorLocation, this.colors.length / this.size, gl.FLOAT, false, 0, 0);\n\t\t\t// gl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t\t// console.log('colorLocation', attribLocation);\n\t\t}\n\t}\n\n\tbindAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tif (this.positions) {\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\n\t\t}\n\t\tif (this.texcoords) {\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\n\t\t}\n\t\tif (this.normals) {\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\n\t\t}\n\t\tif (this.colors) {\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\n\t\t}\n\t}\n\n\tprotected createData_() {\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [];\n\t\tthis.normals = [];\n\t\tthis.texcoords = [];\n\t\tthis.colors = [];\n\t\tthis.size = 0;\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n\tstatic fromIndices(indices: number[], array: number[], size: number): number[] {\n\t\tconst buffer: number[] = [];\n\t\tindices.forEach(i => {\n\t\t\tbuffer.push.apply(buffer, array.slice(i * size, i * size + size));\n\t\t});\n\t\treturn buffer;\n\t}\n\n}\n","import Geometry from './geometry';\n\nexport default class FlatGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 6;\n\t\tthis.positions = [\n\t\t\t-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0,\n\t\t\t-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t];\n\t\tthis.colors = [\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t];\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n}\n","export default class Vector2 {\n\n\tisVector2: boolean = true;\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tcopy(v: Vector2): Vector2 {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\treturn this;\n\t}\n\n\tlength(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tnormalize(): Vector2 {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\tdivideScalar(scalar: number): Vector2 {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tmultiplyScalar(scalar: number): Vector2 {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\n\tsubVectors(a: Vector2, b: Vector2): Vector2 {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\treturn this;\n\t}\n\n\taddVectors(a: Vector2, b: Vector2): Vector2 {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\treturn this;\n\t}\n\n}\n\n","export default class Vector3 {\n\n\tisVector3: boolean = true;\n\tx: number;\n\ty: number;\n\tz: number;\n\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tcopy(v: Vector3): Vector3 {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\treturn this;\n\t}\n\n\tlength(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t}\n\n\tnormalize(): Vector3 {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\n\tdivideScalar(scalar: number): Vector3 {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tmultiplyScalar(scalar: number): Vector3 {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\treturn this;\n\t}\n\n\tsubVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\treturn this;\n\t}\n\n\taddVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\treturn this;\n\t}\n\n\tcrossVectors(a: Vector3, b: Vector3): Vector3 {\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\t\treturn this;\n\t}\n\n\t/*\n\tset(x, y, z) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetScalar(scalar) {\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\treturn this;\n\t}\n\n\tsetX(x) {\n\t\tthis.x = x;\n\t\treturn this;\n\t}\n\n\tsetY(y) {\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetZ(z) {\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tsetComponent(index, value) {\n\t\tswitch (index) {\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetComponent(index) {\n\t\tswitch (index) {\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\n\t\t}\n\n\t}\n\n\tclone() {\n\t\treturn new Vector3(this.x, this.y, this.z);\n\t}\n\n\tadd(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.addVectors(v, w);\n\t\t}\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\treturn this;\n\t}\n\n\taddScalar(s) {\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\treturn this;\n\t}\n\n\taddScaledVector(v, s) {\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\treturn this;\n\t}\n\n\tsub(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.subVectors(v, w);\n\t\t}\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\treturn this;\n\t}\n\n\tsubScalar(s) {\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\treturn this;\n\t}\n\n\n\tmultiply(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.multiplyVectors(v, w);\n\t\t}\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\treturn this;\n\t}\n\n\tmultiplyVectors(a:Vector3, b:Vector3):Vector3 {\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\t\treturn this;\n\t}\n\n\tapplyMatrix3(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\treturn this;\n\t}\n\n\tapplyNormalMatrix(m) {\n\t\treturn this.applyMatrix3(m).normalize();\n\t}\n\n\tapplyMatrix4(m) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\treturn this;\n\t}\n\n\tapplyQuaternion(q) {\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\t\t// calculate quat * vector\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\t\t// calculate result * inverse quat\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\t\treturn this;\n\t}\n\n\tproject(camera) {\n\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t}\n\n\tunproject(camera) {\n\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t}\n\n\ttransformDirection(m) {\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\treturn this.normalize();\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\treturn this;\n\t}\n\n\tmin(v) {\n\t\tthis.x = Math.min(this.x, v.x);\n\t\tthis.y = Math.min(this.y, v.y);\n\t\tthis.z = Math.min(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tmax(v) {\n\t\tthis.x = Math.max(this.x, v.x);\n\t\tthis.y = Math.max(this.y, v.y);\n\t\tthis.z = Math.max(this.z, v.z);\n\t\treturn this;\n\t}\n\n\tclamp(min, max) {\n\t\t// assumes min < max, componentwise\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\treturn this;\n\t}\n\n\tclampScalar(minVal, maxVal) {\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\treturn this;\n\t}\n\n\tclampLength(min, max) {\n\t\tvar length = this.length();\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t}\n\n\tfloor() {\n\t\tthis.x = Math.floor(this.x);\n\t\tthis.y = Math.floor(this.y);\n\t\tthis.z = Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tceil() {\n\t\tthis.x = Math.ceil(this.x);\n\t\tthis.y = Math.ceil(this.y);\n\t\tthis.z = Math.ceil(this.z);\n\t\treturn this;\n\t}\n\n\tround() {\n\t\tthis.x = Math.round(this.x);\n\t\tthis.y = Math.round(this.y);\n\t\tthis.z = Math.round(this.z);\n\t\treturn this;\n\t}\n\n\troundToZero() {\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n\t\tthis.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\t\treturn this;\n\t}\n\n\tnegate() {\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\treturn this;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t}\n\n\t// TODO lengthSquared?\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t}\n\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t}\n\n\tsetLength(length) {\n\t\treturn this.normalize().multiplyScalar(length);\n\t}\n\n\tlerp(v, alpha) {\n\t\tthis.x += (v.x - this.x) * alpha;\n\t\tthis.y += (v.y - this.y) * alpha;\n\t\tthis.z += (v.z - this.z) * alpha;\n\t\treturn this;\n\t}\n\n\tlerpVectors(v1, v2, alpha) {\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n\t}\n\n\tcross(v, w) {\n\t\tif (w !== undefined) {\n\t\t\treturn this.crossVectors(v, w);\n\t\t}\n\t\treturn this.crossVectors(this, v);\n\t}\n\n\tprojectOnVector(v) {\n\t\tvar denominator = v.lengthSq();\n\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\tvar scalar = v.dot(this) / denominator;\n\t\treturn this.copy(v).multiplyScalar(scalar);\n\t}\n\n\tprojectOnPlane(planeNormal) {\n\t\tconst v = new Vector3();\n\t\tv.copy(this).projectOnVector(planeNormal);\n\t\treturn this.sub(v);\n\t}\n\n\treflect(normal) {\n\t\tconst v = new Vector3();\n\t\treturn this.sub(v.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t}\n\n\tangleTo(v) {\n\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\tif (denominator === 0) return Math.PI / 2;\n\t\tvar theta = this.dot(v) / denominator;\n\t\t// clamp, to handle numerical problems\n\t\treturn Math.acos(MathUtils.clamp(theta, - 1, 1));\n\t}\n\n\tdistanceTo(v) {\n\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t}\n\n\tdistanceToSquared(v) {\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\t\treturn dx * dx + dy * dy + dz * dz;\n\t}\n\n\tmanhattanDistanceTo(v) {\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t}\n\n\tsetFromSpherical(s) {\n\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t}\n\n\tsetFromSphericalCoords(radius, phi, theta) {\n\t\tvar sinPhiRadius = Math.sin(phi) * radius;\n\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\tthis.y = Math.cos(phi) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromCylindrical(c) {\n\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t}\n\n\tsetFromCylindricalCoords(radius, theta, y) {\n\t\tthis.x = radius * Math.sin(theta);\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos(theta);\n\t\treturn this;\n\t}\n\n\tsetFromMatrixPosition(m) {\n\t\tvar e = m.elements;\n\t\tthis.x = e[12];\n\t\tthis.y = e[13];\n\t\tthis.z = e[14];\n\t\treturn this;\n\t}\n\n\tsetFromMatrixScale(m) {\n\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\n\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\n\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\t\treturn this;\n\t}\n\n\tsetFromMatrixColumn(m, index) {\n\t\treturn this.fromArray(m.elements, index * 4);\n\t}\n\n\tsetFromMatrix3Column(m, index) {\n\t\treturn this.fromArray(m.elements, index * 3);\n\t}\n\n\tequals(v) {\n\t\treturn ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\t}\n\n\tfromArray(array, offset) {\n\t\tif (offset === undefined) offset = 0;\n\t\tthis.x = array[offset];\n\t\tthis.y = array[offset + 1];\n\t\tthis.z = array[offset + 2];\n\t\treturn this;\n\t}\n\n\ttoArray(array, offset) {\n\t\tif (array === undefined) array = [];\n\t\tif (offset === undefined) offset = 0;\n\t\tarray[offset] = this.x;\n\t\tarray[offset + 1] = this.y;\n\t\tarray[offset + 2] = this.z;\n\t\treturn array;\n\t}\n\n\tfromBufferAttribute(attribute, index) {\n\t\tthis.x = attribute.getX(index);\n\t\tthis.y = attribute.getY(index);\n\t\tthis.z = attribute.getZ(index);\n\t\treturn this;\n\t}\n\n\trandom() {\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\treturn this;\n\t}\n\t*/\n\n}\n\n","\nimport Vector2 from '../math/vector2';\nimport Vector3 from '../math/vector3';\n\nconst PI = Math.PI;\nconst RAD = PI / 180;\n\nexport default class OrbitCamera extends Vector3 {\n\n\ttheta: number;\n\tphi: number;\n\tradius: number;\n\tposition: Vector3 = new Vector3();\n\tvalue: Float32Array = new Float32Array([0, 0, 0]);\n\tmouse: Vector2 = null;\n\tdirty: boolean = false;\n\n\tconstructor(theta?: number, phi?: number, radius?: number) {\n\t\tsuper();\n\t\tthis.theta = (theta || 0) * RAD;\n\t\tthis.phi = (phi || 0) * RAD;\n\t\tthis.radius = radius || 6.0;\n\t\t// this.update();\n\t}\n\n\tdown(x: number, y: number) {\n\t\tthis.mouse = new Vector2(x, y);\n\t}\n\n\tmove(x: number, y: number) {\n\t\tconst mouse = this.mouse;\n\t\tif (mouse && (mouse.x !== x || mouse.y !== y)) {\n\t\t\tconst theta = (x - mouse.x) * 180 * RAD;\n\t\t\tconst phi = (y - mouse.y) * 180 * RAD;\n\t\t\tmouse.x = x;\n\t\t\tmouse.y = y;\n\t\t\tthis.theta += theta;\n\t\t\tthis.phi = Math.max(-60 * RAD, Math.min(60 * RAD, this.phi + phi));\n\t\t\t// this.update();\n\t\t}\n\t}\n\n\tup() {\n\t\tthis.mouse = null;\n\t}\n\n\twheel(d: number) {\n\t\tthis.radius = Math.max(4.0, Math.min(10.0, this.radius + d * 0.02));\n\t}\n\n\tstatic fromVector(vector: Vector3) {\n\t\tconst radius = vector.length();\n\t\tconst theta = Math.acos(vector.y / radius); //theta\n\t\tconst phi = Math.atan(vector.x / vector.z); //phi\n\t\treturn new OrbitCamera(theta, phi, radius);\n\t}\n\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// import 'promise-polyfill';\nimport IterableStringMap from '../core/iterable';\nimport Subscriber from '../core/subscriber';\nimport Logger from '../logger/logger';\n\nexport const TextureImageExtensions = ['jpg', 'jpeg', 'png'];\nexport const TextureVideoExtensions = ['ogv', 'webm', 'mp4'];\nexport const TextureExtensions = TextureImageExtensions.concat(TextureVideoExtensions);\n\nexport enum TextureSourceType {\n\tData = 0,\n\tElement = 1,\n\tUrl = 2,\n}\n\nexport enum TextureFilteringType {\n\tMipMap = 'mipmap',\n\tLinear = 'linear',\n\tNearest = 'nearest',\n}\n\nexport interface ITextureData {\n\tdata: Uint8Array;\n\twidth: number;\n\theight: number;\n}\n\nexport interface ITextureOptions {\n\turl?: string;\n\telement?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element;\n\tdata?: Uint8Array;\n\twidth?: number;\n\theight?: number;\n\tfiltering?: TextureFilteringType;\n\trepeat?: boolean;\n\tUNPACK_FLIP_Y_WEBGL?: boolean;\n\tUNPACK_PREMULTIPLY_ALPHA_WEBGL?: number;\n\tTEXTURE_WRAP_S?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n\tTEXTURE_WRAP_T?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\n}\n\nexport interface ITextureInput {\n\tkey: string;\n\turl: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData;\n\toptions?: ITextureOptions;\n}\n\nexport function isTextureData(object: any): object is ITextureData {\n\treturn 'data' in object && 'width' in object && 'height' in object;\n}\n\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\nexport class Texture extends Subscriber {\n\n\tkey: string;\n\tindex: number;\n\toptions: ITextureOptions;\n\tworkpath: string;\n\twidth: number;\n\theight: number;\n\n\ttexture: WebGLTexture;\n\tsource: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | Uint8Array;\n\tsourceType: TextureSourceType;\n\tfiltering: TextureFilteringType;\n\turl: string;\n\tvalid: boolean = false;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\tpowerOf2: boolean = false;\n\n\tconstructor(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\tindex: number,\n\t\toptions: ITextureOptions = { filtering: TextureFilteringType.Linear },\n\t\tworkpath?: string,\n\t) {\n\t\tsuper();\n\t\tthis.key = key;\n\t\tthis.index = index;\n\t\tthis.options = options;\n\t\tthis.workpath = workpath;\n\t\tthis.create(gl);\n\t}\n\n\tstatic isPowerOf2(value: number): boolean {\n\t\treturn (value & (value - 1)) === 0;\n\t}\n\n\tstatic isSafari(): boolean {\n\t\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\t}\n\n\tstatic isTextureUrl(text: string): boolean {\n\t\treturn text && (/\\.(jpg|jpeg|png|ogv|webm|mp4)$/i).test(text.split('?')[0]);\n\t}\n\n\tstatic isTexture(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t): boolean {\n\t\tconst options = Texture.getTextureOptions(urlElementOrData);\n\t\treturn options !== undefined;\n\t}\n\n\tstatic getMaxTextureSize(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\n\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t};\n\n\tstatic getTextureOptions(\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): ITextureOptions {\n\t\tif (typeof urlElementOrData === 'string' && urlElementOrData !== '') {\n\t\t\tif (Texture.isTextureUrl(urlElementOrData)) {\n\t\t\t\toptions.url = urlElementOrData;\n\t\t\t\tif (urlElementOrData.indexOf('?') !== -1) {\n\t\t\t\t\toptions = urlElementOrData.split('?')[1].split('&').reduce(function (prev: ITextureOptions, curr) {\n\t\t\t\t\t\tconst params = curr.split('=');\n\t\t\t\t\t\tconst key = decodeURIComponent(params[0]);\n\t\t\t\t\t\tconst value = decodeURIComponent(params[1]);\n\t\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\t\tcase 'filtering':\n\t\t\t\t\t\t\t\tprev[key] = value as TextureFilteringType;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'repeat':\n\t\t\t\t\t\t\tcase 'UNPACK_FLIP_Y_WEBGL':\n\t\t\t\t\t\t\t\tprev[key] = Boolean(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'UNPACK_PREMULTIPLY_ALPHA_WEBGL':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_S':\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_T':\n\t\t\t\t\t\t\t\tprev[key] = Number(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, options);\n\t\t\t\t}\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tif (document) {\n\t\t\t\turlElementOrData = document.querySelector(urlElementOrData);\n\t\t\t\t// Logger.log(urlElementOrData);\n\t\t\t}\n\t\t}\n\t\tif (urlElementOrData instanceof HTMLCanvasElement || urlElementOrData instanceof HTMLImageElement || urlElementOrData instanceof HTMLVideoElement) {\n\t\t\toptions.element = urlElementOrData;\n\t\t\treturn options;\n\t\t} else if (isTextureData(urlElementOrData)) {\n\t\t\toptions.data = urlElementOrData.data;\n\t\t\toptions.width = urlElementOrData.width;\n\t\t\toptions.height = urlElementOrData.height;\n\t\t\treturn options;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcreate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext\n\t): void {\n\t\tthis.texture = gl.createTexture();\n\t\tif (this.texture) {\n\t\t\tthis.valid = true;\n\t\t}\n\t\t// Default to a 1-pixel black texture so we can safely render while we wait for an image to load\n\t\t// See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n\t\t// [255, 255, 255, 255]\n\t\tthis.setData(gl, 1, 1, new Uint8Array([0, 0, 0, 0]), this.options);\n\t\t// this.bindTexture();\n\t\t// this.load(options);\n\t}\n\n\tload(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.options = options;\n\t\tif (typeof options.url === 'string') {\n\t\t\tif (this.url === undefined || options.url !== this.url) {\n\t\t\t\treturn this.setUrl(gl, options.url, options);\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(this);\n\t\t\t}\n\t\t} else if (options.element) {\n\t\t\treturn this.setElement(gl, options.element, options);\n\t\t} else if (options.data && options.width && options.height) {\n\t\t\treturn this.setData(gl, options.width, options.height, options.data, options);\n\t\t} else {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t}\n\n\tsetUrl(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\turl: string,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tif (!this.valid) {\n\t\t\treturn Promise.reject(this);\n\t\t}\n\t\tthis.url = url; // save URL reference (will be overwritten when element is loaded below)\n\t\tthis.source = url;\n\t\tthis.sourceType = TextureSourceType.Url;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tconst src = String((url.indexOf(':/') === -1 && this.workpath !== undefined) ? `${this.workpath}/${url}` : url);\n\t\tconst ext = url.split('?')[0].split('.').pop().toLowerCase();\n\t\tconst isVideo = TextureVideoExtensions.indexOf(ext) !== -1;\n\t\tlet element: HTMLVideoElement | HTMLImageElement;\n\t\tlet promise: Promise<Texture>;\n\t\tif (isVideo) {\n\t\t\tLogger.log('GlslCanvas.setUrl video', src);\n\t\t\telement = document.createElement('video'); // new HTMLVideoElement();\n\t\t\telement.setAttribute('preload', 'auto');\n\t\t\t// element.setAttribute('autoplay', 'true');\n\t\t\telement.setAttribute('loop', 'true');\n\t\t\telement.setAttribute('muted', 'true');\n\t\t\telement.setAttribute('playsinline', 'true');\n\t\t\t// element.autoplay = true;\n\t\t\telement.loop = true;\n\t\t\telement.muted = true;\n\t\t\t/*\n\t\t\tif (!(Texture.isSafari() && /(?<!http|https):\\//.test(url))) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\t*/\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\telement.src = src;\n\t\t\telement.addEventListener('canplay', () => {\n\t\t\t\t(element as HTMLVideoElement).play();\n\t\t\t});\n\t\t} else {\n\t\t\tLogger.log('GlslCanvas.setUrl image', src);\n\t\t\telement = document.createElement('img'); // new HTMLImageElement();\n\t\t\tpromise = this.setElement(gl, element, options);\n\t\t\tif (!(Texture.isSafari() && url.slice(0, 5) === 'data:')) {\n\t\t\t\telement.crossOrigin = 'anonymous';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t}\n\t\treturn promise;\n\t}\n\n\tsetElement(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\telement: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\toptions = this.options = Object.assign(this.options, options);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst originalElement = element;\n\t\t\t// a string element is interpeted as a CSS selector\n\t\t\tif (typeof element === 'string') {\n\t\t\t\telement = document.querySelector(element);\n\t\t\t}\n\t\t\tif (element instanceof HTMLCanvasElement ||\n\t\t\t\telement instanceof HTMLImageElement ||\n\t\t\t\telement instanceof HTMLVideoElement) {\n\t\t\t\tthis.source = element;\n\t\t\t\tthis.sourceType = TextureSourceType.Element;\n\t\t\t\tif (element instanceof HTMLVideoElement) {\n\t\t\t\t\tconst video = element as HTMLVideoElement;\n\t\t\t\t\tvideo.addEventListener('loadeddata', (event) => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t\tvideo.load();\n\t\t\t\t} else if (element instanceof HTMLImageElement) {\n\t\t\t\t\telement.addEventListener('load', () => {\n\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t});\n\t\t\t\t\telement.addEventListener('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\tthis.setFiltering(gl, options);\n\t\t\t\t\tresolve(this);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet message = `the 'element' parameter (\\`element: ${JSON.stringify(originalElement)}\\`) must be a CSS selector string, or a <canvas>, <image> or <video> object`;\n\t\t\t\tLogger.log(`Texture '${this.key}': ${message}`, options);\n\t\t\t\treject(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetData(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\twidth: number,\n\t\theight: number,\n\t\tdata: Uint8Array,\n\t\toptions: ITextureOptions = {}\n\t): Promise<Texture> {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.options = Object.assign(this.options, options);\n\t\tthis.source = data;\n\t\tthis.sourceType = TextureSourceType.Data;\n\t\tthis.update(gl, options);\n\t\tthis.setFiltering(gl, options);\n\t\treturn Promise.resolve(this);\n\t}\n\n\t// Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n\tupdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.activeTexture(gl.TEXTURE0 + this.index);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? 0 : 1));\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || 0);\n\t\tif (this.sourceType === TextureSourceType.Element) {\n\t\t\tif (this.source instanceof HTMLImageElement && this.source.naturalWidth && this.source.naturalHeight) {\n\t\t\t\tthis.width = this.source.naturalWidth;\n\t\t\t\tthis.height = this.source.naturalHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLVideoElement && this.source.videoWidth && this.source.videoHeight) {\n\t\t\t\tthis.width = this.source.videoWidth;\n\t\t\t\tthis.height = this.source.videoHeight;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t} else if (this.source instanceof HTMLCanvasElement) {\n\t\t\t\tthis.width = this.source.width;\n\t\t\t\tthis.height = this.source.height;\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\n\t\t\t}\n\t\t} else if (this.sourceType === TextureSourceType.Data) {\n\t\t\tconst imageBuffer: ArrayBufferView = this.source as ArrayBufferView;\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageBuffer);\n\t\t}\n\t\tthis.trigger('loaded', this);\n\t}\n\n\ttryUpdate(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n\t\tlet dirty = false;\n\t\tif (this.animated) {\n\t\t\tdirty = true;\n\t\t\tthis.update(gl, this.options);\n\t\t}\n\t\treturn dirty;\n\t}\n\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tgl.deleteTexture(this.texture);\n\t\tthis.texture = null;\n\t\tdelete this.source;\n\t\tthis.source = null;\n\t\tthis.valid = false;\n\t}\n\n\tsetFiltering(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\toptions: ITextureOptions\n\t): void {\n\t\tif (!this.valid) {\n\t\t\treturn;\n\t\t}\n\t\tconst powerOf2 = Texture.isPowerOf2(this.width) && Texture.isPowerOf2(this.height);\n\t\tlet filtering = options.filtering || TextureFilteringType.MipMap;\n\t\tlet wrapS = options.TEXTURE_WRAP_S || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tlet wrapT = options.TEXTURE_WRAP_T || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\t\tif (!powerOf2) {\n\t\t\tfiltering = filtering === TextureFilteringType.MipMap ? TextureFilteringType.Linear : filtering;\n\t\t\twrapS = wrapT = gl.CLAMP_TO_EDGE;\n\t\t\tif (options.repeat || options.TEXTURE_WRAP_S || options.TEXTURE_WRAP_T) {\n\t\t\t\tLogger.warn(`GlslCanvas: cannot repeat texture ${options.url} cause is not power of 2.`);\n\t\t\t}\n\t\t}\n\t\tthis.powerOf2 = powerOf2;\n\t\tthis.filtering = filtering;\n\t\t// this.bindTexture();\n\t\t// WebGL has strict requirements on non-power-of-2 textures:\n\t\t// No mipmaps and must clamp to edge\n\t\t// For power-of-2 textures, the following presets are available:\n\t\t// mipmap: linear blend from nearest mip\n\t\t// linear: linear blend from original image (no mips)\n\t\t// nearest: nearest pixel from original image (no mips, 'blocky' look)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\t\tif (this.filtering === TextureFilteringType.MipMap) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t} else if (this.filtering === TextureFilteringType.Nearest) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t} else if (this.filtering === TextureFilteringType.Linear) {\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t}\n\t}\n}\n\nexport default class Textures extends IterableStringMap<Texture> {\n\n\tcount: number = 0;\n\tdirty: boolean = false;\n\tanimated: boolean = false;\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\tcreateOrUpdate(\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\tindex: number = 0,\n\t\toptions: ITextureOptions = {},\n\t\tworkpath: string,\n\t): Promise<Texture> {\n\t\tlet texture;\n\t\tconst textureOptions = Texture.getTextureOptions(urlElementOrData, options);\n\t\ttexture = this.get(key);\n\t\tif (!texture) {\n\t\t\ttexture = new Texture(gl, key, index + this.count, textureOptions, workpath);\n\t\t\tthis.count++;\n\t\t\tthis.set(key, texture);\n\t\t}\n\t\tif (textureOptions !== undefined) {\n\t\t\treturn texture.load(gl, textureOptions).then(\n\t\t\t\t(texture) => {\n\t\t\t\t\tif (texture.source instanceof HTMLVideoElement) {\n\t\t\t\t\t\tconst video = texture.source as HTMLVideoElement;\n\t\t\t\t\t\t// Logger.log('video', video);\n\t\t\t\t\t\tvideo.addEventListener('play', () => {\n\t\t\t\t\t\t\t// Logger.log('play', texture.key);\n\t\t\t\t\t\t\ttexture.animated = true;\n\t\t\t\t\t\t\tthis.animated = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('pause', () => {\n\t\t\t\t\t\t\t// Logger.log('pause', texture.key);\n\t\t\t\t\t\t\ttexture.animated = false;\n\t\t\t\t\t\t\tthis.animated = this.reduce((flag: boolean, texture: Texture) => {\n\t\t\t\t\t\t\t\treturn flag || texture.animated;\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvideo.addEventListener('seeked', () => {\n\t\t\t\t\t\t\t// Logger.log('seeked');\n\t\t\t\t\t\t\ttexture.update(gl, texture.options);\n\t\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Logger.log('video');\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tvideo.addEventListener('canplaythrough', () => {\n\t\t\t\t\t\t\t// !!!\n\t\t\t\t\t\t\tthis.intervalID = setInterval(() => {\n\t\t\t\t\t\t\t\tthis.update(gl, options);\n\t\t\t\t\t\t\t}, 15);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\n\t\t\t\t\t\t\tvideo.currentTime = 0;\n\t\t\t\t\t\t\tvideo.play();\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\treturn texture;\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\treturn Promise.resolve(texture);\n\t\t}\n\t}\n}\n","export default class CanvasTimer {\n\n\tstart: number;\n\tprevious: number;\n\tdelay: number = 0.0;\n\tcurrent: number = 0.0;\n\tdelta: number = 0.0;\n\tpaused: boolean = false;\n\n\tconstructor() {\n\t\tthis.start = this.previous = this.now();\n\t}\n\n\tnow() {\n\t\treturn performance.now();\n\t}\n\n\tplay() {\n\t\tif (this.previous) {\n\t\t\tconst now = this.now();\n\t\t\tthis.delay += (now - this.previous);\n\t\t\tthis.previous = now;\n\t\t}\n\t\t// Logger.log(this.delay);\n\t\tthis.paused = false;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t}\n\n\tnext(): CanvasTimer {\n\t\tconst now = this.now();\n\t\tthis.delta = now - this.previous;\n\t\tthis.current = now - this.start - this.delay;\n\t\tthis.previous = now;\n\t\treturn this;\n\t}\n\n}\n","import Logger from '../logger/logger';\n\nexport class Listener {\n\tevent: string;\n\tcallback: Function;\n\n\tconstructor(\n\t\tevent: string,\n\t\tcallback: Function\n\t) {\n\t\tthis.event = event;\n\t\tthis.callback = callback;\n\t}\n}\n\nexport default class Subscriber {\n\tprivate listeners: Set<Listener> = new Set<Listener>();\n\n\tlogListeners() {\n\t\tthis.listeners.forEach(x => Logger.log(x));\n\t}\n\n\tsubscribe(listener: Listener) {\n\t\tthis.listeners.add(listener);\n\t}\n\n\tunsubscribe(listener: Listener) {\n\t\tthis.listeners.delete(listener);\n\t}\n\n\tunsubscribeAll() {\n\t\tthis.listeners.clear();\n\t}\n\n\ton(event: string, callback: Function) {\n\t\tthis.listeners.add(new Listener(event, callback));\n\t\treturn this;\n\t}\n\n\toff(event: string, callback?: Function) {\n\t\tif (callback) {\n\t\t\tthis.listeners.delete(new Listener(event, callback));\n\t\t} else {\n\t\t\tthis.listeners.forEach(x => {\n\t\t\t\tif (x.event === event) {\n\t\t\t\t\tthis.listeners.delete(x);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\ttrigger(event: string, ...data: any[]) {\n\t\tthis.listeners.forEach(x => {\n\t\t\tif (x.event === event && typeof x.callback === 'function') {\n\t\t\t\tx.callback(...data);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n}\n","import Geometry from './geometry';\n\nexport default class BoxGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tthis.size = 36;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = [\n\t\t\t// Front face\n\t\t\t-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t// Back face\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\n\t\t\t// Top face\n\t\t\t-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n\t\t\t-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\n\t\t\t// Bottom face\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,\n\t\t\t// Right face\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0,\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,\n\t\t\t// Left face\n\t\t\t-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0,\n\t\t];\n\t\tthis.texcoords = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Top\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Bottom\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Right\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t\t// Left\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n\t\t];\n\t\tthis.normals = [\n\t\t\t// Front\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\n\t\t\t// Back\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\n\t\t\t// Top\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\n\t\t\t// Bottom\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\n\t\t\t// Right\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\n\t\t\t// Left\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\n\t\t];\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tconst faceColors = [\n\t\t\t[1.0, 1.0, 1.0, 1.0],    // Front face: white\n\t\t\t[1.0, 0.0, 0.0, 1.0],    // Back face: red\n\t\t\t[0.0, 1.0, 0.0, 1.0],    // Top face: green\n\t\t\t[0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\n\t\t\t[1.0, 1.0, 0.0, 1.0],    // Right face: yellow\n\t\t\t[1.0, 0.0, 1.0, 1.0],    // Left face: purple\n\t\t];\n\t\t// Convert the array of colors into a table for all the vertices.\n\t\tlet colors: number[] = [];\n\t\tfor (var j = 0; j < faceColors.length; ++j) {\n\t\t\tconst c = faceColors[j];\n\t\t\t// Repeat each color four times for the four vertices of the face\n\t\t\tcolors = colors.concat(c, c, c, c, c, c);\n\t\t}\n\t\tthis.colors = colors;\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n}\n","import Vector3 from '../math/vector3';\nimport Geometry from './geometry';\n\nexport default class SphereGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tconst radius = 1.4;\n\t\tconst widthDivisions = 80;\n\t\tconst heightDivisions = 60;\n\t\tconst phiStart = 0;\n\t\tconst phiLength = Math.PI * 2;\n\t\tconst thetaStart = 0;\n\t\tconst thetaLength = Math.PI;\n\t\tconst p = new Vector3();\n\t\tconst n = new Vector3();\n\t\t// buffers\n\t\tconst indices = [];\n\t\tconst positions = [];\n\t\tconst normals = [];\n\t\tconst texcoords = [];\n\t\tconst colors = [];\n\t\t//\n\t\tlet thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\tlet ix, iy;\n\t\tlet index = 0;\n\t\tlet grid = [];\n\t\t// generate positions, normals and uvs\n\t\tfor (iy = 0; iy <= heightDivisions; iy++) {\n\t\t\tlet positionRow = [];\n\t\t\tlet v = iy / heightDivisions;\n\t\t\t// special case for the poles\n\t\t\tlet uOffset = 0;\n\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\tuOffset = 0.5 / widthDivisions;\n\t\t\t} else if (iy == heightDivisions && thetaEnd == Math.PI) {\n\t\t\t\tuOffset = -0.5 / widthDivisions;\n\t\t\t}\n\t\t\tfor (ix = 0; ix <= widthDivisions; ix++) {\n\t\t\t\tlet u = ix / widthDivisions;\n\t\t\t\t// position\n\t\t\t\tp.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tp.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\tp.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\tpositions.push(p.x, p.y, p.z);\n\t\t\t\t// normal\n\t\t\t\tn.copy(p).normalize();\n\t\t\t\tnormals.push(n.x, n.y, n.z);\n\t\t\t\t// uv\n\t\t\t\tconst uvx = (u + uOffset);\n\t\t\t\tconst uvy = (1 - v);\n\t\t\t\ttexcoords.push(uvx, uvy);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t\tpositionRow.push(index++);\n\t\t\t}\n\t\t\tgrid.push(positionRow);\n\t\t}\n\t\t// indices\n\t\tfor (iy = 0; iy < heightDivisions; iy++) {\n\t\t\tfor (ix = 0; ix < widthDivisions; ix++) {\n\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\tif (iy !== heightDivisions - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\t// build geometry\n\t\tthis.size = indices.length;\n\t\t// Now create an array of positions for the cube.\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\t// Now set up the colors for the faces. We'll use solid colors\n\t\t// for each face.\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t// this.unrapUvw(this.positions);\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n\t/*\n\tunrapUvw(positions: number[]): void {\n\t\tconst texcoords: number[] = this.texcoords = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t}\n\t*/\n\n}\n","import Vector3 from '../math/vector3';\nimport Geometry from './geometry';\n\nexport default class TorusGeometry extends Geometry {\n\n\tprotected createData_() {\n\t\tconst radius: number = 1;\n\t\tconst tube: number = 0.25;\n\t\tconst tubularDivisions: number = 200;\n\t\tconst radialDivisions: number = 40;\n\t\tconst p: number = 2;\n\t\tconst q: number = 3;\n\t\tconst indices: number[] = [];\n\t\tconst positions: number[] = [];\n\t\tconst normals: number[] = [];\n\t\tconst texcoords: number[] = [];\n\t\tconst colors: number[] = [];\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst p1 = new Vector3();\n\t\tconst p2 = new Vector3();\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\t\tfor (let i: number = 0; i <= tubularDivisions; ++i) {\n\t\t\tconst u = i / tubularDivisions * p * Math.PI * 2;\n\t\t\tthis.calculatePositionOnCurve(u, p, q, radius, p1);\n\t\t\tthis.calculatePositionOnCurve(u + 0.01, p, q, radius, p2);\n\t\t\tT.subVectors(p2, p1);\n\t\t\tN.addVectors(p2, p1);\n\t\t\tB.crossVectors(T, N);\n\t\t\tN.crossVectors(B, T);\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\t\t\tfor (let j: number = 0; j <= radialDivisions; ++j) {\n\t\t\t\tconst v: number = j / radialDivisions * Math.PI * 2;\n\t\t\t\tconst cx: number = - tube * Math.cos(v);\n\t\t\t\tconst cy: number = tube * Math.sin(v);\n\t\t\t\tvertex.x = p1.x + (cx * N.x + cy * B.x);\n\t\t\t\tvertex.y = p1.y + (cx * N.y + cy * B.y);\n\t\t\t\tvertex.z = p1.z + (cx * N.z + cy * B.z);\n\t\t\t\tpositions.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\tnormal.subVectors(vertex, p1).normalize();\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\n\t\t\t\ttexcoords.push(i / tubularDivisions * 2.0 * Math.round(q));\n\t\t\t\ttexcoords.push(j / radialDivisions);\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\n\t\t\t}\n\t\t}\n\t\tfor (let j: number = 1; j <= tubularDivisions; j++) {\n\t\t\tfor (let i: number = 1; i <= radialDivisions; i++) {\n\t\t\t\tconst a: number = (radialDivisions + 1) * (j - 1) + (i - 1);\n\t\t\t\tconst b: number = (radialDivisions + 1) * j + (i - 1);\n\t\t\t\tconst c: number = (radialDivisions + 1) * j + i;\n\t\t\t\tconst d: number = (radialDivisions + 1) * (j - 1) + i;\n\t\t\t\tindices.push(a, b, d);\n\t\t\t\tindices.push(b, c, d);\n\t\t\t}\n\t\t}\n\t\tthis.size = indices.length;\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\n\t\t// console.log('positions', this.positions.length);\n\t\t// console.log('normals', this.normals.length);\n\t\t// console.log('texcoords', this.texcoords.length);\n\t\t// console.log('colors', this.colors.length);\n\t}\n\n\tprotected calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3): void {\n\t\tconst cu: number = Math.cos(u);\n\t\tconst su: number = Math.sin(u);\n\t\tconst quOverP: number = q / p * u;\n\t\tconst cs: number = Math.cos(quOverP);\n\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t}\n\n}\n","import Common from '../core/common';\nimport Geometry, { IGeometry } from '../geometry/geometry';\nimport Vector3 from '../math/vector3';\n\nconst COLORS = [\n\t[1, 1, 1],\n\t[1, 0, 0],\n\t[0, 1, 0],\n\t[0, 0, 1],\n\t[1, 1, 0],\n\t[0, 1, 1],\n];\n\nlet CI: number = 0;\n\nexport default class ObjLoader {\n\n\tload(url: string): Promise<Geometry> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tCommon.fetch(url)\n\t\t\t\t// .then((response) => response.text())\n\t\t\t\t.then((text) => {\n\t\t\t\t\t// console.log(text);\n\t\t\t\t\tconst data = this.parse(text);\n\t\t\t\t\tif (data.positions.length) {\n\t\t\t\t\t\tconst geometry = new Geometry(data as IGeometry);\n\t\t\t\t\t\tresolve(geometry);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject('ObjLoader error: empty positions');\n\t\t\t\t\t}\n\t\t\t\t}, error => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tparseIndices(faceIndices: number[][], k: number, l: number, source: number[][], output: number[], name: string) {\n\t\tlet i = 0;\n\t\twhile (i <= faceIndices.length - 3) {\n\t\t\tlet a, b, c;\n\t\t\tif (i === 0) {\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t} else {\n\t\t\t\ta = i - 1;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\t\t\t}\n\t\t\ti++;\n\t\t\tconst indices = [a, b, c];\n\t\t\tfor (let j = 0; j < indices.length; j++) {\n\t\t\t\tconst index = faceIndices[indices[j]][k];\n\t\t\t\tlet values;\n\t\t\t\tif (index && index !== NaN) {\n\t\t\t\t\tvalues = source[index - 1];\n\t\t\t\t\tif (values) {\n\t\t\t\t\t\tvalues = values.slice(0, l);\n\t\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.log('error', name, source.length, index - 1);\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\telse {\n\t\t\t\t\tvalues = new Array(l).fill(0);\n\t\t\t\t\toutput.push.apply(output, values);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\n\tparseFaces(F: number[][][], V: number[][], VN: number[][], VT: number[][], positions: number[], normals: number[], texcoords: number[], colors: number[]) {\n\t\tconst si: number = positions.length;\n\t\tF.forEach(faceIndices => {\n\t\t\t// console.log(faceIndices);\n\t\t\tthis.parseIndices(faceIndices, 0, 3, V, positions, 'positions');\n\t\t\tthis.parseIndices(faceIndices, 2, 3, VN, normals, 'normals');\n\t\t\tthis.parseIndices(faceIndices, 1, 2, VT, texcoords, 'texcoords');\n\t\t});\n\t\tconst vl: number = positions.length - si;\n\t\tif (vl > 0) {\n\t\t\t// console.log(faceIndices.length - 2);\n\t\t\tconst c = new Array(vl / 3).fill(0);\n\t\t\tc.forEach(() => {\n\t\t\t\tconst rgb = COLORS[CI % COLORS.length];\n\t\t\t\tcolors.push(rgb[0], rgb[1], rgb[2], 1.0);\n\t\t\t});\n\t\t\tCI++;\n\t\t\t// console.log(positions.length, normals.length, texcoords.length, colors.length, positions.length / 3 * 2 === texcoords.length, positions.length / 3 * 4 === colors.length);\n\t\t}\n\t}\n\n\tparse(text: string): IGeometry {\n\t\tlet positions: number[] = [], normals: number[] = [], texcoords: number[] = [], colors: number[] = [];\n\t\tCI = 0;\n\t\tlet V: number[][] = [], VN: number[][] = [], VT: number[][] = [], F: number[][][] = [];\n\t\tif (text.indexOf('\\r\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\r\\n/g, '\\n');\n\t\t}\n\t\t/*\n\t\tif (text.indexOf('\\\\\\n') !== - 1) {\n\t\t\ttext = text.replace(/\\\\\\n/g, '');\n\t\t}\n\t\t*/\n\t\ttext = text.replace(/  /g, ' ');\n\t\tconst lines = text.split('\\n');\n\t\tlines.forEach((line, i) => {\n\t\t\tif (line.indexOf('v ') === 0) {\n\t\t\t\tif (F.length) {\n\t\t\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t\t\t\tF = [];\n\t\t\t\t\t// V = [];\n\t\t\t\t\t// VN = [];\n\t\t\t\t\t// VT = [];\n\t\t\t\t}\n\t\t\t\t// v  0.0012 -0.0055 0.0090\n\t\t\t\tconst a = line.replace('v', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tV.push(v);\n\t\t\t} else if (line.indexOf('vn ') === 0) {\n\t\t\t\t// vn 0.0128 0.9896 0.1431\n\t\t\t\tconst a = line.replace('vn', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tconst n = new Vector3(v[0], v[1], v[2]).normalize();\n\t\t\t\tVN.push([n.x, n.y, n.z]);\n\t\t\t} else if (line.indexOf('vt ') === 0) {\n\t\t\t\t// vt 0.5955 0.0054 0.0000\n\t\t\t\tconst a = line.replace('vt', '').trim().split(' ');\n\t\t\t\tconst v = a.map(x => parseFloat(x));\n\t\t\t\tVT.push(v);\n\t\t\t} else if (line.indexOf('f ') === 0) {\n\t\t\t\t// f 1//1 2//2 3//3 4//4\n\t\t\t\tconst a = line.replace('f', '').trim().split(' ');\n\t\t\t\tconst f = a.map((x: string) => {\n\t\t\t\t\tconst indices = x.split('/').map(y => parseInt(y));\n\t\t\t\t\tif (indices.length === 2) {\n\t\t\t\t\t\tindices.push(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn indices;\n\t\t\t\t});\n\t\t\t\tF[F.length] = f;\n\t\t\t}\n\t\t});\n\t\tif (F.length) {\n\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\n\t\t}\n\t\tconst boundingBox = { min: new Vector3(Number.POSITIVE_INFINITY), max: new Vector3(Number.NEGATIVE_INFINITY) };\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tboundingBox.min.x = Math.min(boundingBox.min.x, positions[i]);\n\t\t\tboundingBox.min.y = Math.min(boundingBox.min.y, positions[i + 1]);\n\t\t\tboundingBox.min.z = Math.min(boundingBox.min.z, positions[i + 2]);\n\t\t\tboundingBox.max.x = Math.max(boundingBox.max.x, positions[i]);\n\t\t\tboundingBox.max.y = Math.max(boundingBox.max.y, positions[i + 1]);\n\t\t\tboundingBox.max.z = Math.max(boundingBox.max.z, positions[i + 2]);\n\t\t}\n\t\tconst centerX = true, centerY = true, centerZ = true;\n\t\tconst dx = -(boundingBox.min.x + boundingBox.max.x) / 2;\n\t\tconst dy = -(boundingBox.min.y + boundingBox.max.y) / 2;\n\t\tconst dz = -(boundingBox.min.z + boundingBox.max.z) / 2;\n\t\t// console.log(dx, dy, dz);\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tpositions[i] += centerX ? dx : 0;\n\t\t\tpositions[i + 1] += centerY ? dy : 0;\n\t\t\tpositions[i + 2] += centerZ ? dz : 0;\n\t\t}\n\t\tconst radius = positions.reduce((p: number, c: number) => {\n\t\t\treturn Math.max(p, c);\n\t\t}, 0);\n\t\tpositions.forEach((x: number, i: number) => positions[i] = x / radius * 2.0);\n\t\tif (!normals.length) {\n\t\t\tnormals = positions.slice();\n\t\t}\n\t\tif (!texcoords.length) {\n\t\t\ttexcoords = this.unrapUvw(positions);\n\t\t}\n\t\t/*\n\t\tconsole.log(positions.length, normals.length, texcoords.length, colors.length,\n\t\t\tpositions.length / 3 * 2 === texcoords.length,\n\t\t\tpositions.length / 3 * 4 === colors.length);\n\t\t*/\n\t\treturn {\n\t\t\tpositions, normals, texcoords, colors\n\t\t};\n\t}\n\n\tunrapUvw(positions: number[]): number[] {\n\t\tconst texcoords: number[] = [];\n\t\tfor (let i = 0; i < positions.length; i += 3) {\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\tv.normalize();\n\t\t\tconst pitch = Math.asin(-v.y);\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\n\t\t\ttexcoords.push(tx, ty);\n\t\t}\n\t\treturn texcoords;\n\t}\n\n}\n","\nimport IterableStringMap from '../core/iterable';\nimport Logger from '../logger/logger';\nimport { Texture } from '../textures/textures';\n\nexport enum UniformMethod {\n\tUnknown = 0,\n\tUniform1i = 'uniform1i', // (intUniformLoc,   v);                 // for int\n\t// Uniform1i  = 'uniform1i', // (boolUniformLoc,   v);                // for bool\n\t// Uniform1i  = 'uniform1i', // (sampler2DUniformLoc,   v);           // for sampler2D\n\t// Uniform1i  = 'uniform1i', // (samplerCubeUniformLoc,   v);         // for samplerCube\n\tUniform2i = 'uniform2i', // (ivec2UniformLoc, v0, v1);            // for ivec2\n\tUniform3i = 'uniform3i', // (ivec3UniformLoc, v0, v1, v2);        // for ivec3\n\tUniform4i = 'uniform4i', // (ivec4UniformLoc, v0, v1, v2, v4);    // for ivec4\n\tUniform1f = 'uniform1f', // (floatUniformLoc, v);                 // for float\n\tUniform2f = 'uniform2f', // (vec2UniformLoc,  v0, v1);            // for vec2\n\tUniform3f = 'uniform3f', // (vec3UniformLoc,  v0, v1, v2);        // for vec3\n\tUniform4f = 'uniform4f', // (vec4UniformLoc,  v0, v1, v2, v4);    // for vec4\n\t//\n\tUniform1iv = 'uniform1iv', // (intUniformLoc, [v]);                 // for int or int array\n\t// Uniform1iv = 'uniform1iv', // (boolUniformLoc, [v]);                // for bool or bool array\n\t// Uniform1iv = 'uniform1iv', // (sampler2DUniformLoc, [v]);           // for sampler2D or sampler2D array\n\t// Uniform1iv = 'uniform1iv', // (samplerCubeUniformLoc, [v]);         // for samplerCube or samplerCube array\n\tUniform2iv = 'uniform2iv', // (ivec2UniformLoc, [v0, v1]);          // for ivec2 or ivec2 array\n\tUniform3iv = 'uniform3iv', // (ivec3UniformLoc, [v0, v1, v2]);      // for ivec3 or ivec3 array\n\tUniform4iv = 'uniform4iv', // (ivec4UniformLoc, [v0, v1, v2, v4]);  // for ivec4 or ivec4 array\n\t//\n\tUniform1fv = 'uniform1fv', // (floatUniformLoc, [v]);               // for float or float array\n\tUniform2fv = 'uniform2fv', // (vec2UniformLoc,  [v0, v1]);          // for vec2 or vec2 array\n\tUniform3fv = 'uniform3fv', // (vec3UniformLoc,  [v0, v1, v2]);      // for vec3 or vec3 array\n\tUniform4fv = 'uniform4fv', // (vec4UniformLoc,  [v0, v1, v2, v4]);  // for vec4 or vec4 array\n\t//\n\tUniformMatrix2fv = 'uniformMatrix2fv', // (mat2UniformLoc, false, [  4x element array ])  // for mat2 or mat2 array\n\tUniformMatrix3fv = 'uniformMatrix3fv', // (mat3UniformLoc, false, [  9x element array ])  // for mat3 or mat3 array\n\tUniformMatrix4fv = 'uniformMatrix4fv', // (mat4UniformLoc, false, [ 16x element array ])  // for mat4 or mat4 array\n}\n\nexport enum UniformType {\n\tUnknown = 0,\n\tFloat,\n\tInt,\n\tBool,\n\tSampler2D,\n\tSamplerCube,\n\tMatrix2fv,\n\tMatrix3fv,\n\tMatrix4fv,\n}\n\nexport const METHODS_INT = [UniformMethod.Uniform1i, UniformMethod.Uniform2i, UniformMethod.Uniform3i, UniformMethod.Uniform4i];\nexport const METHODS_FLOAT = [UniformMethod.Uniform1f, UniformMethod.Uniform2f, UniformMethod.Uniform3f, UniformMethod.Uniform4f];\nexport const METHODS_INTV = [UniformMethod.Uniform1iv, UniformMethod.Uniform2iv, UniformMethod.Uniform3iv, UniformMethod.Uniform4iv];\nexport const METHODS_FLOATV = [UniformMethod.Uniform1fv, UniformMethod.Uniform2fv, UniformMethod.Uniform3fv, UniformMethod.Uniform4fv];\n\nexport interface IUniformOption { [key: string]: any[]; }\n\nexport class Uniform {\n\tmethod: UniformMethod;\n\ttype: UniformType;\n\tkey: string;\n\tvalues: any[];\n\tlocation?: WebGLUniformLocation;\n\tdirty?: boolean = true;\n\tapply?: Function;\n\n\tconstructor(options?: Uniform) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tswitch (this.method) {\n\t\t\tcase UniformMethod.UniformMatrix2fv:\n\t\t\tcase UniformMethod.UniformMatrix3fv:\n\t\t\tcase UniformMethod.UniformMatrix4fv:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location, false].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\n\t\t\t\t\tif (this.dirty) {\n\t\t\t\t\t\tgl.useProgram(program);\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location].concat(this.values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class UniformTexture extends Uniform {\n\n\ttexture: Texture;\n\n\tconstructor(options?: Uniform) {\n\t\tsuper(options);\n\t}\n\n}\n\nexport default class Uniforms extends IterableStringMap<Uniform> {\n\n\tdirty: boolean = false;\n\n\tstatic isArrayOfInteger(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Number.isInteger(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfNumber(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'number';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfBoolean(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && typeof value === 'boolean';\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfTexture(array: any[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: any) => {\n\t\t\treturn flag && Texture.isTexture(value);\n\t\t}, true);\n\t}\n\n\tstatic isArrayOfSampler2D(array: Uniform[]): boolean {\n\t\treturn array.reduce((flag: boolean, value: Uniform) => {\n\t\t\treturn flag && value.type === UniformType.Sampler2D;\n\t\t}, true);\n\t}\n\n\tprivate static getType_(\n\t\tvalues: any[],\n\t): UniformType {\n\t\tlet type = UniformType.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tif (Uniforms.isArrayOfNumber(subject)) {\n\t\t\ttype = UniformType.Float;\n\t\t} else if (Uniforms.isArrayOfBoolean(subject)) {\n\t\t\ttype = UniformType.Bool;\n\t\t} else if (Uniforms.isArrayOfTexture(subject)) {\n\t\t\ttype = UniformType.Sampler2D;\n\t\t}\n\t\treturn type;\n\t}\n\n\tprivate static getMethod_(\n\t\ttype: UniformType,\n\t\tvalues: any[],\n\t): UniformMethod {\n\t\tlet method = UniformMethod.Unknown;\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\n\t\tconst subject = isVector ? values[0] : values;\n\t\tconst length = subject.length;\n\t\tconst i = length - 1;\n\t\tswitch (type) {\n\t\t\tcase UniformType.Float:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_FLOATV.length ? METHODS_FLOATV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_FLOAT.length ? METHODS_FLOAT[i] : UniformMethod.Uniform1fv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Int:\n\t\t\tcase UniformType.Bool:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = i < METHODS_INTV.length ? METHODS_INTV[i] : UniformMethod.Unknown;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = i < METHODS_INT.length ? METHODS_INT[i] : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UniformType.Sampler2D:\n\t\t\t\tif (isVector) {\n\t\t\t\t\tmethod = UniformMethod.Uniform1iv;\n\t\t\t\t} else {\n\t\t\t\t\tmethod = length === 1 ? UniformMethod.Uniform1i : UniformMethod.Uniform1iv;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn method;\n\t}\n\n\tstatic parseUniform(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\ttype: UniformType = null\n\t): Uniform | Uniform[] {\n\t\tlet uniform: Uniform;\n\t\ttype = type || Uniforms.getType_(values);\n\t\tconst method = Uniforms.getMethod_(type, values);\n\t\tif (type !== UniformType.Unknown && method !== UniformMethod.Unknown) {\n\t\t\t// Logger.log('Uniforms.parseUniform', key, UniformType[type], method, values);\n\t\t\tif (type === UniformType.Sampler2D && method === UniformMethod.Uniform1iv) {\n\t\t\t\treturn values[0].map((texture: any, index: number) => {\n\t\t\t\t\treturn new Uniform({\n\t\t\t\t\t\tmethod: method,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tkey: `${key}[${index}]`, // `${key.split('[')[0]}[${index}]`,\n\t\t\t\t\t\tvalues: [texture]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tuniform = new Uniform({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalues: values\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tLogger.error('Uniforms.parseUniform.Unknown', key, values);\n\t\t}\n\t\t// return this.parseUniform__bak(key, values);\n\t\treturn uniform;\n\t}\n\n\tcreate(method: UniformMethod, type: UniformType, key: string, values: any[]): Uniform {\n\t\tconst uniform = new Uniform({\n\t\t\tmethod: method,\n\t\t\ttype: type,\n\t\t\tkey: key,\n\t\t\tvalues: values,\n\t\t});\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tcreateTexture(key: string, index: number): UniformTexture {\n\t\tlet uniform;\n\t\tif (key.indexOf(']') !== -1) {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1iv,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [[index]],\n\t\t\t});\n\t\t} else {\n\t\t\tuniform = new UniformTexture({\n\t\t\t\tmethod: UniformMethod.Uniform1i,\n\t\t\t\ttype: UniformType.Sampler2D,\n\t\t\t\tkey: key,\n\t\t\t\tvalues: [index],\n\t\t\t});\n\t\t}\n\t\tthis.set(key, uniform);\n\t\tthis.dirty = true;\n\t\treturn uniform;\n\t}\n\n\tupdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tconst uniform = this.get(key);\n\t\tif (uniform) {\n\t\t\t// !!! consider performance\n\t\t\t// && (uniform.method !== method || uniform.type !== type || Uniforms.isDifferent(uniform.values, values))) {\n\t\t\tuniform.method = method;\n\t\t\tuniform.type = type;\n\t\t\tuniform.values = values;\n\t\t\tuniform.dirty = true;\n\t\t\tthis.dirty = true;\n\t\t}\n\t}\n\n\tcreateOrUpdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\n\t\tif (this.has(key)) {\n\t\t\tthis.update(method, type, key, values);\n\t\t} else {\n\t\t\tthis.create(method, type, key, values);\n\t\t}\n\t}\n\n\tapply(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\n\t\tgl.useProgram(program);\n\t\tfor (const key in this.values) {\n\t\t\t// if (typeof this.values[key].apply === 'function') {\n\t\t\tthis.values[key].apply(gl, program);\n\t\t\t// }\n\t\t}\n\t\t// this.forEach(uniform => uniform.apply(gl, program));\n\t}\n\n\tclean() {\n\t\tfor (const key in this.values) {\n\t\t\tthis.values[key].dirty = false;\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\t/*\n\t// slow\n\tstatic isDifferent(a: any, b: any): boolean {\n        return JSON.stringify(a) !== JSON.stringify(b);\n    }\n\t*/\n\n\tstatic isDifferent(a: any[], b: any[]) {\n\t\treturn a.length !== b.length || a.reduce((f: boolean, v: any, i: number) => {\n\t\t\treturn f || v !== b[i];\n\t\t}, false);\n\t}\n\n}\n","import { mat4 } from 'gl-matrix';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport OrbitCamera from '../camera/orbit-camera';\nimport CanvasTimer from '../canvas/canvas-timer';\nimport { ContextMode, ContextVertexBuffers } from '../context/context';\nimport Subscriber from '../core/subscriber';\nimport BoxGeometry from '../geometry/box-geometry';\nimport FlatGeometry from '../geometry/flat-geometry';\nimport Geometry from '../geometry/geometry';\nimport SphereGeometry from '../geometry/sphere-geometry';\nimport TorusGeometry from '../geometry/torus-geometry';\nimport ObjLoader from '../loaders/obj-loader';\nimport Logger from '../logger/logger';\nimport Vector2 from '../math/vector2';\nimport Textures, { ITextureInput } from '../textures/textures';\nimport Uniforms, { UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport default class Renderer extends Subscriber {\n\n\tgl: WebGLRenderingContext | WebGL2RenderingContext;\n\tprogram: WebGLProgram;\n\ttimer: CanvasTimer;\n\tuniforms: Uniforms = new Uniforms();\n\tbuffers: Buffers = new Buffers();\n\ttextures: Textures = new Textures();\n\ttextureList: ITextureInput[] = [];\n\n\tW: number = 0;\n\tH: number = 0;\n\tmouse: Vector2 = new Vector2();\n\tradians: number = 0;\n\tdirty: boolean = true;\n\tanimated: boolean = false;\n\tdrawFunc_: (deltaTime: number) => void;\n\n\tvertexString: string;\n\tfragmentString: string;\n\n\tcamera: OrbitCamera = new OrbitCamera();\n\tgeometry: Geometry;\n\n\tvertexBuffers: ContextVertexBuffers;\n\n\tprojectionMatrix: mat4;\n\tmodelViewMatrix: mat4;\n\tnormalMatrix: mat4;\n\n\tmode: ContextMode;\n\tmesh: string;\n\tdefaultMesh: string;\n\tdoubleSided: boolean;\n\tcache: { [key: string]: Geometry } = {};\n\tworkpath: string;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.drawFunc_ = this.drawArrays_;\n\t}\n\n\tprotected render(): void {\n\t\tconst gl = this.gl;\n\t\tif (!gl) {\n\t\t\treturn;\n\t\t}\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tthis.update_();\n\t\tgl.viewport(0, 0, BW, BH);\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.geometry.attachAttributes_(gl, buffer.program);\n\t\t\t// this.uniforms.get('u_resolution').values = [1024, 1024];\n\t\t\tthis.uniforms.apply(gl, buffer.program);\n\t\t\t/*\n\t\t\tconsole.log('uniforms');\n\t\t\tfor (const key in this.uniforms.values) {\n\t\t\t\tif (key.indexOf('u_buff') === 0) {\n\t\t\t\t\tconsole.log(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t\tbuffer.render(gl, BW, BH);\n\t\t}\n\t\t// this.uniforms.get('u_resolution').values = [BW, BH];\n\t\tthis.geometry.attachAttributes_(gl, this.program);\n\t\tthis.uniforms.apply(gl, this.program);\n\t\t// gl.viewport(0, 0, BW, BH);\n\t\tthis.drawFunc_(this.timer.delta);\n\t\tthis.uniforms.clean();\n\t\tthis.textures.clean();\n\t\tthis.dirty = false;\n\t\tthis.trigger('render', this);\n\t}\n\n\tprotected drawArrays_(deltaTime: number) {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// Clear\n\t\tgl.viewport(0, 0, this.W, this.H);\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\n\t\tgl.clearDepth(1.0);\n\t\t// Clear the canvas before we start drawing on it.\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\tgl.enable(gl.CULL_FACE);\n\t\tif (this.doubleSided && this.mode !== ContextMode.Flat) {\n\t\t\t// back\n\t\t\t// gl.frontFace(gl.CW);\n\t\t\tgl.cullFace(gl.FRONT);\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t\t// front\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t}\n\t\t// gl.frontFace(gl.CCW);\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\n\t\t// gl.drawElements(gl.TRIANGLES, this.geometry.size, gl.UNSIGNED_SHORT, 0);\n\t}\n\n\tprotected create_(): void {\n\t\tthis.createGeometry_();\n\t\tthis.createUniforms_();\n\t}\n\n\tprotected createGeometry_() {\n\t\t// console.log('Geometry', Geometry);\n\t\t// console.log('FlatGeometry', FlatGeometry);\n\t\t// console.log('BoxGeometry', BoxGeometry);\n\t\tthis.parseGeometry_();\n\t\tthis.setMode(this.mode);\n\t}\n\n\tprotected parseGeometry_() {\n\t\tconst regexp = /^attribute\\s+vec4\\s+a_position\\s*;\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]+)/gm;\n\t\tconst match = regexp.exec(this.vertexString);\n\t\tif (match && match.length > 1) {\n\t\t\tthis.mesh = match[1];\n\t\t} else {\n\t\t\tthis.mesh = this.defaultMesh;\n\t\t}\n\t}\n\n\tprotected createUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst fragmentString = this.fragmentString;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tconst timer = this.timer = new CanvasTimer();\n\t\tconst hasDelta = (fragmentString.match(/u_delta/g) || []).length > 1;\n\t\tconst hasTime = (fragmentString.match(/u_time/g) || []).length > 1;\n\t\tconst hasDate = (fragmentString.match(/u_date/g) || []).length > 1;\n\t\tconst hasMouse = (fragmentString.match(/u_mouse/g) || []).length > 1;\n\t\tthis.animated = hasTime || hasDate || hasMouse;\n\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (hasDelta) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (hasTime) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (hasDate) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.create(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (hasMouse) {\n\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [0, 0]);\n\t\t}\n\t\t// if (this.mode !== ContextMode.Flat) {\n\t\tthis.projectionMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.projectionMatrix as number[]);\n\t\tthis.modelViewMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.modelViewMatrix as number[]);\n\t\tthis.normalMatrix = mat4.create();\n\t\tthis.uniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.normalMatrix as number[]);\n\t\t// }\n\t}\n\n\tprotected update_(): void {\n\t\tthis.updateUniforms_();\n\t}\n\n\tprotected updateUniforms_(): void {\n\t\tconst gl = this.gl;\n\t\tconst BW = gl.drawingBufferWidth;\n\t\tconst BH = gl.drawingBufferHeight;\n\t\tif (!this.timer) {\n\t\t\treturn;\n\t\t}\n\t\tconst timer = this.timer.next();\n\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\n\t\tif (this.uniforms.has('u_delta')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_time')) {\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\n\t\t}\n\t\tif (this.uniforms.has('u_date')) {\n\t\t\tconst date = new Date();\n\t\t\tthis.uniforms.update(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\n\t\t}\n\t\tif (this.uniforms.has('u_mouse')) {\n\t\t\tconst mouse = this.mouse;\n\t\t\tthis.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [mouse.x, mouse.y]);\n            /*\n            const rect = this.rect;\n            if (mouse.x >= rect.left && mouse.x <= rect.right &&\n                mouse.y >= rect.top && mouse.y <= rect.bottom) {\n                const MX = (mouse.x - rect.left) * this.devicePixelRatio;\n                const MY = (this.canvas.height - (mouse.y - rect.top) * this.devicePixelRatio);\n                this.uniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [MX, MY]);\n            }\n            */\n\t\t}\n\t\tif (this.mode !== ContextMode.Flat) {\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.updateProjectionMatrix_() as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.updateModelViewMatrix_(this.timer.delta) as number[]);\n\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.updateNormalMatrix_(this.modelViewMatrix) as number[]);\n\t\t}\n\t}\n\n\tprotected updateProjectionMatrix_(): mat4 {\n\t\tconst gl = this.gl;\n\t\tconst fieldOfView = 45 * Math.PI / 180;\n\t\tconst aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\tconst zNear = 0.1;\n\t\tconst zFar = 100.0;\n\t\tmat4.perspective(this.projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\t\treturn this.projectionMatrix;\n\t}\n\n\tprotected updateModelViewMatrix_(deltaTime: number): mat4 {\n\t\tthis.modelViewMatrix = mat4.identity(this.modelViewMatrix);\n\t\tmat4.translate(this.modelViewMatrix, this.modelViewMatrix, [0.0, 0.0, -this.camera.radius]); // amount to translate\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.camera.theta + this.radians, [0, 1, 0]); // axis to rotate around (Y)\n\t\tmat4.rotate(this.modelViewMatrix, this.modelViewMatrix, this.camera.phi, [1, 0, 0]); // axis to rotate around (X)\n\t\tif (!this.camera.mouse) {\n\t\t\tthis.camera.theta += (0 - this.camera.theta) / 20;\n\t\t\tthis.camera.phi += (0 - this.camera.phi) / 20;\n\t\t\tthis.radians += deltaTime * 0.0005;\n\t\t}\n\t\treturn this.modelViewMatrix;\n\t}\n\n\tprotected updateNormalMatrix_(modelViewMatrix: mat4): mat4 {\n\t\t// this.normalMatrix = mat4.create();\n\t\tthis.normalMatrix = mat4.identity(this.normalMatrix);\n\t\tmat4.invert(this.normalMatrix, modelViewMatrix);\n\t\tmat4.transpose(this.normalMatrix, this.normalMatrix);\n\t\treturn this.normalMatrix;\n\t}\n\n\tpublic setMode(mode: ContextMode) {\n\t\tlet geometry: Geometry;\n\t\tif (mode === ContextMode.Mesh) {\n\t\t\tgeometry = this.cache[this.mesh];\n\t\t\tif (geometry) {\n\t\t\t\tthis.geometry = geometry;\n\t\t\t\tthis.mode = ContextMode.Mesh;\n\t\t\t\tthis.dirty = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlet loader: ObjLoader;\n\t\tswitch (mode) {\n\t\t\tcase ContextMode.Flat:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', mat4.create() as number[]);\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', mat4.create() as number[]);\n\t\t\t\tthis.uniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', mat4.create() as number[]);\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Box:\n\t\t\t\tgeometry = new BoxGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Sphere:\n\t\t\t\tgeometry = new SphereGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Torus:\n\t\t\t\tgeometry = new TorusGeometry();\n\t\t\t\tbreak;\n\t\t\tcase ContextMode.Mesh:\n\t\t\t\tgeometry = new FlatGeometry();\n\t\t\t\tif (this.mesh) {\n\t\t\t\t\tloader = new ObjLoader();\n\t\t\t\t\tloader.load(this.getResource(this.mesh)).then(geometry => {\n\t\t\t\t\t\tgeometry.createAttributes_(this.gl, this.program);\n\t\t\t\t\t\tconst cache: { [key: string]: Geometry } = {};\n\t\t\t\t\t\tcache[this.mesh] = geometry;\n\t\t\t\t\t\tthis.cache = cache;\n\t\t\t\t\t\tthis.geometry = geometry;\n\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\tLogger.warn('GlslCanvas', error);\n\t\t\t\t\t\tthis.mode = ContextMode.Flat;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmode = ContextMode.Flat;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tgeometry.create(this.gl, this.program);\n\t\tthis.geometry = geometry;\n\t\tthis.mode = mode;\n\t\tthis.dirty = true;\n\t}\n\n\tpublic setMesh(mesh: string) {\n\t\tthis.mesh = mesh;\n\t}\n\n\tpublic getResource(url: string): string {\n\t\treturn String((url.indexOf(':/') === -1 && this.workpath !== undefined) ? `${this.workpath}/${url}` : url);\n\t}\n\n}\n","import 'promise-polyfill';\nimport Buffers, { IOBuffer } from '../buffers/buffers';\nimport Context, { ContextMode } from '../context/context';\nimport Common from '../core/common';\nimport Logger from '../logger/logger';\nimport Vector2 from '../math/vector2';\nimport Renderer from '../renderer/renderer';\nimport Textures, { ITextureData, ITextureOptions, Texture } from '../textures/textures';\nimport Uniforms, { IUniformOption, Uniform, UniformMethod, UniformType } from '../uniforms/uniforms';\n\nexport interface ICanvasOptions extends WebGLContextAttributes {\n\tvertexString?: string;\n\tfragmentString?: string;\n\tbackgroundColor?: string;\n\tworkpath?: string;\n\tonError?: Function;\n\textensions?: string[];\n\tmode?: ContextMode;\n\tmesh?: string;\n\tdoubleSided?: boolean;\n}\n\nexport default class Canvas extends Renderer {\n\n\toptions: ICanvasOptions;\n\tcanvas: HTMLCanvasElement;\n\trect: ClientRect | DOMRect;\n\twidth: number;\n\theight: number;\n\tdevicePixelRatio: number;\n\tvalid: boolean = false;\n\tvisible: boolean = false;\n\tcontrols: boolean = false;\n\trafId: number;\n\n\tstatic items: Canvas[] = [];\n\n\tconstructor(\n\t\tcanvas: HTMLCanvasElement,\n\t\toptions: ICanvasOptions = {\n\t\t\t// alpha: true,\n\t\t\t// antialias: true,\n\t\t\t// premultipliedAlpha: true\n\t\t}\n\t) {\n\t\tsuper();\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.options = options;\n\t\tthis.canvas = canvas;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.rect = canvas.getBoundingClientRect();\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\n\t\tthis.mode = options.mode || ContextMode.Flat;\n\t\tthis.mesh = options.mesh || undefined;\n\t\tthis.doubleSided = options.doubleSided || false;\n\t\tthis.defaultMesh = this.mesh;\n\t\tthis.workpath = options.workpath;\n\t\tcanvas.style.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n\t\tthis.getShaders_().then((success) => {\n\t\t\tthis.load().then(success => {\n\t\t\t\tif (!this.program) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.addListeners_();\n\t\t\t\tthis.onLoop();\n\t\t\t});\n\t\t}, (error) => {\n\t\t\tLogger.error('GlslCanvas.getShaders_.error', error);\n\t\t});\n\t\tCanvas.items.push(this);\n\t}\n\n\tprivate getShaders_(): Promise<string[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.vertexString = this.options.vertexString || this.vertexString;\n\t\t\tthis.fragmentString = this.options.fragmentString || this.fragmentString;\n\t\t\tconst canvas = this.canvas;\n\t\t\tconst urls: any = {};\n\t\t\tif (canvas.hasAttribute('data-vertex-url')) {\n\t\t\t\turls.vertex = canvas.getAttribute('data-vertex-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment-url')) {\n\t\t\t\turls.fragment = canvas.getAttribute('data-fragment-url');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-vertex')) {\n\t\t\t\tthis.vertexString = canvas.getAttribute('data-vertex');\n\t\t\t}\n\t\t\tif (canvas.hasAttribute('data-fragment')) {\n\t\t\t\tthis.fragmentString = canvas.getAttribute('data-fragment');\n\t\t\t}\n\t\t\tif (Object.keys(urls).length) {\n\t\t\t\tPromise.all(Object.keys(urls).map((key, i) => {\n\t\t\t\t\tconst url: string = urls[key];\n\t\t\t\t\treturn Common.fetch(url)\n\t\t\t\t\t\t// .then((response) => response.text())\n\t\t\t\t\t\t.then((body) => {\n\t\t\t\t\t\t\tif (key === 'vertex') {\n\t\t\t\t\t\t\t\treturn this.vertexString = body;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn this.fragmentString = body;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t})).then(shaders => {\n\t\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve([this.vertexString, this.fragmentString]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addListeners_(): void {\n        /*\n        const resize = (e: Event) => {\n            this.rect = this.canvas.getBoundingClientRect();\n            this.trigger('resize', e);\n        };\n        */\n\t\tthis.onScroll = this.onScroll.bind(this);\n\t\tthis.onWheel = this.onWheel.bind(this);\n\t\tthis.onClick = this.onClick.bind(this);\n\t\tthis.onMove = this.onMove.bind(this);\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseOver = this.onMouseOver.bind(this);\n\t\tthis.onMouseOut = this.onMouseOut.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\n\t\tthis.onLoop = this.onLoop.bind(this);\n\t\t// window.addEventListener('resize', this.onResize);\n\t\twindow.addEventListener('scroll', this.onScroll);\n\t\tdocument.addEventListener('mousemove', this.onMouseMove, false);\n\t\tdocument.addEventListener('touchmove', this.onTouchMove);\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tprivate addCanvasListeners_() {\n\t\tthis.controls = this.canvas.hasAttribute('controls');\n\t\tthis.canvas.addEventListener('wheel', this.onWheel);\n\t\tthis.canvas.addEventListener('click', this.onClick);\n\t\tthis.canvas.addEventListener('mousedown', this.onMouseDown);\n\t\tthis.canvas.addEventListener('touchstart', this.onTouchStart);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.addEventListener('mouseover', this.onMouseOver);\n\t\t\tthis.canvas.addEventListener('mouseout', this.onMouseOut);\n\t\t\tif (!this.canvas.hasAttribute('data-autoplay')) {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeCanvasListeners_() {\n\t\tthis.canvas.removeEventListener('wheel', this.onWheel);\n\t\tthis.canvas.removeEventListener('click', this.onClick);\n\t\tthis.canvas.removeEventListener('mousedown', this.onMouseDown);\n\t\tthis.canvas.removeEventListener('mouseup', this.onMouseUp);\n\t\tthis.canvas.removeEventListener('touchstart', this.onTouchStart);\n\t\tthis.canvas.removeEventListener('touchend', this.onTouchEnd);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\n\t\t}\n\t}\n\n\tprivate removeListeners_() {\n\t\twindow.cancelAnimationFrame(this.rafId);\n\t\t// window.removeEventListener('resize', this.onResize);\n\t\twindow.removeEventListener('scroll', this.onScroll);\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\n\t\tthis.removeCanvasListeners_();\n\t}\n\n\tprivate onScroll(e: Event) {\n\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t}\n\n\tprivate onWheel(e: MouseWheelEvent) {\n\t\tthis.camera.wheel(e.deltaY);\n\t\tthis.dirty = this.mode !== ContextMode.Flat;\n\t\tthis.trigger('wheel', e);\n\t}\n\n\tprivate onClick(e: MouseEvent) {\n\t\tif (this.controls) {\n\t\t\tthis.toggle();\n\t\t}\n\t\tthis.trigger('click', e);\n\t}\n\n\tprivate onDown(mx: number, my: number) {\n\t\tthis.mouse.x = mx * this.devicePixelRatio;\n\t\tthis.mouse.y = my * this.devicePixelRatio;\n\t\tconst rect = this.rect;\n\t\tconst min = Math.min(rect.width, rect.height);\n\t\tthis.camera.down(mx / min, my / min);\n\t\tthis.trigger('down', this.mouse);\n\t}\n\n\tprivate onMove(mx: number, my: number) {\n\t\tconst rect = this.rect;\n\t\tconst x = (mx - rect.left) * this.devicePixelRatio;\n\t\tconst y = (rect.height - (my - rect.top)) * this.devicePixelRatio;\n\t\tif (x !== this.mouse.x ||\n\t\t\ty !== this.mouse.y) {\n\t\t\tthis.mouse.x = x;\n\t\t\tthis.mouse.y = y;\n\t\t\tconst min = Math.min(rect.width, rect.height);\n\t\t\tthis.camera.move(mx / min, my / min);\n\t\t\tthis.dirty = this.mode !== ContextMode.Flat && this.camera.mouse !== null;\n\t\t\tthis.trigger('move', this.mouse);\n\t\t}\n\t}\n\n\tprivate onUp(e: Event) {\n\t\tthis.camera.up();\n\t\tif (this.controls) {\n\t\t\tthis.pause();\n\t\t}\n\t\tthis.trigger('out', e);\n\t}\n\n\tprivate onMouseDown(e: MouseEvent) {\n\t\tthis.onDown(e.clientX, e.clientY);\n\t\tdocument.addEventListener('mouseup', this.onMouseUp);\n\t\tdocument.removeEventListener('touchstart', this.onTouchStart);\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\n\t}\n\n\tprivate onMouseMove(e: MouseEvent) {\n\t\tthis.onMove(e.clientX, e.clientY);\n\t}\n\n\tprivate onMouseUp(e: MouseEvent) {\n\t\tthis.onUp(e);\n\t}\n\n\tprivate onMouseOver(e: MouseEvent) {\n\t\tthis.play();\n\t\tthis.trigger('over', e);\n\t}\n\n\tprivate onMouseOut(e: MouseEvent) {\n\t\tthis.pause();\n\t\tthis.trigger('out', e);\n\t}\n\n\tprivate onTouchStart(e: TouchEvent) {\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\n\t\t\tp = p || new Vector2();\n\t\t\tp.x += touch.clientX;\n\t\t\tp.y += touch.clientY;\n\t\t\treturn p;\n\t\t}, null);\n\t\tif (touch) {\n\t\t\tthis.onDown(touch.x / e.touches.length, touch.y / e.touches.length);\n\t\t}\n\t\tif (this.controls) {\n\t\t\tthis.play();\n\t\t}\n\t\tthis.trigger('over', e);\n\t\tdocument.addEventListener('touchend', this.onTouchEnd);\n\t\tdocument.removeEventListener('mousedown', this.onMouseDown);\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\n\t\tif (this.controls) {\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\n\t\t}\n\t}\n\n\tprivate onTouchMove(e: TouchEvent) {\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\n\t\t\tp = p || new Vector2();\n\t\t\tp.x += touch.clientX;\n\t\t\tp.y += touch.clientY;\n\t\t\treturn p;\n\t\t}, null);\n\t\tif (touch) {\n\t\t\tthis.onMove(touch.x / e.touches.length, touch.y / e.touches.length);\n\t\t}\n\t}\n\n\tprivate onTouchEnd(e: TouchEvent) {\n\t\tthis.onUp(e);\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd);\n\t}\n\n\tprivate onLoop(time?: number) {\n\t\tthis.checkRender();\n\t\tthis.rafId = window.requestAnimationFrame(this.onLoop);\n\t}\n\n\tprivate setUniform_(\n\t\tkey: string,\n\t\tvalues: any[],\n\t\toptions: ITextureOptions = {},\n\t\ttype: UniformType = null\n\t): void {\n\t\tconst uniform: Uniform | Uniform[] = Uniforms.parseUniform(key, values, type);\n\t\tif (Array.isArray(uniform)) {\n\t\t\tif (Uniforms.isArrayOfSampler2D(uniform)) {\n\t\t\t\tuniform.forEach((x) => this.loadTexture(x.key, x.values[0], options));\n\t\t\t} else {\n\t\t\t\tuniform.forEach((x) => this.uniforms.set(x.key, x.values[0]));\n\t\t\t}\n\t\t} else if (uniform) {\n\t\t\tswitch (uniform.type) {\n\t\t\t\tcase UniformType.Sampler2D:\n\t\t\t\t\tthis.loadTexture(key, values[0], options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.uniforms.set(key, uniform);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isVisible_(): boolean {\n\t\tconst rect = this.rect;\n\t\treturn (rect.top + rect.height) > 0 && rect.top < (window.innerHeight || document.documentElement.clientHeight);\n\t}\n\n\tprivate isAnimated_(): boolean {\n\t\treturn (this.animated || this.textures.animated || this.mode !== ContextMode.Flat) && !this.timer.paused;\n\t}\n\n\tprivate isDirty_(): boolean {\n\t\treturn this.dirty || this.uniforms.dirty || this.textures.dirty;\n\t}\n\n\t// check size change at start of requestFrame\n\tprivate sizeDidChanged_(): boolean {\n\t\tconst gl = this.gl;\n\t\tconst CW = Math.ceil(this.canvas.clientWidth),\n\t\t\tCH = Math.ceil(this.canvas.clientHeight);\n\t\tif (this.width !== CW ||\n\t\t\tthis.height !== CH) {\n\t\t\tthis.width = CW;\n\t\t\tthis.height = CH;\n\t\t\t// Lookup the size the browser is displaying the canvas in CSS pixels\n\t\t\t// and compute a size needed to make our drawingbuffer match it in\n\t\t\t// device pixels.\n\t\t\tconst W = Math.ceil(CW * this.devicePixelRatio);\n\t\t\tconst H = Math.ceil(CH * this.devicePixelRatio);\n\t\t\tthis.W = W;\n\t\t\tthis.H = H;\n\t\t\tthis.canvas.width = W;\n\t\t\tthis.canvas.height = H;\n            /*\n            if (gl.canvas.width !== W ||\n                gl.canvas.height !== H) {\n                gl.canvas.width = W;\n                gl.canvas.height = H;\n                // Set the viewport to match\n                // gl.viewport(0, 0, W, H);\n            }\n            */\n\t\t\tfor (const key in this.buffers.values) {\n\t\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\t\tbuffer.resize(gl, W, H);\n\t\t\t}\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\n\t\t\tthis.trigger('resize');\n\t\t\t// gl.useProgram(this.program);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate parseTextures_(fragmentString: string): boolean {\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)|\\s*)/gm;\n\t\tconst regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]*)|\\s*)/gm;\n\t\t// const regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\://|\\.|\\-|\\_]*)|\\s*)((\\s*\\:\\s)(\\{(\\s*\\w*\\:\\s*['|\"]{0,1}\\w*['|\"]{0,1}\\s*[,]{0,1})+\\}))*/gm;\n\t\tlet matches;\n\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\n\t\t\tconst key = matches[1];\n\t\t\tconst url = matches[3];\n\t\t\tif (Texture.isTextureUrl(url)) {\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t} else if (!this.buffers.has(key)) {\n\t\t\t\t// create empty texture\n\t\t\t\tthis.textureList.push({ key, url: null });\n\t\t\t}\n\t\t}\n\t\tif (this.canvas.hasAttribute('data-textures')) {\n\t\t\tconst urls = this.canvas.getAttribute('data-textures').split(',');\n\t\t\turls.forEach((url: string, i: number) => {\n\t\t\t\tconst key = 'u_texture' + i;\n\t\t\t\tthis.textureList.push({ key, url });\n\t\t\t});\n\t\t}\n\t\treturn this.textureList.length > 0;\n\t}\n\n\tload(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<boolean> {\n\t\tconst fragmentVertexString: string = Context.getFragmentVertex(this.gl, fragmentString || this.fragmentString);\n\t\treturn Promise.all([\n\t\t\tContext.getIncludes(fragmentString || this.fragmentString),\n\t\t\tContext.getIncludes(fragmentVertexString || vertexString || this.vertexString)\n\t\t]).then(array => {\n\t\t\tthis.fragmentString = array[0];\n\t\t\tthis.vertexString = array[1];\n\t\t\treturn this.createContext_();\n\t\t});\n\t}\n\n\tprivate getContext_(): WebGLRenderingContext | WebGL2RenderingContext {\n\t\tconst vertexString = this.vertexString;\n\t\tconst fragmentString = this.fragmentString;\n\t\tthis.vertexString = Context.getVertex(vertexString, fragmentString, this.mode);\n\t\tthis.fragmentString = Context.getFragment(vertexString, fragmentString, this.mode);\n\t\tif (Context.versionDiffers(this.gl, vertexString, fragmentString)) {\n\t\t\tthis.destroyContext_();\n\t\t\tthis.swapCanvas_();\n\t\t\tthis.uniforms = new Uniforms();\n\t\t\tthis.buffers = new Buffers();\n\t\t\tthis.textures = new Textures();\n\t\t\tthis.textureList = [];\n\t\t}\n\t\tif (!this.gl) {\n\t\t\tconst gl = Context.tryInferContext(vertexString, fragmentString, this.canvas, this.options, this.options.extensions, this.options.onError);\n\t\t\tif (!gl) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis.gl = gl;\n\t\t}\n\t\treturn this.gl;\n\t}\n\n\tprivate createContext_(): boolean {\n\t\tconst gl = this.getContext_();\n\t\tif (!gl) {\n\t\t\treturn false;\n\t\t}\n\t\tlet vertexShader, fragmentShader;\n\t\ttry {\n\t\t\tContext.inferPrecision(this.fragmentString);\n\t\t\tvertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\n\t\t\tfragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER);\n\t\t\t// If Fragment shader fails load a empty one to sign the error\n\t\t\tif (!fragmentShader) {\n\t\t\t\tconst defaultFragment = Context.getFragment(null, null, this.mode);\n\t\t\t\tfragmentShader = Context.createShader(gl, defaultFragment, gl.FRAGMENT_SHADER);\n\t\t\t\tthis.valid = false;\n\t\t\t} else {\n\t\t\t\tthis.valid = true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// !!!\n\t\t\t// console.error(e);\n\t\t\tthis.trigger('error', e);\n\t\t\treturn false;\n\t\t}\n\t\t// Create and use program\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\n\t\tif (!program) {\n\t\t\tthis.trigger('error', Context.lastError);\n\t\t\treturn false;\n\t\t}\n\t\t// console.log(this.vertexString, this.fragmentString, program);\n\t\t// Delete shaders\n\t\t// gl.detachShader(program, vertexShader);\n\t\t// gl.detachShader(program, fragmentShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t\tthis.program = program;\n\t\tif (this.valid) {\n\t\t\ttry {\n\t\t\t\tthis.buffers = Buffers.getBuffers(gl, this.fragmentString, Context.getBufferVertex(gl));\n\t\t\t} catch (e) {\n\t\t\t\t// console.error('load', e);\n\t\t\t\tthis.valid = false;\n\t\t\t\tthis.trigger('error', e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.create_();\n\t\t\tif (this.animated) {\n\t\t\t\tthis.canvas.classList.add('animated');\n\t\t\t} else {\n\t\t\t\tthis.canvas.classList.remove('animated');\n\t\t\t}\n\t\t}\n\t\t// Trigger event\n\t\tthis.trigger('load', this);\n\t\treturn this.valid;\n\t}\n\n\tprotected create_(): void {\n\t\tthis.parseMode_();\n\t\tthis.parseMesh_();\n\t\tsuper.create_();\n\t\tthis.createBuffers_();\n\t\tthis.createTextures_();\n\t}\n\n\tprotected parseMode_() {\n\t\tif (this.canvas.hasAttribute('data-mode')) {\n\t\t\tconst data = this.canvas.getAttribute('data-mode');\n\t\t\tif (['flat', 'box', 'sphere', 'torus', 'mesh'].indexOf(data) !== -1) {\n\t\t\t\tthis.mode = data as ContextMode;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected parseMesh_() {\n\t\tif (this.canvas.hasAttribute('data-mesh')) {\n\t\t\tconst data = this.canvas.getAttribute('data-mesh');\n\t\t\tif (data.indexOf('.obj') !== -1) {\n\t\t\t\tthis.mesh = this.defaultMesh = data;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected createBuffers_() {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected createTextures_() {\n\t\tconst hasTextures = this.parseTextures_(this.fragmentString);\n\t\tif (hasTextures) {\n\t\t\tthis.textureList.filter(x => x.url).forEach(x => {\n\t\t\t\tthis.setTexture(x.key, x.url, x.options);\n\t\t\t});\n\t\t\tthis.textureList = [];\n\t\t}\n\t}\n\n\tprotected update_(): void {\n\t\tsuper.update_();\n\t\tthis.updateBuffers_();\n\t\tthis.updateTextures_();\n\t}\n\n\tprotected updateBuffers_(): void {\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\n\t\t}\n\t}\n\n\tprotected updateTextures_(): void {\n\t\tconst gl = this.gl;\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.tryUpdate(gl);\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, texture.key, [texture.index]);\n\t\t}\n\t}\n\n\tprivate destroyContext_(): void {\n\t\tconst gl = this.gl;\n\t\tgl.useProgram(null);\n\t\tif (this.program) {\n\t\t\tgl.deleteProgram(this.program);\n\t\t}\n\t\tfor (const key in this.buffers.values) {\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\n\t\t\tbuffer.destroy(gl);\n\t\t}\n\t\tfor (const key in this.textures.values) {\n\t\t\tconst texture: Texture = this.textures.values[key];\n\t\t\ttexture.destroy(gl);\n\t\t}\n\t\tthis.buffers = null;\n\t\tthis.textures = null;\n\t\tthis.uniforms = null;\n\t\tthis.program = null;\n\t\tthis.gl = null;\n\t}\n\n\tprivate swapCanvas_(): void {\n\t\tconst canvas = this.canvas;\n\t\tconst canvas_ = canvas.cloneNode() as HTMLCanvasElement;\n\t\tcanvas.parentNode.replaceChild(canvas_, canvas);\n\t\tthis.canvas = canvas_;\n\t\tthis.addCanvasListeners_();\n\t}\n\n\tdestroy(): void {\n\t\tthis.removeListeners_();\n\t\tthis.destroyContext_();\n\t\tthis.animated = false;\n\t\tthis.valid = false;\n\t\tconst index = Canvas.items.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tCanvas.items.splice(index, 1);\n\t\t}\n\t}\n\n\tloadTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t) {\n\t\tif (this.valid) {\n\t\t\t// Logger.log('GlslCanvas.loadTexture', key, urlElementOrData);\n\t\t\tthis.textures.createOrUpdate(this.gl, key, urlElementOrData, this.buffers.count, options, this.options.workpath).then(\n\t\t\t\ttexture => {\n\t\t\t\t\tconst index = texture.index;\n\t\t\t\t\tconst uniform = this.uniforms.createTexture(key, index);\n\t\t\t\t\tuniform.texture = texture;\n\t\t\t\t\tconst keyResolution = key.indexOf('[') !== -1 ? key.replace('[', 'Resolution[') : key + 'Resolution';\n\t\t\t\t\t// const uniformResolution = ;\n\t\t\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, keyResolution, [texture.width, texture.height]);\n\t\t\t\t\t// Logger.log('loadTexture', key, url, index, texture.width, texture.height);\n\t\t\t\t\treturn texture;\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tconst message = Array.isArray(error.path) ? error.path.map((x: any) => x.error ? x.error.message : '').join(', ') : error.message;\n\t\t\t\t\tLogger.error('GlslCanvas.loadTexture.error', key, urlElementOrData, message);\n\t\t\t\t\tthis.trigger('textureError', { key, urlElementOrData, message });\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.textureList.push({ key, url: urlElementOrData, options });\n\t\t}\n\t}\n\n\tsetTexture(\n\t\tkey: string,\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\n\t\toptions: ITextureOptions = {}\n\t): void {\n\t\treturn this.setUniform_(key, [urlElementOrData], options);\n\t}\n\n\tsetUniform(key: string, ...values: any[]): void {\n\t\treturn this.setUniform_(key, values);\n\t}\n\n\tsetUniformOfInt(key: string, values: any[]): void {\n\t\treturn this.setUniform_(key, values, null, UniformType.Int);\n\t}\n\n\tsetUniforms(values: IUniformOption): void {\n\t\tfor (const key in values) {\n\t\t\tthis.setUniform(key, values[key]);\n\t\t}\n\t}\n\n\tpause(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.pause();\n\t\t\tthis.canvas.classList.add('paused');\n\t\t\tthis.trigger('pause');\n\t\t}\n\t}\n\n\tplay(): void {\n\t\tif (this.valid) {\n\t\t\tthis.timer.play();\n\t\t\tthis.canvas.classList.remove('paused');\n\t\t\tthis.trigger('play');\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tif (this.valid) {\n\t\t\tif (this.timer.paused) {\n\t\t\t\tthis.play();\n\t\t\t} else {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckRender(): void {\n\t\tif (this.isVisible_() && (this.sizeDidChanged_() || this.isDirty_() || this.isAnimated_())) {\n\t\t\tthis.render();\n\t\t\tthis.canvas.classList.add('playing');\n\t\t} else {\n\t\t\tthis.canvas.classList.remove('playing');\n\t\t}\n\t}\n\n\t/*\n\ttest(\n\t\tfragmentString?: string,\n\t\tvertexString?: string\n\t): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst vertex = this.vertexString;\n\t\t\tconst fragment = this.fragmentString;\n\t\t\tconst paused = this.timer.paused;\n\t\t\t// Thanks to @thespite for the help here\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n\t\t\tconst extension = this.gl.getExtension('EXT_disjoint_timer_query');\n\t\t\tconst query = extension.createQueryEXT();\n\t\t\tlet wasValid = this.valid;\n\t\t\tif (fragmentString || vertexString) {\n\t\t\t\tthis.load(fragmentString, vertexString);\n\t\t\t\twasValid = this.valid;\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.timer.paused = true;\n\t\t\textension.beginQueryEXT(extension.TIME_ELAPSED_EXT, query);\n\t\t\tthis.render();\n\t\t\textension.endQueryEXT(extension.TIME_ELAPSED_EXT);\n\t\t\tconst waitForTest = () => {\n\t\t\t\tthis.render();\n\t\t\t\tconst available = extension.getQueryObjectEXT(query, extension.QUERY_RESULT_AVAILABLE_EXT);\n\t\t\t\tconst disjoint = this.gl.getParameter(extension.GPU_DISJOINT_EXT);\n\t\t\t\tif (available && !disjoint) {\n\t\t\t\t\tconst result = {\n\t\t\t\t\t\twasValid: wasValid,\n\t\t\t\t\t\tfragment: fragmentString || this.fragmentString,\n\t\t\t\t\t\tvertex: vertexString || this.vertexString,\n\t\t\t\t\t\ttimeElapsedMs: extension.getQueryObjectEXT(query, extension.QUERY_RESULT_EXT) / 1000000.0\n\t\t\t\t\t};\n\t\t\t\t\tthis.timer.paused = paused;\n\t\t\t\t\tif (fragmentString || vertexString) {\n\t\t\t\t\t\tthis.load(fragment, vertex);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else {\n\t\t\t\t\twindow.requestAnimationFrame(waitForTest);\n\t\t\t\t}\n\t\t\t}\n\t\t\twaitForTest();\n\t\t});\n\t}\n\t*/\n\n}\n\n","export { Buffer, BufferFloatType, default as Buffers, IOBuffer } from './buffers/buffers';\nexport { default as OrbitCamera } from './camera/orbit-camera';\nexport { default as Canvas, ICanvasOptions } from './canvas/canvas';\nexport { default as CanvasTimer } from './canvas/canvas-timer';\nexport { DefaultWebGL2BufferFragment, DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferFragment, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './context/chunks';\nexport { ContextError, ContextVersion, ContextVertexBuffers, default as Context } from './context/context';\nexport { default as Common } from './core/common';\nexport { default as IterableStringMap } from './core/iterable';\nexport { default as Subscriber, Listener } from './core/subscriber';\nexport { default as BoxGeometry } from './geometry/box-geometry';\nexport { default as FlatGeometry } from './geometry/flat-geometry';\nexport { default as Geometry } from './geometry/geometry';\nexport { default as SphereGeometry } from './geometry/sphere-geometry';\nexport { default as TorusGeometry } from './geometry/torus-geometry';\nexport { default as ObjLoader } from './loaders/obj-loader';\nexport { default as Logger } from './logger/logger';\nexport { default as Vector2 } from './math/vector2';\nexport { default as Vector3 } from './math/vector3';\nexport { default as Renderer } from './renderer/renderer';\nexport { default as Textures, isTextureData, ITextureData, ITextureInput, ITextureOptions, Texture, TextureExtensions, TextureFilteringType, TextureImageExtensions, TextureSourceType, TextureVideoExtensions } from './textures/textures';\nexport { default as Uniforms, IUniformOption, METHODS_FLOAT, METHODS_FLOATV, METHODS_INT, METHODS_INTV, Uniform, UniformMethod, UniformTexture, UniformType } from './uniforms/uniforms';\n\nimport Canvas, { ICanvasOptions } from './canvas/canvas';\n\nexport function of(canvas: HTMLCanvasElement, options?: ICanvasOptions): Canvas {\n\treturn Canvas.items.find(x => x.canvas === canvas) || new Canvas(canvas, options);\n}\n\nexport function loadAll(): Canvas[] {\n\tconst canvases: HTMLCanvasElement[] = <HTMLCanvasElement[]>[].slice.call(document.getElementsByClassName('glsl-canvas')).filter((x: HTMLElement) => x instanceof HTMLCanvasElement);\n\treturn canvases.map(x => of(x));\n}\n\nif (document) {\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tloadAll();\n\t});\n}\n"]}