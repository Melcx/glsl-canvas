{"version":3,"sources":["src/glsl.ts","../../src/context/chunks.ts","../../src/logger/logger.ts","../../src/core/common.ts","../../src/context/context.ts","../../src/core/iterable.ts","../../src/buffers/buffers.ts","../../src/geometry/geometry.ts","../../src/geometry/flat-geometry.ts","../../src/math/vector2.ts","../../src/math/vector3.ts","../../src/camera/orbit-camera.ts","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../src/textures/textures.ts","../../src/canvas/canvas-timer.ts","../../src/core/subscriber.ts","../../src/geometry/box-geometry.ts","../../src/geometry/sphere-geometry.ts","../../src/geometry/torus-geometry.ts","../../src/loaders/obj-loader.ts","../../src/uniforms/uniforms.ts","../../src/renderer/renderer.ts","../../src/canvas/canvas.ts","../../src/glsl.ts"],"names":["g","f","exports","module","define","amd","globalThis","self","glsl","this","_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_inheritsLoose","prototype","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","i","Symbol","toPrimitive","call","TypeError","String","Number","_toPrimitive","LoggerLevel","DefaultWebGLVertexAttributes_","DefaultWebGLFragmentAttributes_","DefaultWebGL2VertexAttributes_","DefaultWebGL2FragmentAttributes_","DefaultWebGLUniform_","DefaultWebGLFlatVertex_","DefaultWebGLMeshVertex_","DefaultWebGLMeshVertex","DefaultWebGL2MeshVertex","DefaultWebGLFlatFragment","DefaultWebGL2FlatFragment","DefaultWebGLMeshFragment","DefaultWebGL2MeshFragment","DefaultWebGLBufferVertex","DefaultWebGL2BufferVertex","DefaultWebGLBufferFragment","DefaultWebGL2BufferFragment","Common","fetch","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","responseText","onerror","error","console","log","Error","ontimeout","onabort","open","send","getResource","filepath","workpath","indexOf","join","comps","_len","arguments","args","Array","_key","forEach","a","x","pop","push","dirname","path","replace","split","ContextVersion","ContextPrecision","ContextMode","Logger","_console","enabled","level","Log","apply","warn","_console2","Warn","_console3","ContextError","ContextDefault","webgl","flat","vertex","fragment","mesh","webgl2","ContextVertexBuffers","texcoord","position","Context","getContext_","canvas","options","names","context","getContext","getContext2_","getFragmentVertex","gl","fragmentString","vertexString","version","inferVersion","WebGl2","exec","getIncludes","input","undefined","match","regex","promises","_loop","slice","index","filePath","nextWorkpath","then","all","chunks","isWebGl","WebGLRenderingContext","isWebGl2","window","WebGL2RenderingContext","source","WebGl","inferPrecision","precision","versionDiffers","currentVersion","getBufferVertex","getVertex","mode","Flat","getFragment","tryInferContext","attributes","extensions","errorCallback","handleError","errorCode","html","container","parentNode","innerHTML","BrowserSupport","inferContext","supportedExtensions","getSupportedExtensions","getExtension","Other","tryGetContext","createShader","type","offset","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","locations","program","attachShader","bindAttribLocation","linkProgram","validateProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","createVertexBuffers","vertexBuffers","texcoordIndex","getAttribLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","positionIndex","MediumP","StringMap","BufferFloatType","IterableStringMap","values","_proto","has","set","item","get","callbackfn","_this","keys","reduce","initialValue","_this2","previous","Geometry","positions","colors","normals","texcoords","positionBuffer","colorBuffer","normalBuffer","texcoordBuffer","positionLocation","colorLocation","normalLocation","texcoordLocation","size","assign","createData_","createAttributes_","createBufferData_","array","buffer","createAttribLocation_","name","location","attachAttributes_","attribLocation","bindAttributes_","fromIndices","indices","FlatGeometry","_Geometry","Buffer","BW","BH","texture","createFramebuffer","getTexture","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","getFloatType","getHalfFloatType","extension","HALF_FLOAT","HALF_FLOAT_OES","getInternalFormat","RGBA16F","RGBA","getType","internalFormat","format","createTexture","activeTexture","TEXTURE0","bindTexture","texImage2D","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","resize","bindFramebuffer","pixels","status","minW","Math","min","minH","readPixels","newIndex","newTexture","texSubImage2D","newBuffer","deleteTexture","IOBuffer","geometry","output","isValid","_proto2","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","render","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","drawArrays","TRIANGLES","destroy","Buffers","_IterableStringMap","getBuffers","buffers","count","matches","regexp","bufferFragmentString","drawingBufferWidth","drawingBufferHeight","Vector2","y","isVector2","copy","v","sqrt","normalize","divideScalar","scalar","multiplyScalar","subVectors","b","addVectors","Vector3","z","isVector3","crossVectors","ax","ay","az","bx","by","bz","RAD","PI","OrbitCamera","_Vector","theta","phi","radius","value","mouse","dirty","down","move","max","up","wheel","d","fromVector","vector","acos","atan","toArray","camera","spr","sin","cos","ARRAY_TYPE","out","glMatrix.ARRAY_TYPE","identity","rotate","rad","axis","s","c","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","b00","b01","b02","b10","b11","b12","b20","b21","b22","len","hypot","TextureSourceType","TextureFilteringType","perspective","fovy","aspect","near","far","nf","tan","Infinity","CanvasTimer","start","delay","current","delta","paused","now","performance","play","pause","next","Listener","event","callback","Subscriber","listeners","Set","logListeners","subscribe","listener","add","unsubscribe","delete","unsubscribeAll","on","off","trigger","data","BoxGeometry","faceColors","j","concat","SphereGeometry","ix","iy","phiLength","thetaLength","p","n","thetaEnd","grid","positionRow","uOffset","u","uvx","uvy","heightDivisions","TorusGeometry","tubularDivisions","radialDivisions","normal","p1","p2","B","T","N","calculatePositionOnCurve","cx","cy","round","q","cu","su","quOverP","cs","COLORS","CI","ObjLoader","load","text","parse","parseIndices","faceIndices","k","l","NaN","parseFaces","F","V","VN","VT","si","vl","fill","rgb","_this3","line","trim","map","parseFloat","parseInt","boundingBox","POSITIVE_INFINITY","NEGATIVE_INFINITY","dx","dy","dz","unrapUvw","pitch","asin","yaw","atan2","tx","ty","TextureImageExtensions","TextureVideoExtensions","TextureExtensions","isTextureData","object","Texture","UniformMethod","UniformType","_Subscriber","filtering","Linear","width","height","sourceType","valid","animated","powerOf2","isPowerOf2","isSafari","test","navigator","userAgent","isTextureUrl","isTexture","urlElementOrData","getTextureOptions","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","prev","curr","params","decodeURIComponent","Boolean","document","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","element","setData","Uint8Array","setUrl","setElement","Url","promise","ext","toLowerCase","isVideo","src","createElement","setAttribute","loop","muted","addEventListener","crossOrigin","originalElement","Element","video","update","setFiltering","message","JSON","stringify","Data","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","naturalWidth","naturalHeight","UNSIGNED_BYTE","videoWidth","videoHeight","imageBuffer","tryUpdate","MipMap","wrapS","repeat","REPEAT","wrapT","LINEAR_MIPMAP_LINEAR","LINEAR","generateMipmap","Nearest","Textures","clean","_this4","createOrUpdate","_this5","textureOptions","flag","METHODS_INT","Uniform1i","Uniform2i","Uniform3i","Uniform4i","METHODS_FLOAT","Uniform1f","Uniform2f","Uniform3f","Uniform4f","METHODS_INTV","Uniform1iv","Uniform2iv","Uniform3iv","Uniform4iv","METHODS_FLOATV","Uniform1fv","Uniform2fv","Uniform3fv","Uniform4fv","Uniform","method","UniformMatrix2fv","UniformMatrix3fv","UniformMatrix4fv","getUniformLocation","UniformTexture","_Uniform2","Uniforms","isArrayOfInteger","isInteger","isArrayOfNumber","isArrayOfBoolean","isArrayOfTexture","isArrayOfSampler2D","Sampler2D","getType_","Unknown","subject","isArray","Float","Bool","getMethod_","isVector","Int","parseUniform","uniform","isDifferent","Renderer","timer","uniforms","textures","textureList","W","H","radians","drawFunc_","projectionMatrix","modelViewMatrix","normalMatrix","defaultMesh","doubleSided","cache","updateUniformDelta_","updateUniformTime_","updateUniformDate_","updateUniformMouse_","updateUniformCamera_","updateUniformMesh_","drawArrays_","update_","deltaTime","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","cullFace","FRONT","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","BACK","create_","createGeometry_","createUniforms_","parseGeometry_","setMode","hasDelta","hasTime","hasDate","hasMouse","hasCamera","updateUniformDelta__","updateUniformNoop_","updateUniformTime__","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","updateUniformDate__","updateUniformMouse__","updateUniformCamera__","mat4","updateUniformMesh__","updateProjectionMatrix_","updateModelViewMatrix_","updateNormalMatrix_","updateUniformFlat__","fieldOfView","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","det","Mesh","Box","Sphere","Torus","setMesh","Canvas","_Renderer","rect","devicePixelRatio","visible","controls","rafId","vertexPath","fragmentPath","getBoundingClientRect","style","backgroundColor","getShaders_","_","addListeners_","onLoop","items","ReferenceError","_assertThisInitialized","urls","hasAttribute","getAttribute","body","onScroll","onWheel","onClick","onMove","onMouseDown","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onTouchMove","onTouchEnd","onTouchStart","addCanvasListeners_","removeCanvasListeners_","removeEventListener","removeListeners_","cancelAnimationFrame","deltaY","toggle","onDown","mx","my","left","top","onUp","clientX","clientY","touch","touches","checkRender","requestAnimationFrame","setUniform_","loadTexture","isVisible_","innerHeight","documentElement","clientHeight","isAnimated_","isDirty_","sizeDidChanged_","CW","ceil","clientWidth","CH","parseTextures_","_this6","fragmentVertexString","createContext_","destroyContext_","swapCanvas_","onError","defaultFragment","classList","remove","parseMode_","parseMesh_","createBuffers_","createTextures_","_this7","_this8","filter","setTexture","updateBuffers_","updateTextures_","_this9","_this10","_this11","canvas_","cloneNode","replaceChild","splice","_this12","keyResolution","setUniform","setUniformOfInt","setUniforms","_this13","of","find","loadAll","getElementsByClassName"],"mappings":"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","file":"dist\\umd\\glsl-canvas.min.js","sourcesContent":[null,"\r\nexport const DefaultWebGLVertexAttributes_ = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nattribute vec4 a_position;\r\nattribute vec4 a_normal;\r\nattribute vec2 a_texcoord;\r\nattribute vec4 a_color;\r\n\r\nvarying vec4 v_position;\r\nvarying vec4 v_normal;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGLFragmentAttributes_ = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nvarying vec4 v_position;\r\nvarying vec4 v_normal;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGL2VertexAttributes_ = `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 a_position;\r\nin vec4 a_normal;\r\nin vec2 a_texcoord;\r\nin vec4 a_color;\r\n\r\nout vec4 v_position;\r\nout vec4 v_normal;\r\nout vec2 v_texcoord;\r\nout vec4 v_color;\r\n`;\r\n\r\nexport const DefaultWebGL2FragmentAttributes_ = `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 v_position;\r\nin vec4 v_normal;\r\nin vec2 v_texcoord;\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\n`;\r\n\r\nexport const DefaultWebGLUniform_ = `\r\nuniform mat4 u_projectionMatrix;\r\nuniform mat4 u_modelViewMatrix;\r\nuniform mat4 u_normalMatrix;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\n`;\r\n\r\nexport const DefaultWebGL2Uniform_ = DefaultWebGLUniform_;\r\n\r\nexport const DefaultWebGLFlatVertex_ = `\r\nvoid main() {\r\n\tv_position = a_position;\r\n\tv_normal = a_normal;\r\n\tv_texcoord = a_texcoord;\r\n\tv_color = a_color;\r\n\tgl_Position = a_position;\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLMeshVertex_ = `\r\nvoid main(void) {\r\n\tv_position = u_projectionMatrix * u_modelViewMatrix * a_position;\r\n\tv_normal = u_normalMatrix * a_normal;\r\n\tv_texcoord = a_texcoord;\r\n\tv_color = a_color;\r\n\tgl_Position = v_position;\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLFlatFragment_ = `\r\nvoid main() {\r\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\tst.x *= u_resolution.x / u_resolution.y;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * st.y,\r\n\t\tabs(cos(u_time * 0.2)) * st.y,\r\n\t\tabs(sin(u_time)) * st.y\r\n\t);\r\n\tgl_FragColor = vec4(color, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGL2FlatFragment_ = `\r\nvoid main() {\r\n\tvec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\tst.x *= u_resolution.x / u_resolution.y;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * st.y,\r\n\t\tabs(cos(u_time * 0.2)) * st.y,\r\n\t\tabs(sin(u_time)) * st.y\r\n\t);\r\n\toutColor = vec4(color, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLMeshFragment_ = `\r\nvoid main() {\r\n\tvec2 uv = v_texcoord;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * uv.y,\r\n\t\tabs(cos(u_time * 0.2)) * uv.y,\r\n\t\tabs(sin(u_time)) * uv.y\r\n\t);\r\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\r\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\r\n\tgl_FragColor = vec4(v_color.rgb * color * light, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGL2MeshFragment_ = `\r\nvoid main() {\r\n\tvec2 uv = v_texcoord;\r\n\tvec3 color = vec3(\r\n\t\tabs(cos(u_time * 0.1)) * uv.y,\r\n\t\tabs(cos(u_time * 0.2)) * uv.y,\r\n\t\tabs(sin(u_time)) * uv.y\r\n\t);\r\n\tfloat incidence = max(dot(v_normal.xyz, vec3(0.0, 1.0, 0.0)), 0.0);\r\n\tvec3 light = vec3(0.2) + (vec3(1.0) * incidence);\r\n\toutColor = vec4(v_color.rgb * color * light, 1.0);\r\n}\r\n`;\r\n\r\nexport const DefaultWebGLBufferFragment_ = `\r\nvoid main(){\r\n\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}`;\r\n\r\nexport const DefaultWebGL2BufferFragment_ = `\r\nvoid main() {\r\n\toutColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}\r\n`;\r\n\r\n//\r\nexport const DefaultWebGLMeshVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\r\nexport const DefaultWebGL2MeshVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshVertex_;\r\nexport const DefaultWebGLFlatFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatFragment_;\r\nexport const DefaultWebGL2FlatFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2FlatFragment_;\r\nexport const DefaultWebGLMeshFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLMeshFragment_;\r\nexport const DefaultWebGL2MeshFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2MeshFragment_;\r\n//\r\nexport const DefaultWebGLBufferVertex = DefaultWebGLVertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\r\nexport const DefaultWebGL2BufferVertex = DefaultWebGL2VertexAttributes_ + DefaultWebGLUniform_ + DefaultWebGLFlatVertex_;\r\nexport const DefaultWebGLBufferFragment = DefaultWebGLFragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGLBufferFragment_;\r\nexport const DefaultWebGL2BufferFragment = DefaultWebGL2FragmentAttributes_ + DefaultWebGLUniform_ + DefaultWebGL2BufferFragment_;\r\n//\r\n\r\n","export enum LoggerLevel {\r\n\tNone = 0,\r\n\tError = 1,\r\n\tWarn = 2,\r\n\tLog = 3,\r\n}\r\n\r\nexport default class Logger {\r\n\r\n\tstatic level: LoggerLevel = LoggerLevel.Warn;\r\n\r\n\tstatic enabled: boolean = true;\r\n\r\n\tstatic log(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Log) {\r\n\t\t\tconsole.log(...datas);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic warn(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Warn) {\r\n\t\t\tconsole.warn(...datas);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic error(...datas: any[]) {\r\n\t\tif (Logger.enabled && Logger.level >= LoggerLevel.Error) {\r\n\t\t\tconsole.error(...datas);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import 'promise-polyfill';\r\n\r\nexport default class Common {\r\n\tstatic fetch(url: string): Promise<string> {\r\n\t\t// console.log('Common.fetch', url);\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\txhr.onload = function () {\r\n\t\t\t\tresolve(xhr.response || xhr.responseText);\r\n\t\t\t};\r\n\t\t\txhr.onerror = function (error) {\r\n\t\t\t\tconsole.log('Common.error', error);\r\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\r\n\t\t\t};\r\n\t\t\txhr.ontimeout = function (error) {\r\n\t\t\t\t// console.log(error);\r\n\t\t\t\treject(new Error(`Network request failed for url ${url}`));\r\n\t\t\t};\r\n\t\t\txhr.onabort = function () {\r\n\t\t\t\treject(new Error('Aborted'));\r\n\t\t\t};\r\n\t\t\txhr.open('GET', url, true);\r\n\t\t\txhr.send(null);\r\n\t\t})\r\n\t}\r\n\r\n\tstatic getResource(filepath: string, workpath: string = ''): string {\r\n\t\tconst resource: string = (filepath.indexOf(':/') === -1) ? Common.join(workpath, filepath) : filepath;\r\n\t\treturn resource;\r\n\t}\r\n\r\n\tstatic join(...args: string[]): string {\r\n\t\tlet comps: string[] = [];\r\n\t\targs.forEach(a => {\r\n\t\t\tif (a.indexOf('/') === 0) {\r\n\t\t\t\tcomps = [];\r\n\t\t\t}\r\n\t\t\tconst parts = Common.comps(a);\r\n\t\t\tparts.forEach(x => {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase '.':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '..':\r\n\t\t\t\t\t\tcomps.pop();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcomps.push(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn comps.join('/');\r\n\t}\r\n\r\n\tstatic dirname(path: string): string {\r\n\t\t// return path.replace(/\\/[^\\/]+\\.\\w+/, '');\r\n\t\tconst comps: string[] = Common.comps(path);\r\n\t\tcomps.pop();\r\n\t\treturn comps.join('/');\r\n\t}\r\n\r\n\tstatic comps(path: string): string[] {\r\n\t\treturn path.replace(/\\/$/, '').split(/\\/+/);\r\n\t}\r\n}\r\n","import Common from '../core/common';\r\nimport Logger from '../logger/logger';\r\nimport { DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './chunks';\r\n\r\nexport enum ContextVersion {\r\n\tWebGl = 'webgl',\r\n\tWebGl2 = 'webgl2',\r\n}\r\n\r\nexport enum ContextPrecision {\r\n\tLowP = 'lowp',\r\n\tMediumP = 'mediump',\r\n\tHighP = 'highp',\r\n}\r\n\r\nexport enum ContextMode {\r\n\tFlat = 'flat',\r\n\tBox = 'box',\r\n\tSphere = 'sphere',\r\n\tTorus = 'torus',\r\n\tMesh = 'mesh',\r\n}\r\n\r\nexport const ContextDefault = {\r\n\t'webgl': {\r\n\t\t'flat': {\r\n\t\t\tvertex: DefaultWebGLMeshVertex,\r\n\t\t\tfragment: DefaultWebGLFlatFragment,\r\n\t\t},\r\n\t\t'mesh': {\r\n\t\t\tvertex: DefaultWebGLMeshVertex,\r\n\t\t\tfragment: DefaultWebGLMeshFragment,\r\n\t\t}\r\n\t},\r\n\t'webgl2': {\r\n\t\t'flat': {\r\n\t\t\tvertex: DefaultWebGL2MeshVertex,\r\n\t\t\tfragment: DefaultWebGL2FlatFragment,\r\n\t\t},\r\n\t\t'mesh': {\r\n\t\t\tvertex: DefaultWebGL2MeshVertex,\r\n\t\t\tfragment: DefaultWebGL2MeshFragment,\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport enum ContextError {\r\n\tBrowserSupport = 1,\r\n\tOther = 2,\r\n}\r\n\r\nexport class ContextVertexBuffers {\r\n\ttexcoord: WebGLBuffer;\r\n\tposition: WebGLBuffer;\r\n}\r\n\r\nexport default class Context {\r\n\r\n\tstatic precision: ContextPrecision = ContextPrecision.MediumP;\r\n\tstatic lastError: string = '';\r\n\r\n\tstatic getContext_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext {\r\n\t\tconst names = ['webgl', 'experimental-webgl'];\r\n\t\tlet context = null;\r\n\t\tfor (let i = 0; i < names.length; ++i) {\r\n\t\t\ttry {\r\n\t\t\t\tcontext = canvas.getContext(names[i], options) as WebGLRenderingContext;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic getContext2_(canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGL2RenderingContext {\r\n\t\tlet context = null;\r\n\t\ttry {\r\n\t\t\tcontext = canvas.getContext('webgl2', options) as WebGL2RenderingContext;\r\n\t\t} catch (e) {\r\n\t\t\t// console.error('GlslCanvas.Context.getContext2_.error', e);\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic getFragmentVertex(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string): string {\r\n\t\tlet vertexString;\r\n\t\tif (fragmentString) {\r\n\t\t\tconst version = Context.inferVersion(fragmentString);\r\n\t\t\tif (version === ContextVersion.WebGl2) {\r\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es.*?\\n/, '');\r\n\t\t\t}\r\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*VERTEX)(?:\\s*\\))|(?:#ifdef)(?:\\s*VERTEX)(?:\\s*))/gm;\r\n\t\t\tconst matches = regexp.exec(fragmentString);\r\n\t\t\tif (matches !== null) {\r\n\t\t\t\tvertexString = version === ContextVersion.WebGl2 ? `#version 300 es\r\n#define VERTEX\r\n${fragmentString}` : `#define VERTEX\r\n${fragmentString}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn vertexString;\r\n\t}\r\n\r\n\tstatic getIncludes(input: string | undefined, workpath: string = ''): Promise<string | undefined> {\r\n\t\tif (input === undefined) {\r\n\t\t\treturn Promise.resolve(input);\r\n\t\t}\r\n\t\tconst regex = /#include\\s*['|\"](.*.glsl)['|\"]/gm;\r\n\t\tconst promises = [];\r\n\t\tlet i = 0;\r\n\t\tlet match;\r\n\t\twhile ((match = regex.exec(input)) !== null) {\r\n\t\t\tpromises.push(Promise.resolve(input.slice(i, match.index)));\r\n\t\t\ti = match.index + match[0].length;\r\n\t\t\tconst filePath = match[1];\r\n\t\t\tconst url = Common.getResource(filePath, workpath);\r\n\t\t\tconst nextWorkpath = filePath.indexOf(':/') === -1 ? Common.dirname(url) : '';\r\n\t\t\tpromises.push(Common.fetch(url).then(input => Context.getIncludes(input, nextWorkpath)));\r\n\t\t}\r\n\t\tpromises.push(Promise.resolve(input.slice(i)));\r\n\t\treturn Promise.all(promises).then(chunks => {\r\n\t\t\treturn chunks.join('');\r\n\t\t});\r\n\t}\r\n\r\n\tstatic isWebGl(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\treturn context instanceof WebGLRenderingContext;\r\n\t}\r\n\r\n\tstatic isWebGl2(context: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\t// console.log(context);\r\n\t\t// return context !== undefined && typeof (context as any).bindBufferRange === 'function';\r\n\t\treturn (window as any).WebGL2RenderingContext && context instanceof WebGL2RenderingContext;\r\n\t}\r\n\r\n\tstatic inferVersion(vertexString?: string, fragmentString?: string): ContextVersion {\r\n\t\tconst source: string = vertexString || fragmentString;\r\n\t\tif (source) {\r\n\t\t\treturn source.indexOf('#version 300 es') === 0 ? ContextVersion.WebGl2 : ContextVersion.WebGl;\r\n\t\t} else {\r\n\t\t\treturn ContextVersion.WebGl;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic inferPrecision(fragmentString: string): ContextPrecision {\r\n\t\tconst precision: RegExpMatchArray = fragmentString.match(/precision\\s+(.+)\\s+float/);\r\n\t\tif (precision && precision.length > 1) {\r\n\t\t\tContext.precision = precision[1] as ContextPrecision;\r\n\t\t}\r\n\t\t// console.log('precision', Context.precision);\r\n\t\treturn Context.precision;\r\n\t}\r\n\r\n\tstatic versionDiffers(gl: WebGLRenderingContext | WebGL2RenderingContext, vertexString?: string, fragmentString?: string): boolean {\r\n\t\tif (gl) {\r\n\t\t\tconst currentVersion = this.isWebGl2(gl) ? ContextVersion.WebGl2 : ContextVersion.WebGl;\r\n\t\t\tconst newVersion = Context.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn newVersion !== currentVersion;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getBufferVertex(gl: WebGLRenderingContext | WebGL2RenderingContext): string {\r\n\t\treturn this.isWebGl2(gl) ? DefaultWebGL2BufferVertex : DefaultWebGLBufferVertex;\r\n\t}\r\n\r\n\tstatic getVertex(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\r\n\t\tif (vertexString) {\r\n\t\t\treturn vertexString;\r\n\t\t} else {\r\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].vertex;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getFragment(vertexString?: string, fragmentString?: string, mode: ContextMode = ContextMode.Flat): string {\r\n\t\tif (fragmentString) {\r\n\t\t\treturn fragmentString;\r\n\t\t} else {\r\n\t\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\t\treturn ContextDefault[version][mode === ContextMode.Flat ? 'flat' : 'mesh'].fragment;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic tryInferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, extensions: string[] = [], errorCallback: Function): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tfunction handleError(errorCode: number, html: string) {\r\n\t\t\tif (typeof errorCallback === 'function') {\r\n\t\t\t\terrorCallback(errorCode);\r\n\t\t\t} else {\r\n\t\t\t\tconst container = canvas.parentNode;\r\n\t\t\t\tif (container) {\r\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!WebGLRenderingContext) {\r\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst context: WebGLRenderingContext | WebGL2RenderingContext = Context.inferContext(vertexString, fragmentString, canvas, attributes);\r\n\t\tif (!context) {\r\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\r\n\t\t} else {\r\n\t\t\tif (!(this.isWebGl2(context)) && extensions.indexOf('OES_standard_derivatives') === -1) {\r\n\t\t\t\textensions.push('OES_standard_derivatives');\r\n\t\t\t}\r\n\t\t\tconst supportedExtensions = context.getSupportedExtensions();\r\n\t\t\textensions.forEach(key => {\r\n\t\t\t\tif (supportedExtensions.indexOf(key) !== -1) {\r\n\t\t\t\t\tcontext.getExtension(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLogger.warn(`GlslCanvas ${key} not supported`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// context.getExtension('OES_standard_derivatives');\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic tryGetContext(canvas: HTMLCanvasElement, attributes: WebGLContextAttributes, errorCallback: Function): WebGLRenderingContext {\r\n\t\tfunction handleError(errorCode: number, html: string) {\r\n\t\t\tif (typeof errorCallback === 'function') {\r\n\t\t\t\terrorCallback(errorCode);\r\n\t\t\t} else {\r\n\t\t\t\tconst container = canvas.parentNode;\r\n\t\t\t\tif (container) {\r\n\t\t\t\t\t(container as HTMLElement).innerHTML = `<div class=\"glsl-canvas--error\">${html}</div>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!WebGLRenderingContext) {\r\n\t\t\thandleError(ContextError.BrowserSupport, `This page requires a browser that supports WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst context: WebGLRenderingContext = Context.getContext_(canvas, attributes);\r\n\t\tif (!context) {\r\n\t\t\thandleError(ContextError.Other, `It does not appear your computer can support WebGL.<br/>\r\n\t\t\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>`);\r\n\t\t} else {\r\n\t\t\tcontext.getExtension('OES_standard_derivatives');\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tstatic inferContext(vertexString: string, fragmentString: string, canvas: HTMLCanvasElement, options?: WebGLContextAttributes): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tconst version: ContextVersion = this.inferVersion(vertexString, fragmentString);\r\n\t\treturn version === ContextVersion.WebGl2 ? this.getContext2_(canvas, options) : this.getContext_(canvas, options);\r\n\t}\r\n\r\n\tstatic createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, source: string, type: number, offset: number = 0): WebGLShader {\r\n\t\tconst shader = gl.createShader(type);\r\n\t\tsource = source.replace(/precision\\s+(.+)\\s+float/, `precision ${Context.precision} float`);\r\n\t\tgl.shaderSource(shader, source);\r\n\t\tgl.compileShader(shader);\r\n\t\tconst compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\t\tif (!compiled) {\r\n\t\t\t// Something went wrong during compilation; get the error\r\n\t\t\tContext.lastError = gl.getShaderInfoLog(shader);\r\n\t\t\t// console.log('lastError', Context.lastError);\r\n\t\t\tLogger.error(`*** Error compiling shader: ${Context.lastError}`);\r\n\t\t\t// main.trigger('error', {\r\n\t\t\tgl.deleteShader(shader);\r\n\t\t\tthrow ({\r\n\t\t\t\tshader: shader,\r\n\t\t\t\tsource: source,\r\n\t\t\t\ttype: type,\r\n\t\t\t\terror: Context.lastError,\r\n\t\t\t\toffset: offset\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tstatic createProgram(gl: WebGLRenderingContext | WebGL2RenderingContext, shaders: WebGLShader[], attributes?: any[], locations?: number[]): WebGLProgram {\r\n\t\tconst program = gl.createProgram();\r\n\t\tfor (let i = 0; i < shaders.length; ++i) {\r\n\t\t\tgl.attachShader(program, shaders[i]);\r\n\t\t}\r\n\t\tif (attributes && locations) {\r\n\t\t\tfor (let i = 0; i < attributes.length; ++i) {\r\n\t\t\t\tgl.bindAttribLocation(program, locations ? locations[i] : i, attributes[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgl.linkProgram(program);\r\n\t\tgl.validateProgram(program);\r\n\t\t// Check the link status\r\n\t\tconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\t\tif (!linked) {\r\n\t\t\t// something went wrong with the link\r\n\t\t\tContext.lastError = gl.getProgramInfoLog(program);\r\n\t\t\tLogger.error(`Error in program linking: ${Context.lastError}`);\r\n\t\t\tgl.deleteProgram(program);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tgl.useProgram(program);\r\n\t\treturn program;\r\n\t}\r\n\r\n\tstatic createVertexBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram): ContextVertexBuffers {\r\n\t\tconst vertexBuffers: ContextVertexBuffers = new ContextVertexBuffers();\r\n\t\tconst texcoordIndex: number = gl.getAttribLocation(program, 'a_texcoord');\r\n\t\tvertexBuffers.texcoord = gl.createBuffer();\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.texcoord);\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\r\n\t\tgl.enableVertexAttribArray(texcoordIndex);\r\n\t\tgl.vertexAttribPointer(texcoordIndex, 2, gl.FLOAT, false, 0, 0);\r\n\t\tconst positionIndex: number = gl.getAttribLocation(program, 'a_position');\r\n\t\tvertexBuffers.position = gl.createBuffer();\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffers.position);\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\r\n\t\tgl.enableVertexAttribArray(positionIndex);\r\n\t\tgl.vertexAttribPointer(positionIndex, 2, gl.FLOAT, false, 0, 0);\r\n\t\treturn vertexBuffers;\r\n\t}\r\n}\r\n","export class NumberMap<T> { [key: number]: T; };\r\nexport class StringMap<T> { [key: string]: T; };\r\n\r\nexport default class IterableStringMap<T> {\r\n\r\n\tvalues: StringMap<T> = new StringMap<T>();\r\n\r\n\thas(key: string) {\r\n\t\treturn key in this.values;\r\n\t\t// return this.values.hasOwnProperty(key);\r\n\t}\r\n\r\n\tset(key: string, item: T) {\r\n\t\tthis.values[key] = item;\r\n\t}\r\n\r\n\tget(key: string): T {\r\n\t\treturn this.values[key];\r\n\t}\r\n\r\n\tforEach(callbackfn: Function) {\r\n\t\tlet i = 0;\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tcallbackfn(this.values[key], i, this.values);\r\n\t\t\ti++;\r\n\t\t});\r\n\t}\r\n\r\n\treduce(callbackfn: Function, initialValue?: any) {\r\n\t\tlet previous = initialValue, i = 0;\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tprevious = callbackfn(previous, this.values[key], i, this.values);\r\n\t\t\ti++;\r\n\t\t});\r\n\t\treturn previous;\r\n\t}\r\n\r\n}\r\n","import { DefaultWebGL2BufferFragment, DefaultWebGLBufferFragment } from '../context/chunks';\r\nimport Context from '../context/context';\r\nimport IterableStringMap from '../core/iterable';\r\nimport FlatGeometry from '../geometry/flat-geometry';\r\nimport Geometry from '../geometry/geometry';\r\n\r\nexport enum BufferFloatType {\r\n\tFLOAT = 0,\r\n\tHALF_FLOAT,\r\n}\r\n\r\nexport class Buffer {\r\n\r\n\ttexture: WebGLTexture;\r\n\tbuffer: WebGLFramebuffer;\r\n\tBW: number;\r\n\tBH: number;\r\n\tindex: number;\r\n\r\n\tstatic type: BufferFloatType = BufferFloatType.HALF_FLOAT;\r\n\r\n\tstatic getFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number | null {\r\n\t\tlet extension: any;\r\n\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\textension = gl.getExtension('EXT_color_buffer_float');\r\n\t\t\tif (extension) {\r\n\t\t\t\treturn gl.FLOAT;\r\n\t\t\t}\r\n\t\t}\r\n\t\textension = gl.getExtension('OES_texture_float');\r\n\t\tif (extension) {\r\n\t\t\treturn gl.FLOAT;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getHalfFloatType(gl: WebGLRenderingContext | WebGL2RenderingContext): number | null {\r\n\t\tlet extension: any;\r\n\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\textension = gl.getExtension('EXT_color_buffer_half_float') || gl.getExtension('EXT_color_buffer_float');\r\n\t\t\tif (extension) {\r\n\t\t\t\treturn (gl as WebGL2RenderingContext).HALF_FLOAT;\r\n\t\t\t}\r\n\t\t}\r\n\t\textension = gl.getExtension('OES_texture_half_float');\r\n\t\tif (extension) {\r\n\t\t\treturn extension.HALF_FLOAT_OES || null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic getInternalFormat(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\treturn (Context.isWebGl2(gl) ? (gl as WebGL2RenderingContext).RGBA16F : gl.RGBA);\r\n\t}\r\n\r\n\tstatic getType(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\tlet type: number;\r\n\t\tif (Buffer.type === BufferFloatType.HALF_FLOAT) {\r\n\t\t\ttype = Buffer.getHalfFloatType(gl);\r\n\t\t\tif (type) {\r\n\t\t\t\treturn type;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.FLOAT;\r\n\t\t\t\treturn Buffer.getType(gl);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttype = Buffer.getFloatType(gl);\r\n\t\t\tif (type) {\r\n\t\t\t\treturn type;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.HALF_FLOAT;\r\n\t\t\t\treturn Buffer.getType(gl);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number): WebGLTexture {\r\n\t\tconst internalFormat = Buffer.getInternalFormat(gl);\r\n\t\tconst format = gl.RGBA;\r\n\t\tconst type = Buffer.getType(gl);\r\n\t\tconst texture = gl.createTexture();\r\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, BW, BH, 0, format, type, null);\r\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\tif (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\tif (Buffer.type === BufferFloatType.FLOAT) {\r\n\t\t\t\tBuffer.type = BufferFloatType.HALF_FLOAT;\r\n\t\t\t} else {\r\n\t\t\t\tBuffer.type = BufferFloatType.FLOAT;\r\n\t\t\t}\r\n\t\t\treturn Buffer.getTexture(gl, BW, BH, index);\r\n\t\t}\r\n\t\t// console.log('getTexture', 'internalFormat', internalFormat === (gl as WebGL2RenderingContext).RGBA16F, 'format', format === gl.RGBA, 'type', type === (gl as WebGL2RenderingContext).HALF_FLOAT, 'status', status === gl.FRAMEBUFFER_COMPLETE);\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tconstructor(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number, index: number) {\r\n\t\tconst buffer = gl.createFramebuffer();\r\n\t\tconst texture = Buffer.getTexture(gl, BW, BH, index);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\tthis.texture = texture;\r\n\t\tthis.buffer = buffer;\r\n\t\tthis.BW = BW;\r\n\t\tthis.BH = BH;\r\n\t\tthis.index = index;\r\n\t}\r\n\r\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\tif (BW !== this.BW || BH !== this.BH) {\r\n\t\t\tconst buffer = this.buffer;\r\n\t\t\tconst texture = this.texture;\r\n\t\t\tconst index = this.index;\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\r\n\t\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\t\tconst minW = Math.min(BW, this.BW);\r\n\t\t\tconst minH = Math.min(BH, this.BH);\r\n\t\t\tlet pixels: Float32Array;\r\n\t\t\tlet type = Buffer.getType(gl);\r\n\t\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\tpixels = new Float32Array(minW * minH * 4);\r\n\t\t\t\tgl.readPixels(0, 0, minW, minH, gl.RGBA, type, pixels);\r\n\t\t\t}\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\tconst newIndex = index + 1; // temporary index\r\n\t\t\tconst newTexture = Buffer.getTexture(gl, BW, BH, newIndex);\r\n\t\t\ttype = Buffer.getType(gl);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\t\tif (pixels) {\r\n\t\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, type, pixels);\r\n\t\t\t}\r\n\t\t\tconst newBuffer = gl.createFramebuffer();\r\n\t\t\t/*\r\n\t\t\tif (!newBuffer) {\r\n\t\t\t\tLogger.error('Failed to create the frame buffer object');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\tgl.deleteTexture(texture);\r\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\r\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, newTexture);\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.texture = newTexture;\r\n\t\t\tthis.buffer = newBuffer;\r\n\t\t\tthis.BW = BW;\r\n\t\t\tthis.BH = BH;\r\n\t\t\t// console.log('resize', newBuffer);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class IOBuffer {\r\n\r\n\tprogram: WebGLProgram;\r\n\tgeometry: Geometry;\r\n\tinput: Buffer;\r\n\toutput: Buffer;\r\n\tindex: number;\r\n\tkey: string;\r\n\tvertexString: string;\r\n\tfragmentString: string;\r\n\tBW: number;\r\n\tBH: number;\r\n\tisValid: boolean = false;\r\n\r\n\tconstructor(index: number, key: string, vertexString: string, fragmentString: string) {\r\n\t\tthis.index = index;\r\n\t\tthis.key = key;\r\n\t\tthis.vertexString = vertexString;\r\n\t\tthis.fragmentString = fragmentString;\r\n\t\tthis.geometry = new FlatGeometry();\r\n\t}\r\n\r\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tconst vertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\r\n\t\tlet fragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER, 1);\r\n\t\tif (!fragmentShader) {\r\n\t\t\tfragmentShader = Context.createShader(gl, Context.isWebGl2(gl) ? DefaultWebGL2BufferFragment : DefaultWebGLBufferFragment, gl.FRAGMENT_SHADER);\r\n\t\t\tthis.isValid = false;\r\n\t\t} else {\r\n\t\t\tthis.isValid = true;\r\n\t\t}\r\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]);\r\n\t\tif (!program) {\r\n\t\t\tthis.isValid = false;\r\n\t\t\tgl.deleteShader(vertexShader);\r\n\t\t\tgl.deleteShader(fragmentShader);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.geometry.create(gl, program);\r\n\t\tgl.deleteShader(vertexShader);\r\n\t\tgl.deleteShader(fragmentShader);\r\n\t\tconst input = new Buffer(gl, BW, BH, this.index + 0);\r\n\t\tconst output = new Buffer(gl, BW, BH, this.index + 2);\r\n\t\tthis.program = program;\r\n\t\tthis.input = input;\r\n\t\tthis.output = output;\r\n\t\t// console.log(geometry.position.length / 3, geometry.size);\r\n\t\t// console.log(gl.getProgramInfoLog(program));\r\n\t\t// Context.lastError = gl.getProgramInfoLog(program);\r\n\t\t// Logger.warn(`Error in program linking: ${Context.lastError}`);\r\n\t}\r\n\r\n\trender(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tgl.useProgram(this.program);\r\n\t\t// gl.activeTexture(gl.TEXTURE0);\r\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.input.texture);\r\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.output.buffer);\r\n\t\t// gl.bindTexture(gl.TEXTURE_2D, this.output.texture);\r\n\t\t// console.log(this.output.texture);\r\n\t\t// console.log('binding', gl.getParameter(gl.FRAMEBUFFER_BINDING));\r\n\t\t// gl.enable(gl.DEPTH_TEST); // Enable depth testing\r\n\t\t// gl.depthFunc(gl.LEQUAL); // Near things obscure far things\r\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\r\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\t\tif (status === gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t// Clear the canvas before we start drawing on it.\r\n\t\t\tgl.clearColor(0, 0, 0, 1);  // black\r\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\t}\r\n\t\t// this.geometry.createAttributes_(gl, this.program);\r\n\t\t// this.geometry.bindAttributes_(gl, this.program);\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t// console.log(this.geometry.size);\r\n\t\t// gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t// console.log(BW, BH);\r\n\t\t// console.log(gl.getProgramInfoLog(this.program));\r\n\t\t// swap\r\n\t\tconst input = this.input;\r\n\t\t// const output = this.output;\r\n\t\tthis.input = this.output;\r\n\t\tthis.output = input;\r\n\t\t// console.log('swap');\r\n\t}\r\n\r\n\tresize(gl: WebGLRenderingContext | WebGL2RenderingContext, BW: number, BH: number) {\r\n\t\t// BW = BH = 1024;\r\n\t\tgl.useProgram(this.program);\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tthis.input.resize(gl, BW, BH);\r\n\t\tthis.output.resize(gl, BW, BH);\r\n\t}\r\n\r\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext) {\r\n\t\tgl.deleteProgram(this.program);\r\n\t\tthis.program = null;\r\n\t\tthis.input = null;\r\n\t\tthis.output = null;\r\n\t}\r\n}\r\n\r\nexport default class Buffers extends IterableStringMap<IOBuffer> {\r\n\r\n\tget count(): number {\r\n\t\treturn Object.keys(this.values).length * 4;\r\n\t}\r\n\r\n\tstatic getBuffers(gl: WebGLRenderingContext | WebGL2RenderingContext, fragmentString: string, vertexString: string): Buffers {\r\n\t\tconst buffers: Buffers = new Buffers();\r\n\t\tlet count = 0;\r\n\t\tif (fragmentString) {\r\n\t\t\tif (Context.isWebGl2(gl)) {\r\n\t\t\t\tfragmentString = fragmentString.replace(/^\\#version\\s*300\\s*es\\s*\\n/, '');\r\n\t\t\t}\r\n\t\t\tconst regexp = /(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm;\r\n\t\t\tlet matches;\r\n\t\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\r\n\t\t\t\tconst i = matches[3] || matches[4];\r\n\t\t\t\tconst key = 'u_buffer' + i;\r\n\t\t\t\tconst bufferFragmentString = Context.isWebGl2(gl) ? `#version 300 es\r\n#define BUFFER_${i}\r\n${fragmentString}` : `#define BUFFER_${i}\r\n${fragmentString}`;\r\n\t\t\t\tconst buffer = new IOBuffer(count, key, vertexString, bufferFragmentString);\r\n\t\t\t\tbuffer.create(gl, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\t\t\t\tif (buffer.program) {\r\n\t\t\t\t\tbuffers.set(key, buffer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow (`buffer error ${key}`);\r\n\t\t\t\t}\r\n\t\t\t\tcount += 4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buffers;\r\n\t}\r\n}\r\n","export interface IGeometry {\r\n\tpositions: number[];\r\n\tcolors: number[];\r\n\tnormals: number[];\r\n\ttexcoords: number[];\r\n}\r\n\r\nexport default class Geometry implements IGeometry {\r\n\r\n\tpositions: number[];\r\n\tcolors: number[];\r\n\tnormals: number[];\r\n\ttexcoords: number[];\r\n\r\n\tpositionBuffer: WebGLBuffer;\r\n\tcolorBuffer: WebGLBuffer;\r\n\tnormalBuffer: WebGLBuffer;\r\n\ttexcoordBuffer: WebGLBuffer;\r\n\r\n\tpositionLocation: number;\r\n\tcolorLocation: number;\r\n\tnormalLocation: number;\r\n\ttexcoordLocation: number;\r\n\r\n\tsize: number;\r\n\r\n\tconstructor(options?: IGeometry) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t\tif (this.positions) {\r\n\t\t\t\tthis.size = this.positions.length / 3;\r\n\t\t\t}\r\n\t\t\t// this.positions = Geometry.fromIndices(options.indices, options.positions, 3);\r\n\t\t\t// this.normals = Geometry.fromIndices(options.indices, options.normals, 3);\r\n\t\t\t// this.texcoords = Geometry.fromIndices(options.indices, options.texcoords, 2);\r\n\t\t\t// this.colors = Geometry.fromIndices(options.indices, options.colors, 4);\r\n\t\t}\r\n\t}\r\n\r\n\tcreate(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tthis.createData_();\r\n\t\tthis.createAttributes_(gl, program);\r\n\t}\r\n\r\n\tcreateBufferData_(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, array: BufferSource) {\r\n\t\tconst buffer = gl.createBuffer();\r\n\t\tgl.bindBuffer(type, buffer);\r\n\t\tgl.bufferData(type, array, gl.STATIC_DRAW);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tcreateAttribLocation_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram, name: string, size: number, type: number) {\r\n\t\tconst location: number = gl.getAttribLocation(program, name);\r\n\t\tgl.enableVertexAttribArray(location);\r\n\t\tgl.vertexAttribPointer(location, size, type, false, 0, 0);\r\n\t\treturn location;\r\n\t}\r\n\r\n\tcreateAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tif (this.positions) {\r\n\t\t\tthis.positionBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions));\r\n\t\t\tthis.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\tthis.texcoordBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.texcoords));\r\n\t\t\tthis.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\tthis.normalBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.normals));\r\n\t\t\tthis.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colorBuffer = this.createBufferData_(gl, gl.ARRAY_BUFFER, new Float32Array(this.colors));\r\n\t\t\tthis.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\r\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t}\r\n\t\t// console.log('positionLocation', this.positionLocation);\r\n\t\t// console.log('texcoordLocation', this.texcoordLocation);\r\n\t\t// console.log('normalLocation', this.normalLocation);\r\n\t\t// console.log('colorLocation', this.colorLocation);\r\n\t}\r\n\r\n\tattachAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tlet attribLocation: number;\r\n\t\tif (this.positions) {\r\n\t\t\t// this.positionLocation = this.createAttribLocation_(gl, program, 'a_position', this.positions.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_position');\r\n\t\t\tgl.enableVertexAttribArray(attribLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n\t\t\tgl.vertexAttribPointer(attribLocation, this.positions.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t\t// console.log('positionLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\t// this.texcoordLocation = this.createAttribLocation_(gl, program, 'a_texcoord', this.texcoords.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_texcoord');\r\n\t\t\tgl.enableVertexAttribArray(this.texcoordLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.texcoordLocation, this.texcoords.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t\t// console.log('texcoordLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\t// this.normalLocation = this.createAttribLocation_(gl, program, 'a_normal', this.normals.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_normal');\r\n\t\t\tgl.enableVertexAttribArray(this.normalLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.normalLocation, this.normals.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t\t// console.log('normalLocation', attribLocation);\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\t// this.colorLocation = this.createAttribLocation_(gl, program, 'a_color', this.colors.length / this.size, gl.FLOAT);\r\n\t\t\tattribLocation = gl.getAttribLocation(program, 'a_color');\r\n\t\t\tgl.enableVertexAttribArray(this.colorLocation);\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t\t\tgl.vertexAttribPointer(this.colorLocation, this.colors.length / this.size, gl.FLOAT, false, 0, 0);\r\n\t\t\t// gl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t\t// console.log('colorLocation', attribLocation);\r\n\t\t}\r\n\t}\r\n\r\n\tbindAttributes_(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tif (this.positions) {\r\n\t\t\tgl.bindAttribLocation(program, this.positionLocation, 'a_position');\r\n\t\t}\r\n\t\tif (this.texcoords) {\r\n\t\t\tgl.bindAttribLocation(program, this.texcoordLocation, 'a_texcoord');\r\n\t\t}\r\n\t\tif (this.normals) {\r\n\t\t\tgl.bindAttribLocation(program, this.normalLocation, 'a_normal');\r\n\t\t}\r\n\t\tif (this.colors) {\r\n\t\t\tgl.bindAttribLocation(program, this.colorLocation, 'a_color');\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createData_() {\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.texcoords = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.size = 0;\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\tstatic fromIndices(indices: number[], array: number[], size: number): number[] {\r\n\t\tconst buffer: number[] = [];\r\n\t\tindices.forEach(i => {\r\n\t\t\tbuffer.push.apply(buffer, array.slice(i * size, i * size + size));\r\n\t\t});\r\n\t\treturn buffer;\r\n\t}\r\n\r\n}\r\n","import Geometry from './geometry';\r\n\r\nexport default class FlatGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tthis.size = 6;\r\n\t\tthis.positions = [\r\n\t\t\t-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0,\r\n\t\t\t-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0,\r\n\t\t];\r\n\t\tthis.texcoords = [\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.normals = [\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.colors = [\r\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t];\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n}\r\n","export default class Vector2 {\r\n\r\n\tisVector2: boolean = true;\r\n\tx: number;\r\n\ty: number;\r\n\r\n\tconstructor(x: number = 0, y: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tcopy(v: Vector2): Vector2 {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tnormalize(): Vector2 {\r\n\t\treturn this.divideScalar(this.length() || 1);\r\n\t}\r\n\r\n\tdivideScalar(scalar: number): Vector2 {\r\n\t\treturn this.multiplyScalar(1 / scalar);\r\n\t}\r\n\r\n\tmultiplyScalar(scalar: number): Vector2 {\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubVectors(a: Vector2, b: Vector2): Vector2 {\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddVectors(a: Vector2, b: Vector2): Vector2 {\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n\r\n","export default class Vector3 {\r\n\r\n\tisVector3: boolean = true;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\r\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\r\n\tcopy(v: Vector3): Vector3 {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t}\r\n\r\n\tnormalize(): Vector3 {\r\n\t\treturn this.divideScalar(this.length() || 1);\r\n\t}\r\n\r\n\r\n\tdivideScalar(scalar: number): Vector3 {\r\n\t\treturn this.multiplyScalar(1 / scalar);\r\n\t}\r\n\r\n\tmultiplyScalar(scalar: number): Vector3 {\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcrossVectors(a: Vector3, b: Vector3): Vector3 {\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/*\r\n\tset(x, y, z) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetScalar(scalar) {\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetX(x) {\r\n\t\tthis.x = x;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetY(y) {\r\n\t\tthis.y = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZ(z) {\r\n\t\tthis.z = z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetComponent(index, value) {\r\n\t\tswitch (index) {\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetComponent(index) {\r\n\t\tswitch (index) {\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error('index is out of range: ' + index);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Vector3(this.x, this.y, this.z);\r\n\t}\r\n\r\n\tadd(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.addVectors(v, w);\r\n\t\t}\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(s) {\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScaledVector(v, s) {\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.subVectors(v, w);\r\n\t\t}\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsubScalar(s) {\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\tmultiply(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.multiplyVectors(v, w);\r\n\t\t}\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultiplyVectors(a:Vector3, b:Vector3):Vector3 {\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyMatrix3(m) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\r\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\r\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyNormalMatrix(m) {\r\n\t\treturn this.applyMatrix3(m).normalize();\r\n\t}\r\n\r\n\tapplyMatrix4(m) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tvar w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tapplyQuaternion(q) {\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\t\t// calculate quat * vector\r\n\t\tvar ix = qw * x + qy * z - qz * y;\r\n\t\tvar iy = qw * y + qz * x - qx * z;\r\n\t\tvar iz = qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\t// calculate result * inverse quat\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tproject(camera) {\r\n\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\r\n\t}\r\n\r\n\tunproject(camera) {\r\n\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\r\n\t}\r\n\r\n\ttransformDirection(m) {\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\r\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\r\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdivide(v) {\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(v) {\r\n\t\tthis.x = Math.min(this.x, v.x);\r\n\t\tthis.y = Math.min(this.y, v.y);\r\n\t\tthis.z = Math.min(this.z, v.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(v) {\r\n\t\tthis.x = Math.max(this.x, v.x);\r\n\t\tthis.y = Math.max(this.y, v.y);\r\n\t\tthis.z = Math.max(this.z, v.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min, max) {\r\n\t\t// assumes min < max, componentwise\r\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclampScalar(minVal, maxVal) {\r\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclampLength(min, max) {\r\n\t\tvar length = this.length();\r\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t}\r\n\r\n\tfloor() {\r\n\t\tthis.x = Math.floor(this.x);\r\n\t\tthis.y = Math.floor(this.y);\r\n\t\tthis.z = Math.floor(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tceil() {\r\n\t\tthis.x = Math.ceil(this.x);\r\n\t\tthis.y = Math.ceil(this.y);\r\n\t\tthis.z = Math.ceil(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tround() {\r\n\t\tthis.x = Math.round(this.x);\r\n\t\tthis.y = Math.round(this.y);\r\n\t\tthis.z = Math.round(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\troundToZero() {\r\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\tthis.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate() {\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(v) {\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\tlengthSq() {\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n\t}\r\n\r\n\tsetLength(length) {\r\n\t\treturn this.normalize().multiplyScalar(length);\r\n\t}\r\n\r\n\tlerp(v, alpha) {\r\n\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerpVectors(v1, v2, alpha) {\r\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\r\n\t}\r\n\r\n\tcross(v, w) {\r\n\t\tif (w !== undefined) {\r\n\t\t\treturn this.crossVectors(v, w);\r\n\t\t}\r\n\t\treturn this.crossVectors(this, v);\r\n\t}\r\n\r\n\tprojectOnVector(v) {\r\n\t\tvar denominator = v.lengthSq();\r\n\t\tif (denominator === 0) return this.set(0, 0, 0);\r\n\t\tvar scalar = v.dot(this) / denominator;\r\n\t\treturn this.copy(v).multiplyScalar(scalar);\r\n\t}\r\n\r\n\tprojectOnPlane(planeNormal) {\r\n\t\tconst v = new Vector3();\r\n\t\tv.copy(this).projectOnVector(planeNormal);\r\n\t\treturn this.sub(v);\r\n\t}\r\n\r\n\treflect(normal) {\r\n\t\tconst v = new Vector3();\r\n\t\treturn this.sub(v.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n\t}\r\n\r\n\tangleTo(v) {\r\n\t\tvar denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\r\n\t\tif (denominator === 0) return Math.PI / 2;\r\n\t\tvar theta = this.dot(v) / denominator;\r\n\t\t// clamp, to handle numerical problems\r\n\t\treturn Math.acos(MathUtils.clamp(theta, - 1, 1));\r\n\t}\r\n\r\n\tdistanceTo(v) {\r\n\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t}\r\n\r\n\tdistanceToSquared(v) {\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tmanhattanDistanceTo(v) {\r\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\r\n\t}\r\n\r\n\tsetFromSpherical(s) {\r\n\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\r\n\t}\r\n\r\n\tsetFromSphericalCoords(radius, phi, theta) {\r\n\t\tvar sinPhiRadius = Math.sin(phi) * radius;\r\n\t\tthis.x = sinPhiRadius * Math.sin(theta);\r\n\t\tthis.y = Math.cos(phi) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos(theta);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromCylindrical(c) {\r\n\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\r\n\t}\r\n\r\n\tsetFromCylindricalCoords(radius, theta, y) {\r\n\t\tthis.x = radius * Math.sin(theta);\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos(theta);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixPosition(m) {\r\n\t\tvar e = m.elements;\r\n\t\tthis.x = e[12];\r\n\t\tthis.y = e[13];\r\n\t\tthis.z = e[14];\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixScale(m) {\r\n\t\tvar sx = this.setFromMatrixColumn(m, 0).length();\r\n\t\tvar sy = this.setFromMatrixColumn(m, 1).length();\r\n\t\tvar sz = this.setFromMatrixColumn(m, 2).length();\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetFromMatrixColumn(m, index) {\r\n\t\treturn this.fromArray(m.elements, index * 4);\r\n\t}\r\n\r\n\tsetFromMatrix3Column(m, index) {\r\n\t\treturn this.fromArray(m.elements, index * 3);\r\n\t}\r\n\r\n\tequals(v) {\r\n\t\treturn ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\r\n\t}\r\n\r\n\tfromArray(array, offset) {\r\n\t\tif (offset === undefined) offset = 0;\r\n\t\tthis.x = array[offset];\r\n\t\tthis.y = array[offset + 1];\r\n\t\tthis.z = array[offset + 2];\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttoArray(array, offset) {\r\n\t\tif (array === undefined) array = [];\r\n\t\tif (offset === undefined) offset = 0;\r\n\t\tarray[offset] = this.x;\r\n\t\tarray[offset + 1] = this.y;\r\n\t\tarray[offset + 2] = this.z;\r\n\t\treturn array;\r\n\t}\r\n\r\n\tfromBufferAttribute(attribute, index) {\r\n\t\tthis.x = attribute.getX(index);\r\n\t\tthis.y = attribute.getY(index);\r\n\t\tthis.z = attribute.getZ(index);\r\n\t\treturn this;\r\n\t}\r\n\r\n\trandom() {\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\treturn this;\r\n\t}\r\n\t*/\r\n\r\n}\r\n\r\n","\r\nimport Vector2 from '../math/vector2';\r\nimport Vector3 from '../math/vector3';\r\n\r\nconst PI = Math.PI;\r\nconst RAD = PI / 180;\r\n\r\nexport default class OrbitCamera extends Vector3 {\r\n\r\n\ttheta: number;\r\n\tphi: number;\r\n\tradius: number;\r\n\tposition: Vector3 = new Vector3();\r\n\tvalue: Float32Array = new Float32Array([0, 0, 0]);\r\n\tmouse: Vector2 = null;\r\n\tdirty: boolean = false;\r\n\r\n\tconstructor(theta?: number, phi?: number, radius?: number) {\r\n\t\tsuper();\r\n\t\tthis.theta = (theta || 0) * RAD;\r\n\t\tthis.phi = (phi || 0) * RAD;\r\n\t\tthis.radius = radius || 6.0;\r\n\t\t// this.update();\r\n\t}\r\n\r\n\tdown(x: number, y: number) {\r\n\t\tthis.mouse = new Vector2(x, y);\r\n\t}\r\n\r\n\tmove(x: number, y: number) {\r\n\t\tconst mouse = this.mouse;\r\n\t\tif (mouse && (mouse.x !== x || mouse.y !== y)) {\r\n\t\t\tconst theta = (x - mouse.x) * 180 * RAD;\r\n\t\t\tconst phi = (y - mouse.y) * 180 * RAD;\r\n\t\t\tmouse.x = x;\r\n\t\t\tmouse.y = y;\r\n\t\t\tthis.theta += theta;\r\n\t\t\tthis.phi = Math.max(-60 * RAD, Math.min(60 * RAD, this.phi + phi));\r\n\t\t\t// this.update();\r\n\t\t}\r\n\t}\r\n\r\n\tup() {\r\n\t\tthis.mouse = null;\r\n\t}\r\n\r\n\twheel(d: number) {\r\n\t\tthis.radius = Math.max(4.0, Math.min(10.0, this.radius + d * 0.02));\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3) {\r\n\t\tconst radius = vector.length();\r\n\t\tconst theta = Math.acos(vector.y / radius); //theta\r\n\t\tconst phi = Math.atan(vector.x / vector.z); //phi\r\n\t\treturn new OrbitCamera(theta, phi, radius);\r\n\t}\r\n\r\n\tstatic toArray(camera: OrbitCamera): number[] {\r\n        const spr = Math.sin(camera.phi) * camera.radius;\r\n        const x = spr * Math.sin(camera.theta);\r\n        const y = Math.cos(camera.phi) * camera.radius;\r\n        const z = spr * Math.cos(camera.theta);\r\n        return [x, y, z];\r\n    }\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","// import 'promise-polyfill';\r\nimport Common from '../core/common';\r\nimport IterableStringMap from '../core/iterable';\r\nimport Subscriber from '../core/subscriber';\r\nimport Logger from '../logger/logger';\r\n\r\nexport const TextureImageExtensions = ['jpg', 'jpeg', 'png'];\r\nexport const TextureVideoExtensions = ['ogv', 'webm', 'mp4'];\r\nexport const TextureExtensions = TextureImageExtensions.concat(TextureVideoExtensions);\r\n\r\nexport enum TextureSourceType {\r\n\tData = 0,\r\n\tElement = 1,\r\n\tUrl = 2,\r\n}\r\n\r\nexport enum TextureFilteringType {\r\n\tMipMap = 'mipmap',\r\n\tLinear = 'linear',\r\n\tNearest = 'nearest',\r\n}\r\n\r\nexport interface ITextureData {\r\n\tdata: Uint8Array;\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface ITextureOptions {\r\n\turl?: string;\r\n\telement?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element;\r\n\tdata?: Uint8Array;\r\n\twidth?: number;\r\n\theight?: number;\r\n\tfiltering?: TextureFilteringType;\r\n\trepeat?: boolean;\r\n\tUNPACK_FLIP_Y_WEBGL?: boolean;\r\n\tUNPACK_PREMULTIPLY_ALPHA_WEBGL?: number;\r\n\tTEXTURE_WRAP_S?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\r\n\tTEXTURE_WRAP_T?: number; // gl.REPEAT | gl.CLAMP_TO_EDGE | gl.MIRRORED_REPEAT;\r\n}\r\n\r\nexport interface ITextureInput {\r\n\tkey: string;\r\n\turl: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData;\r\n\toptions?: ITextureOptions;\r\n}\r\n\r\nexport function isTextureData(object: any): object is ITextureData {\r\n\treturn 'data' in object && 'width' in object && 'height' in object;\r\n}\r\n\r\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\r\nexport class Texture extends Subscriber {\r\n\r\n\tkey: string;\r\n\tindex: number;\r\n\toptions: ITextureOptions;\r\n\tworkpath: string;\r\n\twidth: number;\r\n\theight: number;\r\n\r\n\ttexture: WebGLTexture;\r\n\tsource: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | Uint8Array;\r\n\tsourceType: TextureSourceType;\r\n\tfiltering: TextureFilteringType;\r\n\turl: string;\r\n\tvalid: boolean = false;\r\n\tdirty: boolean = false;\r\n\tanimated: boolean = false;\r\n\tpowerOf2: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\tkey: string,\r\n\t\tindex: number,\r\n\t\toptions: ITextureOptions = { filtering: TextureFilteringType.Linear },\r\n\t\tworkpath?: string,\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.key = key;\r\n\t\tthis.index = index;\r\n\t\tthis.options = options;\r\n\t\tthis.workpath = workpath;\r\n\t\tthis.create(gl);\r\n\t}\r\n\r\n\tstatic isPowerOf2(value: number): boolean {\r\n\t\treturn (value & (value - 1)) === 0;\r\n\t}\r\n\r\n\tstatic isSafari(): boolean {\r\n\t\treturn /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\tstatic isTextureUrl(text: string): boolean {\r\n\t\treturn text && (/\\.(jpg|jpeg|png|ogv|webm|mp4)$/i).test(text.split('?')[0]);\r\n\t}\r\n\r\n\tstatic isTexture(\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t): boolean {\r\n\t\tconst options = Texture.getTextureOptions(urlElementOrData);\r\n\t\treturn options !== undefined;\r\n\t}\r\n\r\n\tstatic getMaxTextureSize(gl: WebGLRenderingContext | WebGL2RenderingContext): number {\r\n\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\t};\r\n\r\n\tstatic getTextureOptions(\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t): ITextureOptions {\r\n\t\tif (typeof urlElementOrData === 'string' && urlElementOrData !== '') {\r\n\t\t\tif (Texture.isTextureUrl(urlElementOrData)) {\r\n\t\t\t\toptions.url = urlElementOrData;\r\n\t\t\t\tif (urlElementOrData.indexOf('?') !== -1) {\r\n\t\t\t\t\toptions = urlElementOrData.split('?')[1].split('&').reduce(function (prev: ITextureOptions, curr) {\r\n\t\t\t\t\t\tconst params = curr.split('=');\r\n\t\t\t\t\t\tconst key = decodeURIComponent(params[0]);\r\n\t\t\t\t\t\tconst value = decodeURIComponent(params[1]);\r\n\t\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\t\tcase 'filtering':\r\n\t\t\t\t\t\t\t\tprev[key] = value as TextureFilteringType;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'repeat':\r\n\t\t\t\t\t\t\tcase 'UNPACK_FLIP_Y_WEBGL':\r\n\t\t\t\t\t\t\t\tprev[key] = Boolean(value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'UNPACK_PREMULTIPLY_ALPHA_WEBGL':\r\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_S':\r\n\t\t\t\t\t\t\tcase 'TEXTURE_WRAP_T':\r\n\t\t\t\t\t\t\t\tprev[key] = Number(value);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t}, options);\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t}\r\n\t\t\tif (document) {\r\n\t\t\t\turlElementOrData = document.querySelector(urlElementOrData);\r\n\t\t\t\t// Logger.log(urlElementOrData);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (urlElementOrData instanceof HTMLCanvasElement || urlElementOrData instanceof HTMLImageElement || urlElementOrData instanceof HTMLVideoElement) {\r\n\t\t\toptions.element = urlElementOrData;\r\n\t\t\treturn options;\r\n\t\t} else if (isTextureData(urlElementOrData)) {\r\n\t\t\toptions.data = urlElementOrData.data;\r\n\t\t\toptions.width = urlElementOrData.width;\r\n\t\t\toptions.height = urlElementOrData.height;\r\n\t\t\treturn options;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tcreate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext\r\n\t): void {\r\n\t\tthis.texture = gl.createTexture();\r\n\t\tif (this.texture) {\r\n\t\t\tthis.valid = true;\r\n\t\t}\r\n\t\t// Default to a 1-pixel black texture so we can safely render while we wait for an image to load\r\n\t\t// See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\r\n\t\t// [255, 255, 255, 255]\r\n\t\tthis.setData(gl, 1, 1, new Uint8Array([0, 0, 0, 0]), this.options);\r\n\t\t// this.bindTexture();\r\n\t\t// this.load(options);\r\n\t}\r\n\r\n\tload(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tthis.options = options;\r\n\t\tif (typeof options.url === 'string') {\r\n\t\t\tif (this.url === undefined || options.url !== this.url) {\r\n\t\t\t\treturn this.setUrl(gl, options.url, options);\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.resolve(this);\r\n\t\t\t}\r\n\t\t} else if (options.element) {\r\n\t\t\treturn this.setElement(gl, options.element, options);\r\n\t\t} else if (options.data && options.width && options.height) {\r\n\t\t\treturn this.setData(gl, options.width, options.height, options.data, options);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(this);\r\n\t\t}\r\n\t}\r\n\r\n\tsetUrl(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\turl: string,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn Promise.reject(this);\r\n\t\t}\r\n\t\tthis.url = url; // save URL reference (will be overwritten when element is loaded below)\r\n\t\tthis.source = url;\r\n\t\tthis.sourceType = TextureSourceType.Url;\r\n\t\tthis.options = Object.assign(this.options, options);\r\n\t\tconst ext = url.split('?')[0].split('.').pop().toLowerCase();\r\n\t\tconst isVideo = TextureVideoExtensions.indexOf(ext) !== -1;\r\n\t\tconst src = Common.getResource(url, this.workpath);\r\n\t\tlet element: HTMLVideoElement | HTMLImageElement;\r\n\t\tlet promise: Promise<Texture>;\r\n\t\tif (isVideo) {\r\n\t\t\tLogger.log('GlslCanvas.setUrl video', src);\r\n\t\t\telement = document.createElement('video'); // new HTMLVideoElement();\r\n\t\t\telement.setAttribute('preload', 'auto');\r\n\t\t\t// element.setAttribute('autoplay', 'true');\r\n\t\t\telement.setAttribute('loop', 'true');\r\n\t\t\telement.setAttribute('muted', 'true');\r\n\t\t\telement.setAttribute('playsinline', 'true');\r\n\t\t\t// element.autoplay = true;\r\n\t\t\telement.loop = true;\r\n\t\t\telement.muted = true;\r\n\t\t\t/*\r\n\t\t\tif (!(Texture.isSafari() && /(?<!http|https):\\//.test(url))) {\r\n\t\t\t\telement.crossOrigin = 'anonymous';\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tpromise = this.setElement(gl, element, options);\r\n\t\t\telement.src = src;\r\n\t\t\telement.addEventListener('canplay', () => {\r\n\t\t\t\t(element as HTMLVideoElement).play();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tLogger.log('GlslCanvas.setUrl image', src);\r\n\t\t\telement = document.createElement('img'); // new HTMLImageElement();\r\n\t\t\tpromise = this.setElement(gl, element, options);\r\n\t\t\tif (!(Texture.isSafari() && url.slice(0, 5) === 'data:')) {\r\n\t\t\t\telement.crossOrigin = 'anonymous';\r\n\t\t\t}\r\n\t\t\telement.src = src;\r\n\t\t}\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tsetElement(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\telement: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | HTMLElement | Element,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\toptions = this.options = Object.assign(this.options, options);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst originalElement = element;\r\n\t\t\t// a string element is interpeted as a CSS selector\r\n\t\t\tif (typeof element === 'string') {\r\n\t\t\t\telement = document.querySelector(element);\r\n\t\t\t}\r\n\t\t\tif (element instanceof HTMLCanvasElement ||\r\n\t\t\t\telement instanceof HTMLImageElement ||\r\n\t\t\t\telement instanceof HTMLVideoElement) {\r\n\t\t\t\tthis.source = element;\r\n\t\t\t\tthis.sourceType = TextureSourceType.Element;\r\n\t\t\t\tif (element instanceof HTMLVideoElement) {\r\n\t\t\t\t\tconst video = element as HTMLVideoElement;\r\n\t\t\t\t\tvideo.addEventListener('loadeddata', (event) => {\r\n\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\t\tresolve(this);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvideo.addEventListener('error', (error) => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvideo.load();\r\n\t\t\t\t} else if (element instanceof HTMLImageElement) {\r\n\t\t\t\t\telement.addEventListener('load', () => {\r\n\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\t\tresolve(this);\r\n\t\t\t\t\t});\r\n\t\t\t\t\telement.addEventListener('error', (error) => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\tthis.setFiltering(gl, options);\r\n\t\t\t\t\tresolve(this);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet message = `the 'element' parameter (\\`element: ${JSON.stringify(originalElement)}\\`) must be a CSS selector string, or a <canvas>, <image> or <video> object`;\r\n\t\t\t\tLogger.log(`Texture '${this.key}': ${message}`, options);\r\n\t\t\t\treject(message);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetData(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tdata: Uint8Array,\r\n\t\toptions: ITextureOptions = {}\r\n\t): Promise<Texture> {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.options = Object.assign(this.options, options);\r\n\t\tthis.source = data;\r\n\t\tthis.sourceType = TextureSourceType.Data;\r\n\t\tthis.update(gl, options);\r\n\t\tthis.setFiltering(gl, options);\r\n\t\treturn Promise.resolve(this);\r\n\t}\r\n\r\n\t// Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\r\n\tupdate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions\r\n\t): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgl.activeTexture(gl.TEXTURE0 + this.index);\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? 0 : 1));\r\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || 0);\r\n\t\tif (this.sourceType === TextureSourceType.Element) {\r\n\t\t\tif (this.source instanceof HTMLImageElement && this.source.naturalWidth && this.source.naturalHeight) {\r\n\t\t\t\tthis.width = this.source.naturalWidth;\r\n\t\t\t\tthis.height = this.source.naturalHeight;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t} else if (this.source instanceof HTMLVideoElement && this.source.videoWidth && this.source.videoHeight) {\r\n\t\t\t\tthis.width = this.source.videoWidth;\r\n\t\t\t\tthis.height = this.source.videoHeight;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t} else if (this.source instanceof HTMLCanvasElement) {\r\n\t\t\t\tthis.width = this.source.width;\r\n\t\t\t\tthis.height = this.source.height;\r\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.source);\r\n\t\t\t}\r\n\t\t} else if (this.sourceType === TextureSourceType.Data) {\r\n\t\t\tconst imageBuffer: ArrayBufferView = this.source as ArrayBufferView;\r\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageBuffer);\r\n\t\t}\r\n\t\tthis.trigger('loaded', this);\r\n\t}\r\n\r\n\ttryUpdate(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\r\n\t\tlet dirty = false;\r\n\t\tif (this.animated) {\r\n\t\t\tdirty = true;\r\n\t\t\tthis.update(gl, this.options);\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\r\n\tdestroy(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tgl.deleteTexture(this.texture);\r\n\t\tthis.texture = null;\r\n\t\tdelete this.source;\r\n\t\tthis.source = null;\r\n\t\tthis.valid = false;\r\n\t}\r\n\r\n\tsetFiltering(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\toptions: ITextureOptions\r\n\t): void {\r\n\t\tif (!this.valid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst powerOf2 = Texture.isPowerOf2(this.width) && Texture.isPowerOf2(this.height);\r\n\t\tlet filtering = options.filtering || TextureFilteringType.MipMap;\r\n\t\tlet wrapS = options.TEXTURE_WRAP_S || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\r\n\t\tlet wrapT = options.TEXTURE_WRAP_T || (options.repeat ? gl.REPEAT : gl.CLAMP_TO_EDGE);\r\n\t\tif (!powerOf2) {\r\n\t\t\tfiltering = filtering === TextureFilteringType.MipMap ? TextureFilteringType.Linear : filtering;\r\n\t\t\twrapS = wrapT = gl.CLAMP_TO_EDGE;\r\n\t\t\tif (options.repeat || options.TEXTURE_WRAP_S || options.TEXTURE_WRAP_T) {\r\n\t\t\t\tLogger.warn(`GlslCanvas: cannot repeat texture ${options.url} cause is not power of 2.`);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.powerOf2 = powerOf2;\r\n\t\tthis.filtering = filtering;\r\n\t\t// this.bindTexture();\r\n\t\t// WebGL has strict requirements on non-power-of-2 textures:\r\n\t\t// No mipmaps and must clamp to edge\r\n\t\t// For power-of-2 textures, the following presets are available:\r\n\t\t// mipmap: linear blend from nearest mip\r\n\t\t// linear: linear blend from original image (no mips)\r\n\t\t// nearest: nearest pixel from original image (no mips, 'blocky' look)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n\t\tif (this.filtering === TextureFilteringType.MipMap) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\r\n\t\t} else if (this.filtering === TextureFilteringType.Nearest) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t} else if (this.filtering === TextureFilteringType.Linear) {\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class Textures extends IterableStringMap<Texture> {\r\n\r\n\tcount: number = 0;\r\n\tdirty: boolean = false;\r\n\tanimated: boolean = false;\r\n\r\n\tclean() {\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tthis.values[key].dirty = false;\r\n\t\t});\r\n\t\tthis.dirty = false;\r\n\t}\r\n\r\n\tcreateOrUpdate(\r\n\t\tgl: WebGLRenderingContext | WebGL2RenderingContext,\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\tindex: number = 0,\r\n\t\toptions: ITextureOptions = {},\r\n\t\tworkpath: string,\r\n\t): Promise<Texture> {\r\n\t\tlet texture;\r\n\t\tconst textureOptions = Texture.getTextureOptions(urlElementOrData, options);\r\n\t\ttexture = this.get(key);\r\n\t\tif (!texture) {\r\n\t\t\ttexture = new Texture(gl, key, index + this.count, textureOptions, workpath);\r\n\t\t\tthis.count++;\r\n\t\t\tthis.set(key, texture);\r\n\t\t}\r\n\t\tif (textureOptions !== undefined) {\r\n\t\t\treturn texture.load(gl, textureOptions).then(\r\n\t\t\t\t(texture) => {\r\n\t\t\t\t\tif (texture.source instanceof HTMLVideoElement) {\r\n\t\t\t\t\t\tconst video = texture.source as HTMLVideoElement;\r\n\t\t\t\t\t\t// Logger.log('video', video);\r\n\t\t\t\t\t\tvideo.addEventListener('play', () => {\r\n\t\t\t\t\t\t\t// Logger.log('play', texture.key);\r\n\t\t\t\t\t\t\ttexture.animated = true;\r\n\t\t\t\t\t\t\tthis.animated = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvideo.addEventListener('pause', () => {\r\n\t\t\t\t\t\t\t// Logger.log('pause', texture.key);\r\n\t\t\t\t\t\t\ttexture.animated = false;\r\n\t\t\t\t\t\t\tthis.animated = this.reduce((flag: boolean, texture: Texture) => {\r\n\t\t\t\t\t\t\t\treturn flag || texture.animated;\r\n\t\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvideo.addEventListener('seeked', () => {\r\n\t\t\t\t\t\t\t// Logger.log('seeked');\r\n\t\t\t\t\t\t\ttexture.update(gl, texture.options);\r\n\t\t\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// Logger.log('video');\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\tvideo.addEventListener('canplaythrough', () => {\r\n\t\t\t\t\t\t\t// !!!\r\n\t\t\t\t\t\t\tthis.intervalID = setInterval(() => {\r\n\t\t\t\t\t\t\t\tthis.update(gl, options);\r\n\t\t\t\t\t\t\t}, 15);\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\tvideo.addEventListener('ended', () => {\r\n\t\t\t\t\t\t\tvideo.currentTime = 0;\r\n\t\t\t\t\t\t\tvideo.play();\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn texture;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve(texture);\r\n\t\t}\r\n\t}\r\n}\r\n","export default class CanvasTimer {\r\n\r\n\tstart: number;\r\n\tprevious: number;\r\n\tdelay: number = 0.0;\r\n\tcurrent: number = 0.0;\r\n\tdelta: number = 0.0;\r\n\tpaused: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.start = this.previous = this.now();\r\n\t}\r\n\r\n\tnow() {\r\n\t\treturn performance.now();\r\n\t}\r\n\r\n\tplay() {\r\n\t\tif (this.previous) {\r\n\t\t\tconst now = this.now();\r\n\t\t\tthis.delay += (now - this.previous);\r\n\t\t\tthis.previous = now;\r\n\t\t}\r\n\t\t// Logger.log(this.delay);\r\n\t\tthis.paused = false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t}\r\n\r\n\tnext(): CanvasTimer {\r\n\t\tconst now = this.now();\r\n\t\tthis.delta = now - this.previous;\r\n\t\tthis.current = now - this.start - this.delay;\r\n\t\tthis.previous = now;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import Logger from '../logger/logger';\r\n\r\nexport class Listener {\r\n\tevent: string;\r\n\tcallback: Function;\r\n\r\n\tconstructor(\r\n\t\tevent: string,\r\n\t\tcallback: Function\r\n\t) {\r\n\t\tthis.event = event;\r\n\t\tthis.callback = callback;\r\n\t}\r\n}\r\n\r\nexport default class Subscriber {\r\n\tprivate listeners: Set<Listener> = new Set<Listener>();\r\n\r\n\tlogListeners() {\r\n\t\tthis.listeners.forEach(x => Logger.log(x));\r\n\t}\r\n\r\n\tsubscribe(listener: Listener) {\r\n\t\tthis.listeners.add(listener);\r\n\t}\r\n\r\n\tunsubscribe(listener: Listener) {\r\n\t\tthis.listeners.delete(listener);\r\n\t}\r\n\r\n\tunsubscribeAll() {\r\n\t\tthis.listeners.clear();\r\n\t}\r\n\r\n\ton(event: string, callback: Function) {\r\n\t\tthis.listeners.add(new Listener(event, callback));\r\n\t\treturn this;\r\n\t}\r\n\r\n\toff(event: string, callback?: Function) {\r\n\t\tif (callback) {\r\n\t\t\tthis.listeners.delete(new Listener(event, callback));\r\n\t\t} else {\r\n\t\t\tthis.listeners.forEach(x => {\r\n\t\t\t\tif (x.event === event) {\r\n\t\t\t\t\tthis.listeners.delete(x);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttrigger(event: string, ...data: any[]) {\r\n\t\tthis.listeners.forEach(x => {\r\n\t\t\tif (x.event === event && typeof x.callback === 'function') {\r\n\t\t\t\tx.callback(...data);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import Geometry from './geometry';\r\n\r\nexport default class BoxGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tthis.size = 36;\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = [\r\n\t\t\t// Front face\r\n\t\t\t-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\r\n\t\t\t// Back face\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0,\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\r\n\t\t\t// Top face\r\n\t\t\t-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\r\n\t\t\t-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,\r\n\t\t\t// Bottom face\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0,\r\n\t\t\t-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0,\r\n\t\t\t// Right face\r\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0,\r\n\t\t\t1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,\r\n\t\t\t// Left face\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\r\n\t\t\t-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0,\r\n\t\t];\r\n\t\tthis.texcoords = [\r\n\t\t\t// Front\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Back\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Top\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Bottom\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Right\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t\t// Left\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n\t\t];\r\n\t\tthis.normals = [\r\n\t\t\t// Front\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n\t\t\t// Back\r\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n\t\t\t0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n\t\t\t// Top\r\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n\t\t\t0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n\t\t\t// Bottom\r\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n\t\t\t0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n\t\t\t// Right\r\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n\t\t\t1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n\t\t\t// Left\r\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n\t\t\t-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n\t\t];\r\n\t\t// Now set up the colors for the faces. We'll use solid colors\r\n\t\t// for each face.\r\n\t\tconst faceColors = [\r\n\t\t\t[1.0, 1.0, 1.0, 1.0],    // Front face: white\r\n\t\t\t[1.0, 0.0, 0.0, 1.0],    // Back face: red\r\n\t\t\t[0.0, 1.0, 0.0, 1.0],    // Top face: green\r\n\t\t\t[0.0, 0.0, 1.0, 1.0],    // Bottom face: blue\r\n\t\t\t[1.0, 1.0, 0.0, 1.0],    // Right face: yellow\r\n\t\t\t[1.0, 0.0, 1.0, 1.0],    // Left face: purple\r\n\t\t];\r\n\t\t// Convert the array of colors into a table for all the vertices.\r\n\t\tlet colors: number[] = [];\r\n\t\tfor (var j = 0; j < faceColors.length; ++j) {\r\n\t\t\tconst c = faceColors[j];\r\n\t\t\t// Repeat each color four times for the four vertices of the face\r\n\t\t\tcolors = colors.concat(c, c, c, c, c, c);\r\n\t\t}\r\n\t\tthis.colors = colors;\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n}\r\n","import Vector3 from '../math/vector3';\r\nimport Geometry from './geometry';\r\n\r\nexport default class SphereGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tconst radius = 1.4;\r\n\t\tconst widthDivisions = 80;\r\n\t\tconst heightDivisions = 60;\r\n\t\tconst phiStart = 0;\r\n\t\tconst phiLength = Math.PI * 2;\r\n\t\tconst thetaStart = 0;\r\n\t\tconst thetaLength = Math.PI;\r\n\t\tconst p = new Vector3();\r\n\t\tconst n = new Vector3();\r\n\t\t// buffers\r\n\t\tconst indices = [];\r\n\t\tconst positions = [];\r\n\t\tconst normals = [];\r\n\t\tconst texcoords = [];\r\n\t\tconst colors = [];\r\n\t\t//\r\n\t\tlet thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n\t\tlet ix, iy;\r\n\t\tlet index = 0;\r\n\t\tlet grid = [];\r\n\t\t// generate positions, normals and uvs\r\n\t\tfor (iy = 0; iy <= heightDivisions; iy++) {\r\n\t\t\tlet positionRow = [];\r\n\t\t\tlet v = iy / heightDivisions;\r\n\t\t\t// special case for the poles\r\n\t\t\tlet uOffset = 0;\r\n\t\t\tif (iy == 0 && thetaStart == 0) {\r\n\t\t\t\tuOffset = 0.5 / widthDivisions;\r\n\t\t\t} else if (iy == heightDivisions && thetaEnd == Math.PI) {\r\n\t\t\t\tuOffset = -0.5 / widthDivisions;\r\n\t\t\t}\r\n\t\t\tfor (ix = 0; ix <= widthDivisions; ix++) {\r\n\t\t\t\tlet u = ix / widthDivisions;\r\n\t\t\t\t// position\r\n\t\t\t\tp.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\tp.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n\t\t\t\tp.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\tpositions.push(p.x, p.y, p.z);\r\n\t\t\t\t// normal\r\n\t\t\t\tn.copy(p).normalize();\r\n\t\t\t\tnormals.push(n.x, n.y, n.z);\r\n\t\t\t\t// uv\r\n\t\t\t\tconst uvx = (u + uOffset);\r\n\t\t\t\tconst uvy = (1 - v);\r\n\t\t\t\ttexcoords.push(uvx, uvy);\r\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\r\n\t\t\t\tpositionRow.push(index++);\r\n\t\t\t}\r\n\t\t\tgrid.push(positionRow);\r\n\t\t}\r\n\t\t// indices\r\n\t\tfor (iy = 0; iy < heightDivisions; iy++) {\r\n\t\t\tfor (ix = 0; ix < widthDivisions; ix++) {\r\n\t\t\t\tconst a = grid[iy][ix + 1];\r\n\t\t\t\tconst b = grid[iy][ix];\r\n\t\t\t\tconst c = grid[iy + 1][ix];\r\n\t\t\t\tconst d = grid[iy + 1][ix + 1];\r\n\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n\t\t\t\tif (iy !== heightDivisions - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// build geometry\r\n\t\tthis.size = indices.length;\r\n\t\t// Now create an array of positions for the cube.\r\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\r\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\r\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\r\n\t\t// Now set up the colors for the faces. We'll use solid colors\r\n\t\t// for each face.\r\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\r\n\t\t// this.unrapUvw(this.positions);\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\t/*\r\n\tunrapUvw(positions: number[]): void {\r\n\t\tconst texcoords: number[] = this.texcoords = [];\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\r\n\t\t\tv.normalize();\r\n\t\t\tconst pitch = Math.asin(-v.y);\r\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\r\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\r\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\r\n\t\t\ttexcoords.push(tx, ty);\r\n\t\t}\r\n\t}\r\n\t*/\r\n\r\n}\r\n","import Vector3 from '../math/vector3';\r\nimport Geometry from './geometry';\r\n\r\nexport default class TorusGeometry extends Geometry {\r\n\r\n\tprotected createData_() {\r\n\t\tconst radius: number = 1;\r\n\t\tconst tube: number = 0.25;\r\n\t\tconst tubularDivisions: number = 200;\r\n\t\tconst radialDivisions: number = 40;\r\n\t\tconst p: number = 2;\r\n\t\tconst q: number = 3;\r\n\t\tconst indices: number[] = [];\r\n\t\tconst positions: number[] = [];\r\n\t\tconst normals: number[] = [];\r\n\t\tconst texcoords: number[] = [];\r\n\t\tconst colors: number[] = [];\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst p1 = new Vector3();\r\n\t\tconst p2 = new Vector3();\r\n\t\tconst B = new Vector3();\r\n\t\tconst T = new Vector3();\r\n\t\tconst N = new Vector3();\r\n\t\tfor (let i: number = 0; i <= tubularDivisions; ++i) {\r\n\t\t\tconst u = i / tubularDivisions * p * Math.PI * 2;\r\n\t\t\tthis.calculatePositionOnCurve(u, p, q, radius, p1);\r\n\t\t\tthis.calculatePositionOnCurve(u + 0.01, p, q, radius, p2);\r\n\t\t\tT.subVectors(p2, p1);\r\n\t\t\tN.addVectors(p2, p1);\r\n\t\t\tB.crossVectors(T, N);\r\n\t\t\tN.crossVectors(B, T);\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\t\t\tfor (let j: number = 0; j <= radialDivisions; ++j) {\r\n\t\t\t\tconst v: number = j / radialDivisions * Math.PI * 2;\r\n\t\t\t\tconst cx: number = - tube * Math.cos(v);\r\n\t\t\t\tconst cy: number = tube * Math.sin(v);\r\n\t\t\t\tvertex.x = p1.x + (cx * N.x + cy * B.x);\r\n\t\t\t\tvertex.y = p1.y + (cx * N.y + cy * B.y);\r\n\t\t\t\tvertex.z = p1.z + (cx * N.z + cy * B.z);\r\n\t\t\t\tpositions.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t\tnormal.subVectors(vertex, p1).normalize();\r\n\t\t\t\tnormals.push(normal.x, normal.y, normal.z);\r\n\t\t\t\ttexcoords.push(i / tubularDivisions * 2.0 * Math.round(q));\r\n\t\t\t\ttexcoords.push(j / radialDivisions);\r\n\t\t\t\tcolors.push(1.0, 1.0, 1.0, 1.0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let j: number = 1; j <= tubularDivisions; j++) {\r\n\t\t\tfor (let i: number = 1; i <= radialDivisions; i++) {\r\n\t\t\t\tconst a: number = (radialDivisions + 1) * (j - 1) + (i - 1);\r\n\t\t\t\tconst b: number = (radialDivisions + 1) * j + (i - 1);\r\n\t\t\t\tconst c: number = (radialDivisions + 1) * j + i;\r\n\t\t\t\tconst d: number = (radialDivisions + 1) * (j - 1) + i;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.size = indices.length;\r\n\t\tthis.positions = Geometry.fromIndices(indices, positions, 3);\r\n\t\tthis.texcoords = Geometry.fromIndices(indices, texcoords, 2);\r\n\t\tthis.normals = Geometry.fromIndices(indices, normals, 3);\r\n\t\tthis.colors = Geometry.fromIndices(indices, colors, 4);\r\n\t\t// console.log('positions', this.positions.length);\r\n\t\t// console.log('normals', this.normals.length);\r\n\t\t// console.log('texcoords', this.texcoords.length);\r\n\t\t// console.log('colors', this.colors.length);\r\n\t}\r\n\r\n\tprotected calculatePositionOnCurve(u: number, p: number, q: number, radius: number, position: Vector3): void {\r\n\t\tconst cu: number = Math.cos(u);\r\n\t\tconst su: number = Math.sin(u);\r\n\t\tconst quOverP: number = q / p * u;\r\n\t\tconst cs: number = Math.cos(quOverP);\r\n\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\r\n\t\tposition.y = radius * (2 + cs) * su * 0.5;\r\n\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\r\n\t}\r\n\r\n}\r\n","import Common from '../core/common';\r\nimport Geometry, { IGeometry } from '../geometry/geometry';\r\nimport Vector3 from '../math/vector3';\r\n\r\nconst COLORS = [\r\n\t[1, 1, 1],\r\n\t[1, 0, 0],\r\n\t[0, 1, 0],\r\n\t[0, 0, 1],\r\n\t[1, 1, 0],\r\n\t[0, 1, 1],\r\n];\r\n\r\nlet CI: number = 0;\r\n\r\nexport default class ObjLoader {\r\n\r\n\tload(url: string): Promise<Geometry> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tCommon.fetch(url)\r\n\t\t\t\t// .then((response) => response.text())\r\n\t\t\t\t.then((text) => {\r\n\t\t\t\t\t// console.log(text);\r\n\t\t\t\t\tconst data = this.parse(text);\r\n\t\t\t\t\tif (data.positions.length) {\r\n\t\t\t\t\t\tconst geometry = new Geometry(data as IGeometry);\r\n\t\t\t\t\t\tresolve(geometry);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject(`ObjLoader error: empty positions ${url}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, error => {\r\n\t\t\t\t\tconsole.log('ObjLoader error:', error, url);\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tparseIndices(faceIndices: number[][], k: number, l: number, source: number[][], output: number[], name: string) {\r\n\t\tlet i = 0;\r\n\t\twhile (i <= faceIndices.length - 3) {\r\n\t\t\tlet a, b, c;\r\n\t\t\tif (i === 0) {\r\n\t\t\t\ta = i;\r\n\t\t\t\tb = i + 1;\r\n\t\t\t\tc = i + 2;\r\n\t\t\t} else {\r\n\t\t\t\ta = i - 1;\r\n\t\t\t\tb = i + 1;\r\n\t\t\t\tc = i + 2;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\tconst indices = [a, b, c];\r\n\t\t\tfor (let j = 0; j < indices.length; j++) {\r\n\t\t\t\tconst index = faceIndices[indices[j]][k];\r\n\t\t\t\tlet values;\r\n\t\t\t\tif (index && index !== NaN) {\r\n\t\t\t\t\tvalues = source[index - 1];\r\n\t\t\t\t\tif (values) {\r\n\t\t\t\t\t\tvalues = values.slice(0, l);\r\n\t\t\t\t\t\toutput.push.apply(output, values);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// console.log('error', name, source.length, index - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalues = new Array(l).fill(0);\r\n\t\t\t\t\toutput.push.apply(output, values);\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseFaces(F: number[][][], V: number[][], VN: number[][], VT: number[][], positions: number[], normals: number[], texcoords: number[], colors: number[]) {\r\n\t\tconst si: number = positions.length;\r\n\t\tF.forEach(faceIndices => {\r\n\t\t\t// console.log(faceIndices);\r\n\t\t\tthis.parseIndices(faceIndices, 0, 3, V, positions, 'positions');\r\n\t\t\tthis.parseIndices(faceIndices, 2, 3, VN, normals, 'normals');\r\n\t\t\tthis.parseIndices(faceIndices, 1, 2, VT, texcoords, 'texcoords');\r\n\t\t});\r\n\t\tconst vl: number = positions.length - si;\r\n\t\tif (vl > 0) {\r\n\t\t\t// console.log(faceIndices.length - 2);\r\n\t\t\tconst c = new Array(vl / 3).fill(0);\r\n\t\t\tc.forEach(() => {\r\n\t\t\t\tconst rgb = COLORS[CI % COLORS.length];\r\n\t\t\t\tcolors.push(rgb[0], rgb[1], rgb[2], 1.0);\r\n\t\t\t});\r\n\t\t\tCI++;\r\n\t\t\t// console.log(positions.length, normals.length, texcoords.length, colors.length, positions.length / 3 * 2 === texcoords.length, positions.length / 3 * 4 === colors.length);\r\n\t\t}\r\n\t}\r\n\r\n\tparse(text: string): IGeometry {\r\n\t\tlet positions: number[] = [], normals: number[] = [], texcoords: number[] = [], colors: number[] = [];\r\n\t\tCI = 0;\r\n\t\tlet V: number[][] = [], VN: number[][] = [], VT: number[][] = [], F: number[][][] = [];\r\n\t\tif (text.indexOf('\\r\\n') !== - 1) {\r\n\t\t\ttext = text.replace(/\\r\\n/g, '\\n');\r\n\t\t}\r\n\t\t/*\r\n\t\tif (text.indexOf('\\\\\\n') !== - 1) {\r\n\t\t\ttext = text.replace(/\\\\\\n/g, '');\r\n\t\t}\r\n\t\t*/\r\n\t\ttext = text.replace(/  /g, ' ');\r\n\t\tconst lines = text.split('\\n');\r\n\t\tlines.forEach((line, i) => {\r\n\t\t\tif (line.indexOf('v ') === 0) {\r\n\t\t\t\tif (F.length) {\r\n\t\t\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\r\n\t\t\t\t\tF = [];\r\n\t\t\t\t\t// V = [];\r\n\t\t\t\t\t// VN = [];\r\n\t\t\t\t\t// VT = [];\r\n\t\t\t\t}\r\n\t\t\t\t// v  0.0012 -0.0055 0.0090\r\n\t\t\t\tconst a = line.replace('v', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tV.push(v);\r\n\t\t\t} else if (line.indexOf('vn ') === 0) {\r\n\t\t\t\t// vn 0.0128 0.9896 0.1431\r\n\t\t\t\tconst a = line.replace('vn', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tconst n = new Vector3(v[0], v[1], v[2]).normalize();\r\n\t\t\t\tVN.push([n.x, n.y, n.z]);\r\n\t\t\t} else if (line.indexOf('vt ') === 0) {\r\n\t\t\t\t// vt 0.5955 0.0054 0.0000\r\n\t\t\t\tconst a = line.replace('vt', '').trim().split(' ');\r\n\t\t\t\tconst v = a.map(x => parseFloat(x));\r\n\t\t\t\tVT.push(v);\r\n\t\t\t} else if (line.indexOf('f ') === 0) {\r\n\t\t\t\t// f 1//1 2//2 3//3 4//4\r\n\t\t\t\tconst a = line.replace('f', '').trim().split(' ');\r\n\t\t\t\tconst f = a.map((x: string) => {\r\n\t\t\t\t\tconst indices = x.split('/').map(y => parseInt(y));\r\n\t\t\t\t\tif (indices.length === 2) {\r\n\t\t\t\t\t\tindices.push(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn indices;\r\n\t\t\t\t});\r\n\t\t\t\tF[F.length] = f;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (F.length) {\r\n\t\t\tthis.parseFaces(F, V, VN, VT, positions, normals, texcoords, colors);\r\n\t\t}\r\n\t\tconst boundingBox = { min: new Vector3(Number.POSITIVE_INFINITY), max: new Vector3(Number.NEGATIVE_INFINITY) };\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tboundingBox.min.x = Math.min(boundingBox.min.x, positions[i]);\r\n\t\t\tboundingBox.min.y = Math.min(boundingBox.min.y, positions[i + 1]);\r\n\t\t\tboundingBox.min.z = Math.min(boundingBox.min.z, positions[i + 2]);\r\n\t\t\tboundingBox.max.x = Math.max(boundingBox.max.x, positions[i]);\r\n\t\t\tboundingBox.max.y = Math.max(boundingBox.max.y, positions[i + 1]);\r\n\t\t\tboundingBox.max.z = Math.max(boundingBox.max.z, positions[i + 2]);\r\n\t\t}\r\n\t\tconst centerX = true, centerY = true, centerZ = true;\r\n\t\tconst dx = -(boundingBox.min.x + boundingBox.max.x) / 2;\r\n\t\tconst dy = -(boundingBox.min.y + boundingBox.max.y) / 2;\r\n\t\tconst dz = -(boundingBox.min.z + boundingBox.max.z) / 2;\r\n\t\t// console.log(dx, dy, dz);\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tpositions[i] += centerX ? dx : 0;\r\n\t\t\tpositions[i + 1] += centerY ? dy : 0;\r\n\t\t\tpositions[i + 2] += centerZ ? dz : 0;\r\n\t\t}\r\n\t\tconst radius = positions.reduce((p: number, c: number) => {\r\n\t\t\treturn Math.max(p, c);\r\n\t\t}, 0);\r\n\t\tpositions.forEach((x: number, i: number) => positions[i] = x / radius * 2.0);\r\n\t\tif (!normals.length) {\r\n\t\t\tnormals = positions.slice();\r\n\t\t}\r\n\t\tif (!texcoords.length) {\r\n\t\t\ttexcoords = this.unrapUvw(positions);\r\n\t\t}\r\n\t\t/*\r\n\t\t// console.log(positions.length, normals.length, texcoords.length, colors.length,\r\n\t\t//\tpositions.length / 3 * 2 === texcoords.length,\r\n\t\t//\tpositions.length / 3 * 4 === colors.length);\r\n\t\t*/\r\n\t\treturn {\r\n\t\t\tpositions, normals, texcoords, colors\r\n\t\t};\r\n\t}\r\n\r\n\tunrapUvw(positions: number[]): number[] {\r\n\t\tconst texcoords: number[] = [];\r\n\t\tfor (let i = 0; i < positions.length; i += 3) {\r\n\t\t\tconst v = new Vector3(positions[i], positions[i + 1], positions[i + 2]);\r\n\t\t\tv.normalize();\r\n\t\t\tconst pitch = Math.asin(-v.y);\r\n\t\t\tconst yaw = Math.atan2(v.x, v.z);\r\n\t\t\tconst tx = 0.5 + pitch / Math.PI; // * 360;\r\n\t\t\tconst ty = 0.5 + yaw / (Math.PI * 2); // * 180;\r\n\t\t\ttexcoords.push(tx, ty);\r\n\t\t}\r\n\t\treturn texcoords;\r\n\t}\r\n}\r\n","\r\nimport IterableStringMap from '../core/iterable';\r\nimport Logger from '../logger/logger';\r\nimport { Texture } from '../textures/textures';\r\n\r\nexport enum UniformMethod {\r\n\tUnknown = 0,\r\n\tUniform1i = 'uniform1i', // (intUniformLoc,   v);                 // for int\r\n\t// Uniform1i  = 'uniform1i', // (boolUniformLoc,   v);                // for bool\r\n\t// Uniform1i  = 'uniform1i', // (sampler2DUniformLoc,   v);           // for sampler2D\r\n\t// Uniform1i  = 'uniform1i', // (samplerCubeUniformLoc,   v);         // for samplerCube\r\n\tUniform2i = 'uniform2i', // (ivec2UniformLoc, v0, v1);            // for ivec2\r\n\tUniform3i = 'uniform3i', // (ivec3UniformLoc, v0, v1, v2);        // for ivec3\r\n\tUniform4i = 'uniform4i', // (ivec4UniformLoc, v0, v1, v2, v4);    // for ivec4\r\n\tUniform1f = 'uniform1f', // (floatUniformLoc, v);                 // for float\r\n\tUniform2f = 'uniform2f', // (vec2UniformLoc,  v0, v1);            // for vec2\r\n\tUniform3f = 'uniform3f', // (vec3UniformLoc,  v0, v1, v2);        // for vec3\r\n\tUniform4f = 'uniform4f', // (vec4UniformLoc,  v0, v1, v2, v4);    // for vec4\r\n\t//\r\n\tUniform1iv = 'uniform1iv', // (intUniformLoc, [v]);                 // for int or int array\r\n\t// Uniform1iv = 'uniform1iv', // (boolUniformLoc, [v]);                // for bool or bool array\r\n\t// Uniform1iv = 'uniform1iv', // (sampler2DUniformLoc, [v]);           // for sampler2D or sampler2D array\r\n\t// Uniform1iv = 'uniform1iv', // (samplerCubeUniformLoc, [v]);         // for samplerCube or samplerCube array\r\n\tUniform2iv = 'uniform2iv', // (ivec2UniformLoc, [v0, v1]);          // for ivec2 or ivec2 array\r\n\tUniform3iv = 'uniform3iv', // (ivec3UniformLoc, [v0, v1, v2]);      // for ivec3 or ivec3 array\r\n\tUniform4iv = 'uniform4iv', // (ivec4UniformLoc, [v0, v1, v2, v4]);  // for ivec4 or ivec4 array\r\n\t//\r\n\tUniform1fv = 'uniform1fv', // (floatUniformLoc, [v]);               // for float or float array\r\n\tUniform2fv = 'uniform2fv', // (vec2UniformLoc,  [v0, v1]);          // for vec2 or vec2 array\r\n\tUniform3fv = 'uniform3fv', // (vec3UniformLoc,  [v0, v1, v2]);      // for vec3 or vec3 array\r\n\tUniform4fv = 'uniform4fv', // (vec4UniformLoc,  [v0, v1, v2, v4]);  // for vec4 or vec4 array\r\n\t//\r\n\tUniformMatrix2fv = 'uniformMatrix2fv', // (mat2UniformLoc, false, [  4x element array ])  // for mat2 or mat2 array\r\n\tUniformMatrix3fv = 'uniformMatrix3fv', // (mat3UniformLoc, false, [  9x element array ])  // for mat3 or mat3 array\r\n\tUniformMatrix4fv = 'uniformMatrix4fv', // (mat4UniformLoc, false, [ 16x element array ])  // for mat4 or mat4 array\r\n}\r\n\r\nexport enum UniformType {\r\n\tUnknown = 0,\r\n\tFloat,\r\n\tInt,\r\n\tBool,\r\n\tSampler2D,\r\n\tSamplerCube,\r\n\tMatrix2fv,\r\n\tMatrix3fv,\r\n\tMatrix4fv,\r\n}\r\n\r\nexport const METHODS_INT = [UniformMethod.Uniform1i, UniformMethod.Uniform2i, UniformMethod.Uniform3i, UniformMethod.Uniform4i];\r\nexport const METHODS_FLOAT = [UniformMethod.Uniform1f, UniformMethod.Uniform2f, UniformMethod.Uniform3f, UniformMethod.Uniform4f];\r\nexport const METHODS_INTV = [UniformMethod.Uniform1iv, UniformMethod.Uniform2iv, UniformMethod.Uniform3iv, UniformMethod.Uniform4iv];\r\nexport const METHODS_FLOATV = [UniformMethod.Uniform1fv, UniformMethod.Uniform2fv, UniformMethod.Uniform3fv, UniformMethod.Uniform4fv];\r\n\r\nexport interface IUniformOption { [key: string]: any[]; }\r\n\r\nexport class Uniform {\r\n\tmethod: UniformMethod;\r\n\ttype: UniformType;\r\n\tkey: string;\r\n\tvalues: any[];\r\n\tlocation?: WebGLUniformLocation;\r\n\tdirty?: boolean = true;\r\n\tapply?: Function;\r\n\r\n\tconstructor(options?: Uniform) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t\tswitch (this.method) {\r\n\t\t\tcase UniformMethod.UniformMatrix2fv:\r\n\t\t\tcase UniformMethod.UniformMatrix3fv:\r\n\t\t\tcase UniformMethod.UniformMatrix4fv:\r\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\r\n\t\t\t\t\tif (this.dirty) {\r\n\t\t\t\t\t\tgl.useProgram(program);\r\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\r\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\r\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location, false].concat(this.values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.apply = (gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) => {\r\n\t\t\t\t\tif (this.dirty) {\r\n\t\t\t\t\t\tgl.useProgram(program);\r\n\t\t\t\t\t\tconst location = gl.getUniformLocation(program, this.key);\r\n\t\t\t\t\t\t// Logger.log(this.key, this.method, this.values);\r\n\t\t\t\t\t\t// (gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t\t(gl as any)[this.method].apply(gl, [location].concat(this.values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport class UniformTexture extends Uniform {\r\n\r\n\ttexture: Texture;\r\n\r\n\tconstructor(options?: Uniform) {\r\n\t\tsuper(options);\r\n\t}\r\n\r\n}\r\n\r\nexport default class Uniforms extends IterableStringMap<Uniform> {\r\n\r\n\tdirty: boolean = false;\r\n\r\n\tstatic isArrayOfInteger(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && Number.isInteger(value);\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfNumber(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && typeof value === 'number';\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfBoolean(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && typeof value === 'boolean';\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfTexture(array: any[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: any) => {\r\n\t\t\treturn flag && Texture.isTexture(value);\r\n\t\t}, true);\r\n\t}\r\n\r\n\tstatic isArrayOfSampler2D(array: Uniform[]): boolean {\r\n\t\treturn array.reduce((flag: boolean, value: Uniform) => {\r\n\t\t\treturn flag && value.type === UniformType.Sampler2D;\r\n\t\t}, true);\r\n\t}\r\n\r\n\tprivate static getType_(\r\n\t\tvalues: any[],\r\n\t): UniformType {\r\n\t\tlet type = UniformType.Unknown;\r\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\r\n\t\tconst subject = isVector ? values[0] : values;\r\n\t\tif (Uniforms.isArrayOfNumber(subject)) {\r\n\t\t\ttype = UniformType.Float;\r\n\t\t} else if (Uniforms.isArrayOfBoolean(subject)) {\r\n\t\t\ttype = UniformType.Bool;\r\n\t\t} else if (Uniforms.isArrayOfTexture(subject)) {\r\n\t\t\ttype = UniformType.Sampler2D;\r\n\t\t}\r\n\t\treturn type;\r\n\t}\r\n\r\n\tprivate static getMethod_(\r\n\t\ttype: UniformType,\r\n\t\tvalues: any[],\r\n\t): UniformMethod {\r\n\t\tlet method = UniformMethod.Unknown;\r\n\t\tconst isVector = values.length === 1 && Array.isArray(values[0]);\r\n\t\tconst subject = isVector ? values[0] : values;\r\n\t\tconst length = subject.length;\r\n\t\tconst i = length - 1;\r\n\t\tswitch (type) {\r\n\t\t\tcase UniformType.Float:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = i < METHODS_FLOATV.length ? METHODS_FLOATV[i] : UniformMethod.Unknown;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = i < METHODS_FLOAT.length ? METHODS_FLOAT[i] : UniformMethod.Uniform1fv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase UniformType.Int:\r\n\t\t\tcase UniformType.Bool:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = i < METHODS_INTV.length ? METHODS_INTV[i] : UniformMethod.Unknown;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = i < METHODS_INT.length ? METHODS_INT[i] : UniformMethod.Uniform1iv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase UniformType.Sampler2D:\r\n\t\t\t\tif (isVector) {\r\n\t\t\t\t\tmethod = UniformMethod.Uniform1iv;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = length === 1 ? UniformMethod.Uniform1i : UniformMethod.Uniform1iv;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn method;\r\n\t}\r\n\r\n\tstatic parseUniform(\r\n\t\tkey: string,\r\n\t\tvalues: any[],\r\n\t\ttype: UniformType = null\r\n\t): Uniform | Uniform[] {\r\n\t\tlet uniform: Uniform;\r\n\t\ttype = type || Uniforms.getType_(values);\r\n\t\tconst method = Uniforms.getMethod_(type, values);\r\n\t\tif (type !== UniformType.Unknown && method !== UniformMethod.Unknown) {\r\n\t\t\t// Logger.log('Uniforms.parseUniform', key, UniformType[type], method, values);\r\n\t\t\tif (type === UniformType.Sampler2D && method === UniformMethod.Uniform1iv) {\r\n\t\t\t\treturn values[0].map((texture: any, index: number) => {\r\n\t\t\t\t\treturn new Uniform({\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\tkey: `${key}[${index}]`, // `${key.split('[')[0]}[${index}]`,\r\n\t\t\t\t\t\tvalues: [texture]\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tuniform = new Uniform({\r\n\t\t\t\t\tmethod: method,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tvalues: values\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tLogger.error('Uniforms.parseUniform.Unknown', key, values);\r\n\t\t}\r\n\t\t// return this.parseUniform__bak(key, values);\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tcreate(method: UniformMethod, type: UniformType, key: string, values: any[]): Uniform {\r\n\t\tconst uniform = new Uniform({\r\n\t\t\tmethod: method,\r\n\t\t\ttype: type,\r\n\t\t\tkey: key,\r\n\t\t\tvalues: values,\r\n\t\t});\r\n\t\tthis.set(key, uniform);\r\n\t\tthis.dirty = true;\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tcreateTexture(key: string, index: number): UniformTexture {\r\n\t\tlet uniform;\r\n\t\tif (key.indexOf(']') !== -1) {\r\n\t\t\tuniform = new UniformTexture({\r\n\t\t\t\tmethod: UniformMethod.Uniform1iv,\r\n\t\t\t\ttype: UniformType.Sampler2D,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalues: [[index]],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tuniform = new UniformTexture({\r\n\t\t\t\tmethod: UniformMethod.Uniform1i,\r\n\t\t\t\ttype: UniformType.Sampler2D,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalues: [index],\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.set(key, uniform);\r\n\t\tthis.dirty = true;\r\n\t\treturn uniform;\r\n\t}\r\n\r\n\tupdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\r\n\t\tconst uniform = this.get(key);\r\n\t\tif (uniform) {\r\n\t\t\t// !!! consider performance\r\n\t\t\t// && (uniform.method !== method || uniform.type !== type || Uniforms.isDifferent(uniform.values, values))) {\r\n\t\t\tuniform.method = method;\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.values = values;\r\n\t\t\tuniform.dirty = true;\r\n\t\t\tthis.dirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateOrUpdate(method: UniformMethod, type: UniformType, key: string, values: any[]) {\r\n\t\tif (this.has(key)) {\r\n\t\t\tthis.update(method, type, key, values);\r\n\t\t} else {\r\n\t\t\tthis.create(method, type, key, values);\r\n\t\t}\r\n\t}\r\n\r\n\tapply(gl: WebGLRenderingContext | WebGL2RenderingContext, program: WebGLProgram) {\r\n\t\tgl.useProgram(program);\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\t// if (typeof this.values[key].apply === 'function') {\r\n\t\t\tthis.values[key].apply(gl, program);\r\n\t\t\t// }\r\n\t\t});\r\n\t\t// this.forEach(uniform => uniform.apply(gl, program));\r\n\t}\r\n\r\n\tclean() {\r\n\t\tObject.keys(this.values).forEach((key) => {\r\n\t\t\tthis.values[key].dirty = false;\r\n\t\t});\r\n\t\tthis.dirty = false;\r\n\t}\r\n\r\n\t/*\r\n\t// slow\r\n\tstatic isDifferent(a: any, b: any): boolean {\r\n        return JSON.stringify(a) !== JSON.stringify(b);\r\n    }\r\n\t*/\r\n\r\n\tstatic isDifferent(a: any[], b: any[]) {\r\n\t\treturn a.length !== b.length || a.reduce((f: boolean, v: any, i: number) => {\r\n\t\t\treturn f || v !== b[i];\r\n\t\t}, false);\r\n\t}\r\n\r\n}\r\n","import { mat4 } from 'gl-matrix';\r\nimport Buffers, { IOBuffer } from '../buffers/buffers';\r\nimport OrbitCamera from '../camera/orbit-camera';\r\nimport CanvasTimer from '../canvas/canvas-timer';\r\nimport { ContextMode, ContextVertexBuffers } from '../context/context';\r\nimport Common from '../core/common';\r\nimport Subscriber from '../core/subscriber';\r\nimport BoxGeometry from '../geometry/box-geometry';\r\nimport FlatGeometry from '../geometry/flat-geometry';\r\nimport Geometry from '../geometry/geometry';\r\nimport SphereGeometry from '../geometry/sphere-geometry';\r\nimport TorusGeometry from '../geometry/torus-geometry';\r\nimport ObjLoader from '../loaders/obj-loader';\r\nimport Logger from '../logger/logger';\r\nimport Vector2 from '../math/vector2';\r\nimport Textures, { ITextureInput } from '../textures/textures';\r\nimport Uniforms, { UniformMethod, UniformType } from '../uniforms/uniforms';\r\n\r\nexport default class Renderer extends Subscriber {\r\n\r\n\tgl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\tprogram: WebGLProgram;\r\n\ttimer: CanvasTimer;\r\n\tuniforms: Uniforms = new Uniforms();\r\n\tbuffers: Buffers = new Buffers();\r\n\ttextures: Textures = new Textures();\r\n\ttextureList: ITextureInput[] = [];\r\n\r\n\tW: number = 0;\r\n\tH: number = 0;\r\n\tmouse: Vector2 = new Vector2();\r\n\tradians: number = 0;\r\n\tdirty: boolean = true;\r\n\tanimated: boolean = false;\r\n\tdrawFunc_: (deltaTime: number) => void;\r\n\r\n\tvertexString: string;\r\n\tfragmentString: string;\r\n\r\n\tcamera: OrbitCamera = new OrbitCamera();\r\n\tgeometry: Geometry;\r\n\r\n\tvertexBuffers: ContextVertexBuffers;\r\n\r\n\tprojectionMatrix: mat4;\r\n\tmodelViewMatrix: mat4;\r\n\tnormalMatrix: mat4;\r\n\r\n\tmode: ContextMode;\r\n\tmesh: string;\r\n\tdefaultMesh: string;\r\n\tdoubleSided: boolean;\r\n\tcache: { [key: string]: Geometry } = {};\r\n\tworkpath: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.drawFunc_ = this.drawArrays_;\r\n\t}\r\n\r\n\tprotected render(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tif (!gl) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tthis.update_();\r\n\t\tgl.viewport(0, 0, BW, BH);\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tbuffer.geometry.attachAttributes_(gl, buffer.program);\r\n\t\t\t// uniforms.get('u_resolution').values = [1024, 1024];\r\n\t\t\tuniforms.apply(gl, buffer.program);\r\n\t\t\t/*\r\n\t\t\t// console.log('uniforms');\r\n\t\t\tObject.keys(uniforms.values).forEach((key) => {\r\n\t\t\t\tif (key.indexOf('u_buff') === 0) {\r\n\t\t\t\t\t// console.log(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t\tbuffer.render(gl, BW, BH);\r\n\t\t});\r\n\t\t// uniforms.get('u_resolution').values = [BW, BH];\r\n\t\tthis.geometry.attachAttributes_(gl, this.program);\r\n\t\tuniforms.apply(gl, this.program);\r\n\t\t// gl.viewport(0, 0, BW, BH);\r\n\t\tthis.drawFunc_(this.timer.delta);\r\n\t\tuniforms.clean();\r\n\t\tthis.textures.clean();\r\n\t\tthis.dirty = false;\r\n\t\tthis.trigger('render', this);\r\n\t}\r\n\r\n\tprotected drawArrays_(deltaTime: number) {\r\n\t\tconst gl = this.gl;\r\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t// Clear\r\n\t\tgl.viewport(0, 0, this.W, this.H);\r\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\t\tgl.clearDepth(1.0);\r\n\t\t// Clear the canvas before we start drawing on it.\r\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\tgl.enable(gl.DEPTH_TEST);\r\n\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\tgl.enable(gl.CULL_FACE);\r\n\t\tif (this.doubleSided && this.mode !== ContextMode.Flat) {\r\n\t\t\t// back\r\n\t\t\t// gl.frontFace(gl.CW);\r\n\t\t\tgl.cullFace(gl.FRONT);\r\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t\t// front\r\n\t\t\tgl.enable(gl.BLEND);\r\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t}\r\n\t\t// gl.frontFace(gl.CCW);\r\n\t\tgl.cullFace(gl.BACK);\r\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.geometry.size);\r\n\t\t// gl.drawElements(gl.TRIANGLES, this.geometry.size, gl.UNSIGNED_SHORT, 0);\r\n\t}\r\n\r\n\tprotected create_(): void {\r\n\t\tthis.createGeometry_();\r\n\t\tthis.createUniforms_();\r\n\t}\r\n\r\n\tprotected createGeometry_() {\r\n\t\t// console.log('Geometry', Geometry);\r\n\t\t// console.log('FlatGeometry', FlatGeometry);\r\n\t\t// console.log('BoxGeometry', BoxGeometry);\r\n\t\tthis.parseGeometry_();\r\n\t\tthis.setMode(this.mode);\r\n\t}\r\n\r\n\tprotected parseGeometry_() {\r\n\t\tconst regexp = /^attribute\\s+vec4\\s+a_position\\s*;\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]+)/gm;\r\n\t\tconst match = regexp.exec(this.vertexString);\r\n\t\tif (match && match.length > 1) {\r\n\t\t\tthis.mesh = match[1];\r\n\t\t} else {\r\n\t\t\tthis.mesh = this.defaultMesh;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createUniforms_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tconst fragmentString = this.fragmentString;\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tconst timer = this.timer = new CanvasTimer();\r\n\t\tconst hasDelta = (fragmentString.match(/u_delta/g) || []).length > 1;\r\n\t\tconst hasTime = (fragmentString.match(/u_time/g) || []).length > 1;\r\n\t\tconst hasDate = (fragmentString.match(/u_date/g) || []).length > 1;\r\n\t\tconst hasMouse = (fragmentString.match(/u_mouse/g) || []).length > 1;\r\n\t\tconst hasCamera = (fragmentString.match(/u_camera/g) || []).length > 1;\r\n\t\t// this.animated = hasTime || hasDate || hasMouse;\r\n\t\tthis.animated = true; // !!!\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\r\n\t\tif (hasDelta) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\r\n\t\t\tthis.updateUniformDelta_ = this.updateUniformDelta__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformDelta_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasTime) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\r\n\t\t\tthis.updateUniformTime_ = this.updateUniformTime__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformTime_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasDate) {\r\n\t\t\tconst date = new Date();\r\n\t\t\tuniforms.create(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\r\n\t\t\tthis.updateUniformDate_ = this.updateUniformDate__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformDate_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasMouse) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [0, 0]);\r\n\t\t\tthis.updateUniformMouse_ = this.updateUniformMouse__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformMouse_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\tif (hasCamera) {\r\n\t\t\tuniforms.create(UniformMethod.Uniform3f, UniformType.Float, 'u_camera', [0, 0, 0]);\r\n\t\t\tthis.updateUniformCamera_ = this.updateUniformCamera__;\r\n\t\t} else {\r\n\t\t\tthis.updateUniformCamera_ = this.updateUniformNoop_;\r\n\t\t}\r\n\t\t// if (this.mode !== ContextMode.Flat) {\r\n\t\tthis.projectionMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.projectionMatrix as number[]);\r\n\t\tthis.modelViewMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.modelViewMatrix as number[]);\r\n\t\tthis.normalMatrix = mat4.create();\r\n\t\tuniforms.create(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.normalMatrix as number[]);\r\n\t\t// }\r\n\t}\r\n\r\n\tprotected update_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tconst BW = gl.drawingBufferWidth;\r\n\t\tconst BH = gl.drawingBufferHeight;\r\n\t\tif (!this.timer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timer = this.timer.next();\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_resolution', [BW, BH]);\r\n\t\tthis.updateUniformDelta_(timer);\r\n\t\tthis.updateUniformTime_(timer);\r\n\t\tthis.updateUniformDate_();\r\n\t\tthis.updateUniformMouse_();\r\n\t\tthis.updateUniformCamera_();\r\n\t\tthis.updateUniformMesh_();\r\n\t}\r\n\r\n\tupdateUniformNoop_(): void {};\r\n\tupdateUniformDelta_: (timer:CanvasTimer) => void;\r\n\tupdateUniformTime_: (timer:CanvasTimer) => void;\r\n\tupdateUniformDate_: () => void;\r\n\tupdateUniformMouse_: () => void;\r\n\tupdateUniformCamera_: () => void;\r\n\tupdateUniformMesh_: () => void;\r\n\r\n\tprotected updateUniformDelta__(timer:CanvasTimer):void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_delta', [timer.delta / 1000.0]);\r\n\t};\r\n\tprotected updateUniformTime__(timer:CanvasTimer):void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.Uniform1f, UniformType.Float, 'u_time', [timer.current / 1000.0]);\r\n\t};\r\n\tprotected updateUniformDate__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst date = new Date();\r\n\t\tuniforms.update(UniformMethod.Uniform4f, UniformType.Float, 'u_date', [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001]);\r\n\t};\r\n\tprotected updateUniformMouse__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst mouse = this.mouse;\r\n\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [mouse.x, mouse.y]);\r\n\t\t/*\r\n\t\tconst rect = this.rect;\r\n\t\tif (mouse.x >= rect.left && mouse.x <= rect.right &&\r\n\t\t\tmouse.y >= rect.top && mouse.y <= rect.bottom) {\r\n\t\t\tconst MX = (mouse.x - rect.left) * this.devicePixelRatio;\r\n\t\t\tconst MY = (this.canvas.height - (mouse.y - rect.top) * this.devicePixelRatio);\r\n\t\t\tuniforms.update(UniformMethod.Uniform2f, UniformType.Float, 'u_mouse', [MX, MY]);\r\n\t\t}\r\n\t\t*/\r\n\t};\r\n\tprotected updateUniformCamera__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tconst array = OrbitCamera.toArray(this.camera);\r\n\t\tuniforms.update(UniformMethod.Uniform3f, UniformType.Float, 'u_camera', array);\r\n\t};\r\n\tprotected updateUniformMesh__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', this.updateProjectionMatrix_() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', this.updateModelViewMatrix_(this.timer.delta) as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', this.updateNormalMatrix_(this.modelViewMatrix) as number[]);\r\n\t};\r\n\tprotected updateUniformFlat__():void {\r\n\t\tconst uniforms = this.uniforms;\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_projectionMatrix', mat4.create() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_modelViewMatrix', mat4.create() as number[]);\r\n\t\tuniforms.update(UniformMethod.UniformMatrix4fv, UniformType.Float, 'u_normalMatrix', mat4.create() as number[]);\r\n\t}\r\n\r\n\tprotected updateProjectionMatrix_(): mat4 {\r\n\t\tconst gl = this.gl;\r\n\t\tconst fieldOfView = 45 * Math.PI / 180;\r\n\t\tconst aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\t\tconst zNear = 0.1;\r\n\t\tconst zFar = 100.0;\r\n\t\tmat4.perspective(this.projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\t\treturn this.projectionMatrix;\r\n\t}\r\n\r\n\tprotected updateModelViewMatrix_(deltaTime: number): mat4 {\r\n\t\tconst camera = this.camera;\r\n\t\tlet modelViewMatrix = this.modelViewMatrix;\r\n\t\tmodelViewMatrix = mat4.identity(modelViewMatrix);\r\n\t\tmat4.translate(modelViewMatrix, modelViewMatrix, [0.0, 0.0, -camera.radius]); // amount to translate\r\n\t\tmat4.rotate(modelViewMatrix, modelViewMatrix, camera.theta + this.radians, [0, 1, 0]); // axis to rotate around (Y)\r\n\t\tmat4.rotate(modelViewMatrix, modelViewMatrix, camera.phi, [1, 0, 0]); // axis to rotate around (X)\r\n\t\tif (!camera.mouse) {\r\n\t\t\tcamera.theta += (0 - camera.theta) / 20;\r\n\t\t\tcamera.phi += (0 - camera.phi) / 20;\r\n\t\t\tthis.radians += deltaTime * 0.0005;\r\n\t\t}\r\n\t\treturn modelViewMatrix;\r\n\t}\r\n\r\n\tprotected updateNormalMatrix_(modelViewMatrix: mat4): mat4 {\r\n\t\t// this.normalMatrix = mat4.create();\r\n\t\tlet normalMatrix = this.normalMatrix;\r\n\t\tnormalMatrix = mat4.identity(normalMatrix);\r\n\t\tmat4.invert(normalMatrix, modelViewMatrix);\r\n\t\tmat4.transpose(normalMatrix, normalMatrix);\r\n\t\treturn normalMatrix;\r\n\t}\r\n\r\n\tpublic setMode(mode: ContextMode) {\r\n\t\tlet geometry: Geometry;\r\n\t\tif (mode === ContextMode.Mesh) {\r\n\t\t\tgeometry = this.cache[this.mesh];\r\n\t\t\tif (geometry) {\r\n\t\t\t\tthis.geometry = geometry;\r\n\t\t\t\tthis.mode = ContextMode.Mesh;\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet loader: ObjLoader;\r\n\t\tswitch (mode) {\r\n\t\t\tcase ContextMode.Flat:\r\n\t\t\t\tgeometry = new FlatGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformNoop_;\r\n\t\t\t\tthis.updateUniformFlat__();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Box:\r\n\t\t\t\tgeometry = new BoxGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Sphere:\r\n\t\t\t\tgeometry = new SphereGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Torus:\r\n\t\t\t\tgeometry = new TorusGeometry();\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ContextMode.Mesh:\r\n\t\t\t\tgeometry = new FlatGeometry();\r\n\t\t\t\tif (this.mesh) {\r\n\t\t\t\t\tloader = new ObjLoader();\r\n\t\t\t\t\tloader.load(Common.getResource(this.mesh, this.workpath)).then(geometry => {\r\n\t\t\t\t\t\tgeometry.createAttributes_(this.gl, this.program);\r\n\t\t\t\t\t\tconst cache: { [key: string]: Geometry } = {};\r\n\t\t\t\t\t\tcache[this.mesh] = geometry;\r\n\t\t\t\t\t\tthis.cache = cache;\r\n\t\t\t\t\t\tthis.geometry = geometry;\r\n\t\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t\t}, error => {\r\n\t\t\t\t\t\tLogger.warn('GlslCanvas', error);\r\n\t\t\t\t\t\tthis.mode = ContextMode.Flat;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmode = ContextMode.Flat;\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateUniformMesh_ = this.updateUniformMesh__;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tgeometry.create(this.gl, this.program);\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.mode = mode;\r\n\t\tthis.dirty = true;\r\n\t}\r\n\r\n\tpublic setMesh(mesh: string) {\r\n\t\tthis.mesh = mesh;\r\n\t}\r\n}\r\n","import 'promise-polyfill';\r\nimport Buffers, { IOBuffer } from '../buffers/buffers';\r\nimport Context, { ContextMode } from '../context/context';\r\nimport Common from '../core/common';\r\nimport Logger from '../logger/logger';\r\nimport Vector2 from '../math/vector2';\r\nimport Renderer from '../renderer/renderer';\r\nimport Textures, { ITextureData, ITextureOptions, Texture } from '../textures/textures';\r\nimport Uniforms, { IUniformOption, Uniform, UniformMethod, UniformType } from '../uniforms/uniforms';\r\n\r\nexport interface ICanvasOptions extends WebGLContextAttributes {\r\n\tvertexString?: string;\r\n\tfragmentString?: string;\r\n\tbackgroundColor?: string;\r\n\tworkpath?: string;\r\n\tonError?: Function;\r\n\textensions?: string[];\r\n\tmode?: ContextMode;\r\n\tmesh?: string;\r\n\tdoubleSided?: boolean;\r\n}\r\n\r\nexport default class Canvas extends Renderer {\r\n\r\n\toptions: ICanvasOptions;\r\n\tcanvas: HTMLCanvasElement;\r\n\trect: ClientRect | DOMRect;\r\n\twidth: number;\r\n\theight: number;\r\n\tdevicePixelRatio: number;\r\n\tvalid: boolean = false;\r\n\tvisible: boolean = false;\r\n\tcontrols: boolean = false;\r\n\trafId: number;\r\n\tvertexPath: string = '';\r\n\tfragmentPath: string = '';\r\n\r\n\tstatic items: Canvas[] = [];\r\n\r\n\tconstructor(\r\n\t\tcanvas: HTMLCanvasElement,\r\n\t\toptions: ICanvasOptions = {\r\n\t\t\t// alpha: true,\r\n\t\t\t// antialias: true,\r\n\t\t\t// premultipliedAlpha: true\r\n\t\t}\r\n\t) {\r\n\t\tsuper();\r\n\t\tif (!canvas) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.options = options;\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.rect = canvas.getBoundingClientRect();\r\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\r\n\t\tthis.mode = options.mode || ContextMode.Flat;\r\n\t\tthis.mesh = options.mesh || undefined;\r\n\t\tthis.doubleSided = options.doubleSided || false;\r\n\t\tthis.defaultMesh = this.mesh;\r\n\t\tthis.workpath = options.workpath;\r\n\t\tcanvas.style.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\r\n\t\tthis.getShaders_().then((_) => {\r\n\t\t\tthis.load().then(_ => {\r\n\t\t\t\tif (!this.program) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.addListeners_();\r\n\t\t\t\tthis.onLoop();\r\n\t\t\t});\r\n\t\t}, (error) => {\r\n\t\t\tLogger.error('GlslCanvas.getShaders_.error', error);\r\n\t\t});\r\n\t\tCanvas.items.push(this);\r\n\t}\r\n\r\n\tprivate getShaders_(): Promise<string[]> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.vertexString = this.options.vertexString || this.vertexString;\r\n\t\t\tthis.fragmentString = this.options.fragmentString || this.fragmentString;\r\n\t\t\tconst canvas = this.canvas;\r\n\t\t\tconst urls: any = {};\r\n\t\t\tif (canvas.hasAttribute('data-vertex-url')) {\r\n\t\t\t\turls.vertex = canvas.getAttribute('data-vertex-url');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-fragment-url')) {\r\n\t\t\t\turls.fragment = canvas.getAttribute('data-fragment-url');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-vertex')) {\r\n\t\t\t\tthis.vertexString = canvas.getAttribute('data-vertex');\r\n\t\t\t}\r\n\t\t\tif (canvas.hasAttribute('data-fragment')) {\r\n\t\t\t\tthis.fragmentString = canvas.getAttribute('data-fragment');\r\n\t\t\t}\r\n\t\t\tif (Object.keys(urls).length) {\r\n\t\t\t\tPromise.all(Object.keys(urls).map((key) => {\r\n\t\t\t\t\tconst url = Common.getResource(urls[key], this.workpath);\r\n\t\t\t\t\treturn Common.fetch(url)\r\n\t\t\t\t\t\t// .then((response) => response.text())\r\n\t\t\t\t\t\t.then((body) => {\r\n\t\t\t\t\t\t\tconst path = Common.dirname(urls[key]);\r\n\t\t\t\t\t\t\tif (key === 'vertex') {\r\n\t\t\t\t\t\t\t\tthis.vertexPath = path;\r\n\t\t\t\t\t\t\t\treturn this.vertexString = body;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.fragmentPath = path;\r\n\t\t\t\t\t\t\t\treturn this.fragmentString = body;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})).then(_ => {\r\n\t\t\t\t\tresolve([this.vertexString, this.fragmentString]);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve([this.vertexString, this.fragmentString]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate addListeners_(): void {\r\n\t\t/*\r\n\t\tconst resize = (e: Event) => {\r\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t\t\tthis.trigger('resize', e);\r\n\t\t};\r\n\t\t*/\r\n\t\tthis.onScroll = this.onScroll.bind(this);\r\n\t\tthis.onWheel = this.onWheel.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onMove = this.onMove.bind(this);\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this);\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\r\n\t\tthis.onMouseOver = this.onMouseOver.bind(this);\r\n\t\tthis.onMouseOut = this.onMouseOut.bind(this);\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\r\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\r\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\r\n\t\tthis.onLoop = this.onLoop.bind(this);\r\n\t\t// window.addEventListener('resize', this.onResize);\r\n\t\twindow.addEventListener('scroll', this.onScroll);\r\n\t\tdocument.addEventListener('mousemove', this.onMouseMove, false);\r\n\t\tdocument.addEventListener('touchmove', this.onTouchMove);\r\n\t\tthis.addCanvasListeners_();\r\n\t}\r\n\r\n\tprivate addCanvasListeners_() {\r\n\t\tthis.controls = this.canvas.hasAttribute('controls');\r\n\t\tthis.canvas.addEventListener('wheel', this.onWheel);\r\n\t\tthis.canvas.addEventListener('click', this.onClick);\r\n\t\tthis.canvas.addEventListener('mousedown', this.onMouseDown);\r\n\t\tthis.canvas.addEventListener('touchstart', this.onTouchStart);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.addEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.addEventListener('mouseout', this.onMouseOut);\r\n\t\t\tif (!this.canvas.hasAttribute('data-autoplay')) {\r\n\t\t\t\tthis.pause();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeCanvasListeners_() {\r\n\t\tthis.canvas.removeEventListener('wheel', this.onWheel);\r\n\t\tthis.canvas.removeEventListener('click', this.onClick);\r\n\t\tthis.canvas.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tthis.canvas.removeEventListener('mouseup', this.onMouseUp);\r\n\t\tthis.canvas.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tthis.canvas.removeEventListener('touchend', this.onTouchEnd);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeListeners_() {\r\n\t\twindow.cancelAnimationFrame(this.rafId);\r\n\t\t// window.removeEventListener('resize', this.onResize);\r\n\t\twindow.removeEventListener('scroll', this.onScroll);\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t\tthis.removeCanvasListeners_();\r\n\t}\r\n\r\n\tprivate onScroll(_: Event) {\r\n\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t}\r\n\r\n\tprivate onWheel(e: WheelEvent) {\r\n\t\tthis.camera.wheel(e.deltaY);\r\n\t\tthis.dirty = this.mode !== ContextMode.Flat;\r\n\t\tthis.trigger('wheel', e);\r\n\t}\r\n\r\n\tprivate onClick(e: MouseEvent) {\r\n\t\tif (this.controls) {\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t\tthis.trigger('click', e);\r\n\t}\r\n\r\n\tprivate onDown(mx: number, my: number) {\r\n\t\tconst rect = this.rect;\r\n\t\tmx = (mx - rect.left);\r\n\t\tmy = (rect.height - (my - rect.top));\r\n\t\tconst x = mx * this.devicePixelRatio;\r\n\t\tconst y = my * this.devicePixelRatio;\r\n\t\tthis.mouse.x = x;\r\n\t\tthis.mouse.y = y;\r\n\t\tconst min = Math.min(rect.width, rect.height);\r\n\t\tthis.camera.down(mx / min, my / min);\r\n\t\tthis.trigger('down', this.mouse);\r\n\t}\r\n\r\n\tprivate onMove(mx: number, my: number) {\r\n\t\tconst rect = this.rect;\r\n\t\tmx = (mx - rect.left);\r\n\t\tmy = (rect.height - (my - rect.top));\r\n\t\tconst x = mx * this.devicePixelRatio;\r\n\t\tconst y = my * this.devicePixelRatio;\r\n\t\tif (x !== this.mouse.x ||\r\n\t\t\ty !== this.mouse.y) {\r\n\t\t\tthis.mouse.x = x;\r\n\t\t\tthis.mouse.y = y;\r\n\t\t\tconst min = Math.min(rect.width, rect.height);\r\n\t\t\tthis.camera.move(mx / min, my / min);\r\n\t\t\tthis.dirty = this.mode !== ContextMode.Flat && this.camera.mouse !== null;\r\n\t\t\tthis.trigger('move', this.mouse);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onUp(e: Event) {\r\n\t\tthis.camera.up();\r\n\t\tif (this.controls) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.trigger('out', e);\r\n\t}\r\n\r\n\tprivate onMouseDown(e: MouseEvent) {\r\n\t\tthis.onDown(e.clientX, e.clientY);\r\n\t\tdocument.addEventListener('mouseup', this.onMouseUp);\r\n\t\tdocument.removeEventListener('touchstart', this.onTouchStart);\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove);\r\n\t}\r\n\r\n\tprivate onMouseMove(e: MouseEvent) {\r\n\t\tthis.onMove(e.clientX, e.clientY);\r\n\t}\r\n\r\n\tprivate onMouseUp(e: MouseEvent) {\r\n\t\tthis.onUp(e);\r\n\t}\r\n\r\n\tprivate onMouseOver(e: MouseEvent) {\r\n\t\tthis.play();\r\n\t\tthis.trigger('over', e);\r\n\t}\r\n\r\n\tprivate onMouseOut(e: MouseEvent) {\r\n\t\tthis.pause();\r\n\t\tthis.trigger('out', e);\r\n\t}\r\n\r\n\tprivate onTouchStart(e: TouchEvent) {\r\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\r\n\t\t\tp = p || new Vector2();\r\n\t\t\tp.x += touch.clientX;\r\n\t\t\tp.y += touch.clientY;\r\n\t\t\treturn p;\r\n\t\t}, null);\r\n\t\tif (touch) {\r\n\t\t\tthis.onDown(touch.x / e.touches.length, touch.y / e.touches.length);\r\n\t\t}\r\n\t\tif (this.controls) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t\tthis.trigger('over', e);\r\n\t\tdocument.addEventListener('touchend', this.onTouchEnd);\r\n\t\tdocument.removeEventListener('mousedown', this.onMouseDown);\r\n\t\tdocument.removeEventListener('mousemove', this.onMouseMove);\r\n\t\tif (this.controls) {\r\n\t\t\tthis.canvas.removeEventListener('mouseover', this.onMouseOver);\r\n\t\t\tthis.canvas.removeEventListener('mouseout', this.onMouseOut);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTouchMove(e: TouchEvent) {\r\n\t\tconst touch = [].slice.call(e.touches).reduce((p: Vector2, touch: Touch) => {\r\n\t\t\tp = p || new Vector2();\r\n\t\t\tp.x += touch.clientX;\r\n\t\t\tp.y += touch.clientY;\r\n\t\t\treturn p;\r\n\t\t}, null);\r\n\t\tif (touch) {\r\n\t\t\tthis.onMove(touch.x / e.touches.length, touch.y / e.touches.length);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTouchEnd(e: TouchEvent) {\r\n\t\tthis.onUp(e);\r\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd);\r\n\t}\r\n\r\n\tprivate onLoop(_?: number) {\r\n\t\tthis.checkRender();\r\n\t\tthis.rafId = window.requestAnimationFrame(this.onLoop);\r\n\t}\r\n\r\n\tprivate setUniform_(\r\n\t\tkey: string,\r\n\t\tvalues: any[],\r\n\t\toptions: ITextureOptions = {},\r\n\t\ttype: UniformType = null\r\n\t): void {\r\n\t\tconst uniform: Uniform | Uniform[] = Uniforms.parseUniform(key, values, type);\r\n\t\tif (Array.isArray(uniform)) {\r\n\t\t\tif (Uniforms.isArrayOfSampler2D(uniform)) {\r\n\t\t\t\tuniform.forEach((x) => this.loadTexture(x.key, x.values[0], options));\r\n\t\t\t} else {\r\n\t\t\t\tuniform.forEach((x) => this.uniforms.set(x.key, x.values[0]));\r\n\t\t\t}\r\n\t\t} else if (uniform) {\r\n\t\t\tswitch (uniform.type) {\r\n\t\t\t\tcase UniformType.Sampler2D:\r\n\t\t\t\t\tthis.loadTexture(key, values[0], options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.uniforms.set(key, uniform);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isVisible_(): boolean {\r\n\t\tconst rect = this.rect;\r\n\t\treturn (rect.top + rect.height) > 0 && rect.top < (window.innerHeight || document.documentElement.clientHeight);\r\n\t}\r\n\r\n\tprivate isAnimated_(): boolean {\r\n\t\treturn (this.animated || this.textures.animated || this.mode !== ContextMode.Flat) && !this.timer.paused;\r\n\t}\r\n\r\n\tprivate isDirty_(): boolean {\r\n\t\treturn this.dirty || this.uniforms.dirty || this.textures.dirty;\r\n\t}\r\n\r\n\t// check size change at start of requestFrame\r\n\tprivate sizeDidChanged_(): boolean {\r\n\t\tconst gl = this.gl;\r\n\t\tconst CW = Math.ceil(this.canvas.clientWidth),\r\n\t\t\tCH = Math.ceil(this.canvas.clientHeight);\r\n\t\tif (this.width !== CW ||\r\n\t\t\tthis.height !== CH) {\r\n\t\t\tthis.width = CW;\r\n\t\t\tthis.height = CH;\r\n\t\t\t// Lookup the size the browser is displaying the canvas in CSS pixels\r\n\t\t\t// and compute a size needed to make our drawingbuffer match it in\r\n\t\t\t// device pixels.\r\n\t\t\tconst W = Math.ceil(CW * this.devicePixelRatio);\r\n\t\t\tconst H = Math.ceil(CH * this.devicePixelRatio);\r\n\t\t\tthis.W = W;\r\n\t\t\tthis.H = H;\r\n\t\t\tthis.canvas.width = W;\r\n\t\t\tthis.canvas.height = H;\r\n\t\t\t/*\r\n\t\t\tif (gl.canvas.width !== W ||\r\n\t\t\t\tgl.canvas.height !== H) {\r\n\t\t\t\tgl.canvas.width = W;\r\n\t\t\t\tgl.canvas.height = H;\r\n\t\t\t\t// Set the viewport to match\r\n\t\t\t\t// gl.viewport(0, 0, W, H);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\t\tbuffer.resize(gl, W, H);\r\n\t\t\t});\r\n\t\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t\t\tthis.trigger('resize');\r\n\t\t\t// gl.useProgram(this.program);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate parseTextures_(fragmentString: string): boolean {\r\n\t\tconst regexp = /uniform\\s*sampler2D\\s*([\\w]*);(\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_|\\?|\\&|\\=]*)|\\s*)/gm;\r\n\t\tlet matches;\r\n\t\twhile ((matches = regexp.exec(fragmentString)) !== null) {\r\n\t\t\tconst key = matches[1];\r\n\t\t\tconst url = matches[3];\r\n\t\t\tif (Texture.isTextureUrl(url)) {\r\n\t\t\t\tthis.textureList.push({ key, url });\r\n\t\t\t} else if (!this.buffers.has(key)) {\r\n\t\t\t\t// create empty texture\r\n\t\t\t\tthis.textureList.push({ key, url: null });\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.canvas.hasAttribute('data-textures')) {\r\n\t\t\tconst urls = this.canvas.getAttribute('data-textures').split(',');\r\n\t\t\turls.forEach((url: string, i: number) => {\r\n\t\t\t\tconst key = 'u_texture' + i;\r\n\t\t\t\tthis.textureList.push({ key, url });\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this.textureList.length > 0;\r\n\t}\r\n\r\n\tload(\r\n\t\tfragmentString?: string,\r\n\t\tvertexString?: string\r\n\t): Promise<boolean> {\r\n\t\tconst fragmentVertexString: string = Context.getFragmentVertex(this.gl, fragmentString || this.fragmentString);\r\n\t\treturn Promise.all([\r\n\t\t\tContext.getIncludes(fragmentString || this.fragmentString, this.fragmentPath === '' ? this.workpath : this.fragmentPath),\r\n\t\t\tContext.getIncludes(fragmentVertexString || vertexString || this.vertexString, this.vertexPath === '' ? this.workpath : this.vertexPath)\r\n\t\t]).then(array => {\r\n\t\t\tthis.fragmentString = array[0];\r\n\t\t\tthis.vertexString = array[1];\r\n\t\t\treturn this.createContext_();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate getContext_(): WebGLRenderingContext | WebGL2RenderingContext {\r\n\t\tconst vertexString = this.vertexString;\r\n\t\tconst fragmentString = this.fragmentString;\r\n\t\tthis.vertexString = Context.getVertex(vertexString, fragmentString, this.mode);\r\n\t\tthis.fragmentString = Context.getFragment(vertexString, fragmentString, this.mode);\r\n\t\tif (Context.versionDiffers(this.gl, vertexString, fragmentString)) {\r\n\t\t\tthis.destroyContext_();\r\n\t\t\tthis.swapCanvas_();\r\n\t\t\tthis.uniforms = new Uniforms();\r\n\t\t\tthis.buffers = new Buffers();\r\n\t\t\tthis.textures = new Textures();\r\n\t\t\tthis.textureList = [];\r\n\t\t}\r\n\t\tif (!this.gl) {\r\n\t\t\tconst gl = Context.tryInferContext(vertexString, fragmentString, this.canvas, this.options, this.options.extensions, this.options.onError);\r\n\t\t\tif (!gl) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.gl = gl;\r\n\t\t}\r\n\t\treturn this.gl;\r\n\t}\r\n\r\n\tprivate createContext_(): boolean {\r\n\t\tconst gl = this.getContext_();\r\n\t\tif (!gl) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet vertexShader, fragmentShader;\r\n\t\ttry {\r\n\t\t\tContext.inferPrecision(this.fragmentString);\r\n\t\t\tvertexShader = Context.createShader(gl, this.vertexString, gl.VERTEX_SHADER);\r\n\t\t\tfragmentShader = Context.createShader(gl, this.fragmentString, gl.FRAGMENT_SHADER);\r\n\t\t\t// If Fragment shader fails load a empty one to sign the error\r\n\t\t\tif (!fragmentShader) {\r\n\t\t\t\tconst defaultFragment = Context.getFragment(null, null, this.mode);\r\n\t\t\t\tfragmentShader = Context.createShader(gl, defaultFragment, gl.FRAGMENT_SHADER);\r\n\t\t\t\tthis.valid = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.valid = true;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// !!!\r\n\t\t\t// console.error(e);\r\n\t\t\tthis.trigger('error', e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Create and use program\r\n\t\tconst program = Context.createProgram(gl, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\r\n\t\tif (!program) {\r\n\t\t\tthis.trigger('error', Context.lastError);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// console.log(this.vertexString, this.fragmentString, program);\r\n\t\t// Delete shaders\r\n\t\t// gl.detachShader(program, vertexShader);\r\n\t\t// gl.detachShader(program, fragmentShader);\r\n\t\tgl.deleteShader(vertexShader);\r\n\t\tgl.deleteShader(fragmentShader);\r\n\t\tthis.program = program;\r\n\t\tif (this.valid) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.buffers = Buffers.getBuffers(gl, this.fragmentString, Context.getBufferVertex(gl));\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// console.error('load', e);\r\n\t\t\t\tthis.valid = false;\r\n\t\t\t\tthis.trigger('error', e);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.create_();\r\n\t\t\tif (this.animated) {\r\n\t\t\t\tthis.canvas.classList.add('animated');\r\n\t\t\t} else {\r\n\t\t\t\tthis.canvas.classList.remove('animated');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Trigger event\r\n\t\tthis.trigger('load', this);\r\n\t\treturn this.valid;\r\n\t}\r\n\r\n\tprotected create_(): void {\r\n\t\tthis.parseMode_();\r\n\t\tthis.parseMesh_();\r\n\t\tsuper.create_();\r\n\t\tthis.createBuffers_();\r\n\t\tthis.createTextures_();\r\n\t}\r\n\r\n\tprotected parseMode_() {\r\n\t\tif (this.canvas.hasAttribute('data-mode')) {\r\n\t\t\tconst data = this.canvas.getAttribute('data-mode');\r\n\t\t\tif (['flat', 'box', 'sphere', 'torus', 'mesh'].indexOf(data) !== -1) {\r\n\t\t\t\tthis.mode = data as ContextMode;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected parseMesh_() {\r\n\t\tif (this.canvas.hasAttribute('data-mesh')) {\r\n\t\t\tconst data = this.canvas.getAttribute('data-mesh');\r\n\t\t\tif (data.indexOf('.obj') !== -1) {\r\n\t\t\t\tthis.mesh = this.defaultMesh = data;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createBuffers_() {\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tthis.uniforms.create(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected createTextures_() {\r\n\t\tconst hasTextures = this.parseTextures_(this.fragmentString);\r\n\t\tif (hasTextures) {\r\n\t\t\tthis.textureList.filter(x => x.url).forEach(x => {\r\n\t\t\t\tthis.setTexture(x.key, x.url, x.options);\r\n\t\t\t});\r\n\t\t\tthis.textureList = [];\r\n\t\t}\r\n\t}\r\n\r\n\tprotected update_(): void {\r\n\t\tsuper.update_();\r\n\t\tthis.updateBuffers_();\r\n\t\tthis.updateTextures_();\r\n\t}\r\n\r\n\tprotected updateBuffers_(): void {\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, buffer.key, [buffer.input.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected updateTextures_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tObject.keys(this.textures.values).forEach((key) => {\r\n\t\t\tconst texture: Texture = this.textures.values[key];\r\n\t\t\ttexture.tryUpdate(gl);\r\n\t\t\tthis.uniforms.update(UniformMethod.Uniform1i, UniformType.Sampler2D, texture.key, [texture.index]);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate destroyContext_(): void {\r\n\t\tconst gl = this.gl;\r\n\t\tgl.useProgram(null);\r\n\t\tif (this.program) {\r\n\t\t\tgl.deleteProgram(this.program);\r\n\t\t}\r\n\t\tObject.keys(this.buffers.values).forEach((key) => {\r\n\t\t\tconst buffer: IOBuffer = this.buffers.values[key];\r\n\t\t\tbuffer.destroy(gl);\r\n\t\t});\r\n\t\tObject.keys(this.textures.values).forEach((key) => {\r\n\t\t\tconst texture: Texture = this.textures.values[key];\r\n\t\t\ttexture.destroy(gl);\r\n\t\t});\r\n\t\tthis.buffers = null;\r\n\t\tthis.textures = null;\r\n\t\tthis.uniforms = null;\r\n\t\tthis.program = null;\r\n\t\tthis.gl = null;\r\n\t}\r\n\r\n\tprivate swapCanvas_(): void {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst canvas_ = canvas.cloneNode() as HTMLCanvasElement;\r\n\t\tcanvas.parentNode.replaceChild(canvas_, canvas);\r\n\t\tthis.canvas = canvas_;\r\n\t\tthis.addCanvasListeners_();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis.removeListeners_();\r\n\t\tthis.destroyContext_();\r\n\t\tthis.animated = false;\r\n\t\tthis.valid = false;\r\n\t\tconst index = Canvas.items.indexOf(this);\r\n\t\tif (index !== -1) {\r\n\t\t\tCanvas.items.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tloadTexture(\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t) {\r\n\t\tif (this.valid) {\r\n\t\t\t// Logger.log('GlslCanvas.loadTexture', key, urlElementOrData);\r\n\t\t\tthis.textures.createOrUpdate(this.gl, key, urlElementOrData, this.buffers.count, options, this.options.workpath).then(\r\n\t\t\t\ttexture => {\r\n\t\t\t\t\tconst index = texture.index;\r\n\t\t\t\t\tconst uniform = this.uniforms.createTexture(key, index);\r\n\t\t\t\t\tuniform.texture = texture;\r\n\t\t\t\t\tconst keyResolution = key.indexOf('[') !== -1 ? key.replace('[', 'Resolution[') : key + 'Resolution';\r\n\t\t\t\t\t// const uniformResolution = ;\r\n\t\t\t\t\tthis.uniforms.create(UniformMethod.Uniform2f, UniformType.Float, keyResolution, [texture.width, texture.height]);\r\n\t\t\t\t\t// Logger.log('loadTexture', key, url, index, texture.width, texture.height);\r\n\t\t\t\t\treturn texture;\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tconst message = Array.isArray(error.path) ? error.path.map((x: any) => x.error ? x.error.message : '').join(', ') : error.message;\r\n\t\t\t\t\tLogger.error('GlslCanvas.loadTexture.error', key, urlElementOrData, message);\r\n\t\t\t\t\tthis.trigger('textureError', { key, urlElementOrData, message });\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.textureList.push({ key, url: urlElementOrData, options });\r\n\t\t}\r\n\t}\r\n\r\n\tsetTexture(\r\n\t\tkey: string,\r\n\t\turlElementOrData: string | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | Element | ITextureData,\r\n\t\toptions: ITextureOptions = {}\r\n\t): void {\r\n\t\treturn this.setUniform_(key, [urlElementOrData], options);\r\n\t}\r\n\r\n\tsetUniform(key: string, ...values: any[]): void {\r\n\t\treturn this.setUniform_(key, values);\r\n\t}\r\n\r\n\tsetUniformOfInt(key: string, values: any[]): void {\r\n\t\treturn this.setUniform_(key, values, null, UniformType.Int);\r\n\t}\r\n\r\n\tsetUniforms(values: IUniformOption): void {\r\n\t\tObject.keys(values).forEach((key) => {\r\n\t\t\tthis.setUniform(key, values[key]);\r\n\t\t});\r\n\t}\r\n\r\n\tpause(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tthis.timer.pause();\r\n\t\t\tthis.canvas.classList.add('paused');\r\n\t\t\tthis.trigger('pause');\r\n\t\t}\r\n\t}\r\n\r\n\tplay(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tthis.timer.play();\r\n\t\t\tthis.canvas.classList.remove('paused');\r\n\t\t\tthis.trigger('play');\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(): void {\r\n\t\tif (this.valid) {\r\n\t\t\tif (this.timer.paused) {\r\n\t\t\t\tthis.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.pause();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcheckRender(): void {\r\n\t\tif (this.isVisible_() && (this.sizeDidChanged_() || this.isDirty_() || this.isAnimated_())) {\r\n\t\t\tthis.render();\r\n\t\t\tthis.canvas.classList.add('playing');\r\n\t\t} else {\r\n\t\t\tthis.canvas.classList.remove('playing');\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\ttest(\r\n\t\tfragmentString?: string,\r\n\t\tvertexString?: string\r\n\t): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst vertex = this.vertexString;\r\n\t\t\tconst fragment = this.fragmentString;\r\n\t\t\tconst paused = this.timer.paused;\r\n\t\t\t// Thanks to @thespite for the help here\r\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\r\n\t\t\tconst extension = this.gl.getExtension('EXT_disjoint_timer_query');\r\n\t\t\tconst query = extension.createQueryEXT();\r\n\t\t\tlet wasValid = this.valid;\r\n\t\t\tif (fragmentString || vertexString) {\r\n\t\t\t\tthis.load(fragmentString, vertexString);\r\n\t\t\t\twasValid = this.valid;\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t\tthis.timer.paused = true;\r\n\t\t\textension.beginQueryEXT(extension.TIME_ELAPSED_EXT, query);\r\n\t\t\tthis.render();\r\n\t\t\textension.endQueryEXT(extension.TIME_ELAPSED_EXT);\r\n\t\t\tconst waitForTest = () => {\r\n\t\t\t\tthis.render();\r\n\t\t\t\tconst available = extension.getQueryObjectEXT(query, extension.QUERY_RESULT_AVAILABLE_EXT);\r\n\t\t\t\tconst disjoint = this.gl.getParameter(extension.GPU_DISJOINT_EXT);\r\n\t\t\t\tif (available && !disjoint) {\r\n\t\t\t\t\tconst result = {\r\n\t\t\t\t\t\twasValid: wasValid,\r\n\t\t\t\t\t\tfragment: fragmentString || this.fragmentString,\r\n\t\t\t\t\t\tvertex: vertexString || this.vertexString,\r\n\t\t\t\t\t\ttimeElapsedMs: extension.getQueryObjectEXT(query, extension.QUERY_RESULT_EXT) / 1000000.0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.timer.paused = paused;\r\n\t\t\t\t\tif (fragmentString || vertexString) {\r\n\t\t\t\t\t\tthis.load(fragment, vertex);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(result);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.requestAnimationFrame(waitForTest);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twaitForTest();\r\n\t\t});\r\n\t}\r\n\t*/\r\n\r\n}\r\n\r\n","export { Buffer, BufferFloatType, default as Buffers, IOBuffer } from './buffers/buffers';\r\nexport { default as OrbitCamera } from './camera/orbit-camera';\r\nexport { default as Canvas, ICanvasOptions } from './canvas/canvas';\r\nexport { default as CanvasTimer } from './canvas/canvas-timer';\r\nexport { DefaultWebGL2BufferFragment, DefaultWebGL2BufferVertex, DefaultWebGL2FlatFragment, DefaultWebGL2MeshFragment, DefaultWebGL2MeshVertex, DefaultWebGLBufferFragment, DefaultWebGLBufferVertex, DefaultWebGLFlatFragment, DefaultWebGLMeshFragment, DefaultWebGLMeshVertex } from './context/chunks';\r\nexport { ContextError, ContextVersion, ContextVertexBuffers, default as Context } from './context/context';\r\nexport { default as Common } from './core/common';\r\nexport { default as IterableStringMap } from './core/iterable';\r\nexport { default as Subscriber, Listener } from './core/subscriber';\r\nexport { default as BoxGeometry } from './geometry/box-geometry';\r\nexport { default as FlatGeometry } from './geometry/flat-geometry';\r\nexport { default as Geometry } from './geometry/geometry';\r\nexport { default as SphereGeometry } from './geometry/sphere-geometry';\r\nexport { default as TorusGeometry } from './geometry/torus-geometry';\r\nexport { default as ObjLoader } from './loaders/obj-loader';\r\nexport { default as Logger } from './logger/logger';\r\nexport { default as Vector2 } from './math/vector2';\r\nexport { default as Vector3 } from './math/vector3';\r\nexport { default as Renderer } from './renderer/renderer';\r\nexport { default as Textures, isTextureData, ITextureData, ITextureInput, ITextureOptions, Texture, TextureExtensions, TextureFilteringType, TextureImageExtensions, TextureSourceType, TextureVideoExtensions } from './textures/textures';\r\nexport { default as Uniforms, IUniformOption, METHODS_FLOAT, METHODS_FLOATV, METHODS_INT, METHODS_INTV, Uniform, UniformMethod, UniformTexture, UniformType } from './uniforms/uniforms';\r\n\r\nimport Canvas, { ICanvasOptions } from './canvas/canvas';\r\n\r\nexport function of(canvas: HTMLCanvasElement, options?: ICanvasOptions): Canvas {\r\n\treturn Canvas.items.find(x => x.canvas === canvas) || new Canvas(canvas, options);\r\n}\r\n\r\nexport function loadAll(): Canvas[] {\r\n\tconst canvases: HTMLCanvasElement[] = <HTMLCanvasElement[]>[].slice.call(document.getElementsByClassName('glsl-canvas')).filter((x: HTMLElement) => x instanceof HTMLCanvasElement);\r\n\treturn canvases.map(x => of(x));\r\n}\r\n\r\nif (typeof window === 'object') {\r\n\tdocument.addEventListener('DOMContentLoaded', () => {\r\n\t\tloadAll();\r\n\t});\r\n}\r\n"]}